{"version":3,"file":"4608.bfb3efa51ecdc1bd.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-float.ts"],"sourcesContent":["import type { TemplateResult, PropertyValues } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HaTextField } from \"../ha-textfield\";\nimport \"../ha-textfield\";\nimport type {\n  HaFormElement,\n  HaFormFloatData,\n  HaFormFloatSchema,\n} from \"./types\";\nimport type { LocalizeFunc } from \"../../common/translations/localize\";\n\n@customElement(\"ha-form-float\")\nexport class HaFormFloat extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property({ attribute: false }) public schema!: HaFormFloatSchema;\n\n  @property({ attribute: false }) public data!: HaFormFloatData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-textfield\") private _input?: HaTextField;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-textfield\n        type=\"numeric\"\n        inputMode=\"decimal\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${this.schema.description?.suffix}\n        .validationMessage=${this.schema.required\n          ? this.localize?.(\"ui.common.error_required\")\n          : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"schema\")) {\n      this.toggleAttribute(\"own-margin\", !!this.schema.required);\n    }\n  }\n\n  private _valueChanged(ev: Event) {\n    const source = ev.target as HaTextField;\n    const rawValue = source.value.replace(\",\", \".\");\n\n    let value: number | undefined;\n\n    if (rawValue.endsWith(\".\")) {\n      return;\n    }\n\n    // Allow user to start typing a negative value\n    if (rawValue === \"-\") {\n      return;\n    }\n\n    if (rawValue !== \"\") {\n      value = parseFloat(rawValue);\n      if (isNaN(value)) {\n        value = undefined;\n      }\n    }\n\n    // Detect anything changed\n    if (this.data === value) {\n      // parseFloat will drop invalid text at the end, in that case update textfield\n      const newRawValue = value === undefined ? \"\" : String(value);\n      if (source.value !== newRawValue) {\n        source.value = newRawValue;\n      }\n      return;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  static styles = css`\n    :host([own-margin]) {\n      margin-bottom: 5px;\n    }\n    ha-textfield {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-float\": HaFormFloat;\n  }\n}\n"],"names":["HaFormFloat","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","query","this","_input","focus","_this$schema$descript","_this$localize","html","_t","_","label","helper","undefined","data","disabled","schema","required","description","suffix","localize","call","_valueChanged","changedProps","has","toggleAttribute","ev","source","target","rawValue","replace","endsWith","parseFloat","isNaN","fireEvent","newRawValue","String","static","css","_t2","LitElement"],"mappings":"wTAcaA,GAAWC,EAAAA,EAAAA,GAAA,EADvBC,EAAAA,EAAAA,IAAc,mBAAgB,SAAAC,EAAAC,GA8F9B,OAAAC,EA9FD,cACwBD,EAA6CE,WAAAA,IAAAC,GAAA,SAAAA,GAAAJ,EAAA,QAA7CK,EAAA,EAAAC,KAAA,QAAAC,WAAA,EACrBC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,WAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,SAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,IAAS,CAAEC,WAAW,KAAQC,IAAA,OAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAE9BC,EAAAA,EAAAA,OAAUE,IAAA,QAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,OAAUE,IAAA,SAAAC,WAAA,IAAAL,KAAA,QAAAC,WAAA,EAEVC,EAAAA,EAAAA,IAAS,CAAEI,KAAMC,WAAUH,IAAA,WAAAC,KAAAA,GAAA,OAAmB,CAAK,IAAAL,KAAA,QAAAC,WAAA,EAEnDO,EAAAA,EAAAA,IAAM,iBAAeJ,IAAA,SAAAC,WAAA,IAAAL,KAAA,SAAAI,IAAA,QAAAC,MAEtB,WACMI,KAAKC,QACPD,KAAKC,OAAOC,OAEhB,GAAC,CAAAX,KAAA,SAAAI,IAAA,SAAAC,MAED,WAAmC,IAAAO,EAAAC,EACjC,OAAOC,EAAAA,EAAAA,IAAIC,IAAAA,EAAAC,CAAA;;;;iBAAA;kBAAA;;iBAAA;oBAAA;oBAAA;wBAAA;kBAAA;6BAAA;iBAAA;;OAIEP,KAAKQ,MACJR,KAAKS,YAEQC,IAAdV,KAAKW,KAAqBX,KAAKW,KAAO,GACnCX,KAAKY,SACLZ,KAAKa,OAAOC,SACRd,KAAKa,OAAOC,SACK,QADGX,EAC1BH,KAAKa,OAAOE,mBAAW,IAAAZ,OAAA,EAAvBA,EAAyBa,OACdhB,KAAKa,OAAOC,SAChB,QADwBV,EACrCJ,KAAKiB,gBAAQ,IAAAb,OAAA,EAAbA,EAAAc,KAAAlB,KAAgB,iCAChBU,EACKV,KAAKmB,cAGpB,GAAC,CAAA5B,KAAA,SAAAI,IAAA,UAAAC,MAED,SAAkBwB,GACZA,EAAaC,IAAI,WACnBrB,KAAKsB,gBAAgB,eAAgBtB,KAAKa,OAAOC,SAErD,GAAC,CAAAvB,KAAA,SAAAI,IAAA,gBAAAC,MAED,SAAsB2B,GACpB,MAAMC,EAASD,EAAGE,OACZC,EAAWF,EAAO5B,MAAM+B,QAAQ,IAAK,KAE3C,IAAI/B,EAEJ,IAAI8B,EAASE,SAAS,MAKL,MAAbF,EAYJ,GARiB,KAAbA,IACF9B,EAAQiC,WAAWH,GACfI,MAAMlC,KACRA,OAAQc,IAKRV,KAAKW,OAASf,GASlBmC,EAAAA,EAAAA,GAAU/B,KAAM,gBAAiB,CAC/BJ,cAVF,CAEE,MAAMoC,OAAwBtB,IAAVd,EAAsB,GAAKqC,OAAOrC,GAClD4B,EAAO5B,QAAUoC,IACnBR,EAAO5B,MAAQoC,EAGnB,CAKF,GAAC,CAAAzC,KAAA,QAAA2C,QAAA,EAAAvC,IAAA,SAAAC,KAAAA,GAAA,OAEeuC,EAAAA,EAAAA,IAAGC,IAAAA,EAAA7B,CAAA;;;;;;;KAAA,OArFY8B,EAAAA,G"}