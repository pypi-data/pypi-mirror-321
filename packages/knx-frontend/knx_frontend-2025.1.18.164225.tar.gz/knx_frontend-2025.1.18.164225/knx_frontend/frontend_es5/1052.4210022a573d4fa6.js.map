{"version":3,"file":"1052.4210022a573d4fa6.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-trigger.ts","webpack://knx-frontend/mwc-checkbox.ts","webpack://knx-frontend/mwc-check-list-item-base.ts","webpack://knx-frontend/mwc-control-list-item.css.ts","webpack://knx-frontend/../src/directives/guard.ts"],"sourcesContent":["import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport type { Trigger } from \"../../data/automation\";\nimport { migrateAutomationTrigger } from \"../../data/automation\";\nimport type { TriggerSelector } from \"../../data/selector\";\nimport \"../../panels/config/automation/trigger/ha-automation-trigger\";\nimport type { HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-selector-trigger\")\nexport class HaTriggerSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: TriggerSelector;\n\n  @property({ attribute: false }) public value?: Trigger;\n\n  @property() public label?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  private _triggers = memoizeOne((trigger: Trigger | undefined) => {\n    if (!trigger) {\n      return [];\n    }\n    return migrateAutomationTrigger(trigger);\n  });\n\n  protected render() {\n    return html`\n      ${this.label ? html`<label>${this.label}</label>` : nothing}\n      <ha-automation-trigger\n        .disabled=${this.disabled}\n        .triggers=${this._triggers(this.value)}\n        .hass=${this.hass}\n      ></ha-automation-trigger>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-automation-trigger {\n        display: block;\n        margin-bottom: 16px;\n      }\n      label {\n        display: block;\n        margin-bottom: 4px;\n        font-weight: 500;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-trigger\": HaTriggerSelector;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {CheckboxBase} from './mwc-checkbox-base.js';\nimport {styles} from './mwc-checkbox.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-checkbox': Checkbox;\n  }\n}\n\n/** @soyCompatible */\n@customElement('mwc-checkbox')\nexport class Checkbox extends CheckboxBase {\n  static override styles = [styles];\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport '@material/mwc-checkbox/mwc-checkbox.js';\n\nimport {Checkbox} from '@material/mwc-checkbox/mwc-checkbox.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {GraphicType, ListItemBase} from './mwc-list-item-base.js';\n\nexport class CheckListItemBase extends ListItemBase {\n  @query('slot') protected override slotElement!: HTMLSlotElement|null;\n  @query('mwc-checkbox') protected checkboxElement!: Checkbox;\n\n  @property({type: Boolean}) left = false;\n  @property({type: String, reflect: true})\n  override graphic: GraphicType = 'control';\n\n  override render() {\n    const checkboxClasses = {\n      'mdc-deprecated-list-item__graphic': this.left,\n      'mdc-deprecated-list-item__meta': !this.left,\n    };\n\n    const text = this.renderText();\n    const graphic = this.graphic && this.graphic !== 'control' && !this.left ?\n        this.renderGraphic() :\n        html``;\n    const meta = this.hasMeta && this.left ? this.renderMeta() : html``;\n    const ripple = this.renderRipple();\n\n    return html`\n      ${ripple}\n      ${graphic}\n      ${this.left ? '' : text}\n      <span class=${classMap(checkboxClasses)}>\n        <mwc-checkbox\n            reducedTouchTarget\n            tabindex=${this.tabindex}\n            .checked=${this.selected}\n            ?disabled=${this.disabled}\n            @change=${this.onChange}>\n        </mwc-checkbox>\n      </span>\n      ${this.left ? text : ''}\n      ${meta}`;\n  }\n\n  protected async onChange(evt: Event) {\n    const checkbox = evt.target as Checkbox;\n    const changeFromProp = this.selected === checkbox.checked;\n\n    if (!changeFromProp) {\n      this._skipPropRequest = true;\n      this.selected = checkbox.checked;\n      await this.updateComplete;\n      this._skipPropRequest = false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport {css} from 'lit';\nexport const styles = css`:host(:not([twoline])){height:56px}:host(:not([left])) .mdc-deprecated-list-item__meta{height:40px;width:40px}`;\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {noChange, Part} from '../lit-html.js';\nimport {directive, Directive, DirectiveParameters} from '../directive.js';\n\n// A sentinel that indicates guard() hasn't rendered anything yet\nconst initialValue = {};\n\nclass GuardDirective extends Directive {\n  private _previousValue: unknown = initialValue;\n\n  render(_value: unknown, f: () => unknown) {\n    return f();\n  }\n\n  override update(_part: Part, [value, f]: DirectiveParameters<this>) {\n    if (Array.isArray(value)) {\n      // Dirty-check arrays by item\n      if (\n        Array.isArray(this._previousValue) &&\n        this._previousValue.length === value.length &&\n        value.every((v, i) => v === (this._previousValue as Array<unknown>)[i])\n      ) {\n        return noChange;\n      }\n    } else if (this._previousValue === value) {\n      // Dirty-check non-arrays by identity\n      return noChange;\n    }\n\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    const r = this.render(value, f);\n    return r;\n  }\n}\n\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Values are checked against previous values with strict equality (`===`), and\n * so the check won't detect nested property changes inside objects or arrays.\n * Arrays values have each item checked against the previous value at the same\n * index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * `\n * ```\n *\n * In this case, the template only rerenders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * `\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive(GuardDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {GuardDirective};\n"],"names":["HaTriggerSelector","_decorate","customElement","_initialize","_LitElement","F","constructor","args","d","kind","decorators","property","attribute","key","value","type","Boolean","reflect","memoizeOne","trigger","migrateAutomationTrigger","html","_t","_","this","label","_t2","nothing","disabled","_triggers","hass","static","css","_t3","LitElement","Checkbox","CheckboxBase","styles","__decorate","CheckListItemBase","ListItemBase","left","graphic","render","checkboxClasses","text","renderText","renderGraphic","meta","hasMeta","renderMeta","ripple","renderRipple","classMap","tabindex","selected","onChange","evt","checkbox","target","checked","_skipPropRequest","updateComplete","query","String","e","i","t","s","arguments","st","r","update","Array","isArray","length","every","from"],"mappings":"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"}