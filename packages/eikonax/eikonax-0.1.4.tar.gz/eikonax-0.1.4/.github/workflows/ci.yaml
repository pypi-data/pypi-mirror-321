# -- Github Workflow for Continuous Integration ----------------------------------------------------
# Intended to be used on push for PR to main
# This workflow will:
# 1. Format code with Ruff
# 2. Run tests with Pytest
name: CI
run-name: Continuous Integration for main branch

# -- Trigger Events --------------------------------------------------------------------------------
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# -- Jobs ------------------------------------------------------------------------------------------
jobs:
  # Format code with Ruff
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v4
      - name: Install uv
        id: setup-uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Format code with Ruff
        id: format-ruff
        run: |
          uv sync --only-group style
          uv run ruff format

  #Build documentation without deploying
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v4
      - name: Install uv
        id: setup-uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install dependencies
        id: install-deps
        run: uv sync --only-group docs
      - name: Build MkDocs documentation
        id: build-docs
        run: uv run mkdocs build

  # Run tests with Pytest
  test:
    runs-on: ubuntu-latest
    environment: codecov
    steps:
      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v4
      - name: Install uv
        id: setup-uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install dependencies
        id: install-deps
        run: uv sync --group test
      - name: Run tests with Pytest
        id: run-tests
        run: uv run pytest --cov-branch --cov-report=xml
      - name: Upload coverage report
        id: upload-coverage
        if: ${{ github.event_name == 'push' }}
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
