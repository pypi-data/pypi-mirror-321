# automatically generated by auxilium
fail_fast: false
repos:
{{ aux.pre_commit.custom }}
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: {{ aux.versions.pre_commit_hooks.split("==",1)[1] }}
    hooks:
    -   id: check-yaml
        name: check-yaml      - check yaml syntax
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: {{ aux.versions.pre_commit_hooks.split("==",1)[1] }}
    hooks:
    -   id: check-toml
        name: check-toml      - check toml syntax
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: {{ aux.versions.pre_commit_hooks.split("==",1)[1] }}
    hooks:
    -   id: check-json
        name: check-json      - check json syntax
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: {{ aux.versions.pre_commit_hooks.split("==",1)[1] }}
    hooks:
    -   id: end-of-file-fixer
        name: eof-fixer       - fix end of files
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: {{ aux.versions.pre_commit_hooks.split("==",1)[1] }}
    hooks:
    -   id: trailing-whitespace
        name: trailing-ws     - trim trailing whitespace
-   repo: https://github.com/psf/black
    rev: {{ aux.versions.black.split("==",1)[1] }}
    hooks:
    -   id: black
        name: black           - code formatter without configuration
-   repo: https://github.com/asottile/blacken-docs
    rev: {{ aux.versions.blacken_docs.split("==",1)[1] }}
    hooks:
    -   id: blacken-docs
        name: blacken-docs    - use black in docstrings and documentation
        additional_dependencies:
        - {{ aux.versions.black }}
-   repo: local
    hooks:
    -   id: blacken-docs-local
        name: blacken-docs    - use black in docstrings and documentation (locally)
        entry: blacken-docs
        language: python
        language_version: python3
        files: '\.(rst|md|markdown|py|tex)$'
-   repo: https://github.com/asottile/pyupgrade
    rev: {{ aux.versions.pyupgrade.split("==",1)[1] }}
    hooks:
    -   id: pyupgrade
        name: pyupgrade       - replaces old language syntax to modern version
        args:
        - --py{{ aux.python_project.minimal_version_slug }}-plus
-   repo: https://github.com/hadialqattan/pycln
    rev: {{ aux.versions.pycln.split("==",1)[1] }}
    hooks:
    -   id: pycln
        name: pycln           - removes unused imports
        args:
        - --config=setup.cfg
        - --exclude=__init__.py
        - --all
        exclude: __init__.py
-   repo: https://github.com/asottile/reorder_python_imports
    rev: {{ aux.versions.reorder_python_imports.split("==",1)[1] }}
    hooks:
    -   id: reorder-python-imports
        name: reo-py-imp      - reorder python imports
        args:
        - --py{{ aux.python_project.minimal_version_slug }}-plus
-   repo: https://github.com/pycqa/isort
    rev: {{ aux.versions.isort.split("==",1)[1] }}
    hooks:
    -   id: isort
        name: isort           - reorders python imports
        args:
        - --profile
        - black
        - --filter-files
        - --project
        - {{ aux.project.name }}
-   repo: local
    hooks:
    -   id: adaux-bake
        name: adaux-bake      - generate all support files from auxilium
        entry: adaux pre-commit-bake
        language: system
        files: "auxilium.yml|auxilium.yaml"
-   repo: local
    hooks:
    -   id: mypy
        name: mypy            - static type analysis
        entry: mypy
        language: system
        types:
        - python
        args:
        - --config-file
        - devops/pre-commit/mypy.ini
        - --cache-dir
        - devops/cache/mypy
        exclude: devops/|playground/|tests/
-   repo: local
    hooks:
    -   id: pylint
        name: pylint          - python style enforcer
        entry: pylint
        language: system
        args:
        - --rcfile=devops/pre-commit/pylintrc
        types:
        - python
        exclude: devops/|playground/
-   repo: local
    hooks:
    -   id: pylint-test
        name: pylint-test     - python style enforcer for tests
        entry: pylint
        language: system
        args:
        - --rcfile=devops/pre-commit/pylint-testrc
        types:
        - python
        exclude: devops/|playground/
-   repo: local
    hooks:
    -   id: ruff
        name: ruff            - python style enforcer
        entry: ruff check
        language: system
        args:
        - --config=devops/pre-commit/ruff.toml
        - --fix
        types:
        - python
        exclude: devops/|playground/
-   repo: local
    hooks:
    -   id: ruff-test
        name: ruff-test       - python style enforcer for tests
        entry: ruff check
        language: system
        args:
        - --config=devops/pre-commit/ruff-test.toml
        - --fix
        types:
        - python
        exclude: devops/|playground/
-   repo: local
    hooks:
    -   id: ruff-format
        name: ruff-forma t    - format python code
        entry: ruff format
        language: system
        args:
        - --config=devops/pre-commit/ruff.toml
        types:
        - python
-   repo: local
    hooks:
    -   id: add-copy-right
        name: add-copy-right  - add copyright line
        entry: devops/pre-commit/add_copy_right.py
        language: system
        exclude: devops/|playground/
- repo: https://github.com/IamTheFij/ansible-pre-commit
  rev: {{ aux.versions.encryption_check.split("==",1)[1] }}
  hooks:
  - id: encryption-check
    name: ansible         - make sure no vault is unencrypted
- repo: https://github.com/HunterMcGushion/docstr_coverage
  rev: {{ aux.versions.docstr_coverage.split("==",1)[1] }}
  hooks:
  - id: docstr-coverage
    name: docstr-coverage - ensure documentation above {{ aux.pre_commit.hooks.get("docstr-coverage", {}).get("coverage", 90) }}%
    args:
    - --fail-under
    - "{{ aux.pre_commit.hooks.get("docstr-coverage", {}).get("coverage", 90) }}"
    - {{ aux.project.name.replace(".", "/") }}
    - -Pimf
