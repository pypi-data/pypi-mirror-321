# automatically generated by auxilium
FROM {{ aux.project.slug }}-python-deps as base

{% include 'apt_install_root.jinja2' -%}

FROM base AS build

USER root:root
RUN apt-get update && apt-get install -y \
    build-essential \
    --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*

USER container:container
WORKDIR /home/container

{% include 'pip_install.jinja2' -%}

{% if opts.pip_req -%}
{% for pkg in opts.pip_req -%}
{% if "bash_kernel" in pkg -%}
RUN python -m bash_kernel.install
{% endif -%}
{% endfor -%}
{% endif -%}

FROM base as final

USER container:container
WORKDIR /home/container

COPY --chown=container --from=build /home/container/.local/bin/ .local/bin/
COPY --chown=container --from=build /home/container/.local/lib/ .local/lib/
{% if aux.pip.use_uv -%}
COPY --chown=container --from=build /home/container/.venv/bin/ .venv/bin/
COPY --chown=container --from=build /home/container/.venv/lib/ .venv/lib/
COPY --chown=container --from=build /home/container/.venv/share/ .venv/share/
{% else %}
COPY --chown=container --from=build /home/container/.local/share/ .local/share/
{% endif -%}

ENV PYTHONPATH="{{ aux.project.source_dir }}"
{% if aux.docs.framework == "sphinx" -%}
CMD ["/bin/sh", "-c", "sphinx-apidoc -o {{ aux.docs.root }} {{ aux.python_project.module_dir }} &&\
    sphinx-build -M html {{ aux.docs.root }} devops/cache/docs{% if aux.docs.get('strict', True) == True %} -W{% endif %} &&\
    python devops/docs/postprocess_html.py devops/cache/docs/html/{{ aux.python_project.second_name }}.html"]
{% elif aux.docs.framework == "mkdocs" -%}
RUN git config --global --add safe.directory /home/container/workdir
CMD ["mkdocs", "build", "-f", "{{ aux.docs.root }}/mkdocs.yml"]
{% elif aux.docs.framework == "mkdocs2" -%}
RUN git config --global --add safe.directory /home/container/workdir
CMD ["/bin/sh", "-c", "mkdocs build -f {{ aux.docs.root }}/mkdocs.yml ; mkdocs build -f {{ aux.docs.root }}/mkdocs.yml"]
{%- endif %}
{% block custom %}{% endblock %}
