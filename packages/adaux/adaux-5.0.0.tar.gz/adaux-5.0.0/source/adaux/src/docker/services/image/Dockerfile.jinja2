# automatically generated by auxilium
{% include 'base_arg.jinja2' -%}
FROM {{ opts.base | default(aux.project.slug~"-python-deps", true) }} AS stage

USER container:container
WORKDIR /home/container

ARG PROJECT_DIR
COPY --chown=5000:5000 $PROJECT_DIR .
{% include 'sdist_untar.jinja2' %}

FROM {{ opts.base | default(aux.project.slug~"-python-deps", true) }}

USER container:container
WORKDIR /home/container

{% include 'entry_points_rm.jinja2' %}
COPY --chown=container --from=stage /home/container/{{ aux.python_project.second_name }}* /home/container/code/{{ aux.python_project.second_name }}
RUN {% if aux.pip.use_uv %}uv {%endif%}pip install -e /home/container/code/{{ aux.python_project.second_name }} --no-cache

{% if opts.get("mode") == "django" %}
EXPOSE 8000
WORKDIR /home/container/code/{{ aux.python_project.second_name }}/{{aux.project.source_dir}}
COPY --chown=container "{{aux.project.source_dir}}/manage.py" "manage.py"
COPY --chown=container "{{aux.project.source_dir}}/uwsgi.ini" "uwsgi.ini"
CMD ["/bin/sh", "-c", "python manage.py collectstatic -c --noinput && python manage.py wait_for_database && python manage.py migrate && uwsgi --ini uwsgi.ini --http :8000"]
{% elif opts.get("mode") == "django+nginx" %}
EXPOSE 8004
WORKDIR /home/container/code/{{ aux.python_project.second_name }}/{{aux.project.source_dir}}
COPY --chown=container "{{aux.project.source_dir}}/manage.py" "manage.py"
COPY --chown=container "{{aux.project.source_dir}}/uwsgi.ini" "uwsgi.ini"
CMD ["/bin/sh", "-c", "python manage.py collectstatic -c --noinput && python manage.py wait_for_database && python manage.py migrate && uwsgi --ini uwsgi.ini --socket :8004"]
{% elif opts.get("mode") == "ansible" %}
WORKDIR /home/container/code/{{ aux.python_project.second_name }}/{{aux.project.source_dir}}/{{ aux.python_project.second_name }}
{% include 'ansible_deploy.jinja2' -%}
{% endif %}
{% block custom %}{% endblock %}
