"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.iam.v1.transitional.user_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.transitional.user_service_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class UserServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetMetadata: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetUserMetadataRequest,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetUserMetadataResponse,
    ]

    SetMetadata: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.SetUserMetadataRequest,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.SetUserMetadataResponse,
    ]

    GetPassportUser: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetPassportUserRequest,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetPassportUserResponse,
    ]

    ListUsers: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.ListUsersRequest,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.ListUsersResponse,
    ]

    GetCurrentSubject: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetCurrentSubjectResponse,
    ]

class UserServiceAsyncStub:
    GetMetadata: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetUserMetadataRequest,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetUserMetadataResponse,
    ]

    SetMetadata: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.SetUserMetadataRequest,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.SetUserMetadataResponse,
    ]

    GetPassportUser: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetPassportUserRequest,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetPassportUserResponse,
    ]

    ListUsers: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.ListUsersRequest,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.ListUsersResponse,
    ]

    GetCurrentSubject: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetCurrentSubjectResponse,
    ]

class UserServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetMetadata(
        self,
        request: yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetUserMetadataRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetUserMetadataResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetUserMetadataResponse]]: ...

    @abc.abstractmethod
    def SetMetadata(
        self,
        request: yandex.cloud.priv.iam.v1.transitional.user_service_pb2.SetUserMetadataRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.SetUserMetadataResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.SetUserMetadataResponse]]: ...

    @abc.abstractmethod
    def GetPassportUser(
        self,
        request: yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetPassportUserRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetPassportUserResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetPassportUserResponse]]: ...

    @abc.abstractmethod
    def ListUsers(
        self,
        request: yandex.cloud.priv.iam.v1.transitional.user_service_pb2.ListUsersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.ListUsersResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.ListUsersResponse]]: ...

    @abc.abstractmethod
    def GetCurrentSubject(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetCurrentSubjectResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.transitional.user_service_pb2.GetCurrentSubjectResponse]]: ...

def add_UserServiceServicer_to_server(servicer: UserServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
