"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Healthcheck(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMEOUT_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    FAILS_THRESHOLD_FIELD_NUMBER: builtins.int
    PASSES_THRESHOLD_FIELD_NUMBER: builtins.int
    HEALTHCHECK_PORT_FIELD_NUMBER: builtins.int
    HTTP_FIELD_NUMBER: builtins.int
    GRPC_FIELD_NUMBER: builtins.int
    fails_threshold: builtins.int
    """Number of subsequent healthcheck failures required to mark instance unhealthy"""
    passes_threshold: builtins.int
    """Number of subsequent healthcheck passes required to mark instance healthy"""
    healthcheck_port: builtins.int
    """Port to check health onto"""
    @property
    def timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout for performing healthcheck"""

    @property
    def interval(self) -> google.protobuf.duration_pb2.Duration:
        """Interval for perform healthcheck"""

    @property
    def http(self) -> global___HttpHealthcheck: ...
    @property
    def grpc(self) -> global___GrpcHealthcheck: ...
    def __init__(
        self,
        *,
        timeout: google.protobuf.duration_pb2.Duration | None = ...,
        interval: google.protobuf.duration_pb2.Duration | None = ...,
        fails_threshold: builtins.int = ...,
        passes_threshold: builtins.int = ...,
        healthcheck_port: builtins.int = ...,
        http: global___HttpHealthcheck | None = ...,
        grpc: global___GrpcHealthcheck | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["grpc", b"grpc", "healthcheck", b"healthcheck", "http", b"http", "interval", b"interval", "timeout", b"timeout"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["fails_threshold", b"fails_threshold", "grpc", b"grpc", "healthcheck", b"healthcheck", "healthcheck_port", b"healthcheck_port", "http", b"http", "interval", b"interval", "passes_threshold", b"passes_threshold", "timeout", b"timeout"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["healthcheck", b"healthcheck"]) -> typing.Literal["http", "grpc"] | None: ...

global___Healthcheck = Healthcheck

@typing.final
class HttpHealthcheck(google.protobuf.message.Message):
    """
    Currently there is not one accepted specification for REST health checks
    but there is an RFC from IETF with proposal of unification
    https://datatracker.ietf.org/doc/html/draft-inadarei-api-health-check
    currently in implementation only http response code will be checked
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    path: builtins.str
    def __init__(
        self,
        *,
        path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["path", b"path"]) -> None: ...

global___HttpHealthcheck = HttpHealthcheck

@typing.final
class GrpcHealthcheck(google.protobuf.message.Message):
    """
    Probably there is no point to have support for custom health check service
    in gRPC world this thing is standardized in the form of
    https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto
    For more information:
    https://github.com/grpc/grpc/blob/master/doc/health-checking.md
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_FIELD_NUMBER: builtins.int
    service: builtins.str
    def __init__(
        self,
        *,
        service: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["service", b"service"]) -> None: ...

global___GrpcHealthcheck = GrpcHealthcheck
