"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.iam.v1.console.key_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.console.key_service_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class KeyServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.console.key_service_pb2.CreateKeyRequest,
        yandex.cloud.priv.iam.v1.console.key_service_pb2.CreateKeyResponse,
    ]

class KeyServiceAsyncStub:
    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.console.key_service_pb2.CreateKeyRequest,
        yandex.cloud.priv.iam.v1.console.key_service_pb2.CreateKeyResponse,
    ]

class KeyServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.iam.v1.console.key_service_pb2.CreateKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.console.key_service_pb2.CreateKeyResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.console.key_service_pb2.CreateKeyResponse]]: ...

def add_KeyServiceServicer_to_server(servicer: KeyServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
