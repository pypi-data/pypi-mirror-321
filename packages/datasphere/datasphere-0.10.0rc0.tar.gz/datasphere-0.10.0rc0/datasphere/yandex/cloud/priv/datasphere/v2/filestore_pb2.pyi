"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FSMountMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FSMountModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FSMountMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FS_MOUNT_MODE_UNSPECIFIED: _FSMountMode.ValueType  # 0
    FS_READ_ONLY: _FSMountMode.ValueType  # 1
    FS_READ_WRITE: _FSMountMode.ValueType  # 2

class FSMountMode(_FSMountMode, metaclass=_FSMountModeEnumTypeWrapper): ...

FS_MOUNT_MODE_UNSPECIFIED: FSMountMode.ValueType  # 0
FS_READ_ONLY: FSMountMode.ValueType  # 1
FS_READ_WRITE: FSMountMode.ValueType  # 2
global___FSMountMode = FSMountMode

class _FilestoreType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FilestoreTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FilestoreType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNSPECIFIED: _FilestoreType.ValueType  # 0
    NETWORK_SSD: _FilestoreType.ValueType  # 1
    NETWORK_HDD: _FilestoreType.ValueType  # 2

class FilestoreType(_FilestoreType, metaclass=_FilestoreTypeEnumTypeWrapper): ...

UNSPECIFIED: FilestoreType.ValueType  # 0
NETWORK_SSD: FilestoreType.ValueType  # 1
NETWORK_HDD: FilestoreType.ValueType  # 2
global___FilestoreType = FilestoreType

@typing.final
class Filestore(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    CREATED_BY_FIELD_NUMBER: builtins.int
    SIZE_GB_FIELD_NUMBER: builtins.int
    MOUNTPATH_FIELD_NUMBER: builtins.int
    MOUNT_MODE_WHEN_SHARED_FIELD_NUMBER: builtins.int
    CLOUD_FILE_STORAGE_ID_FIELD_NUMBER: builtins.int
    ZONE_ID_FIELD_NUMBER: builtins.int
    FILESTORE_TYPE_FIELD_NUMBER: builtins.int
    id: builtins.str
    project_id: builtins.str
    name: builtins.str
    description: builtins.str
    created_by: builtins.str
    size_gb: builtins.int
    mountPath: builtins.str
    mount_mode_when_shared: global___FSMountMode.ValueType
    cloud_file_storage_id: builtins.str
    zone_id: builtins.str
    filestore_type: global___FilestoreType.ValueType
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        project_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_by: builtins.str = ...,
        size_gb: builtins.int = ...,
        mountPath: builtins.str = ...,
        mount_mode_when_shared: global___FSMountMode.ValueType = ...,
        cloud_file_storage_id: builtins.str = ...,
        zone_id: builtins.str = ...,
        filestore_type: global___FilestoreType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cloud_file_storage_id", b"cloud_file_storage_id", "created_at", b"created_at", "created_by", b"created_by", "description", b"description", "filestore_type", b"filestore_type", "id", b"id", "labels", b"labels", "mountPath", b"mountPath", "mount_mode_when_shared", b"mount_mode_when_shared", "name", b"name", "project_id", b"project_id", "size_gb", b"size_gb", "zone_id", b"zone_id"]) -> None: ...

global___Filestore = Filestore

@typing.final
class FilestoreStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class StatusActive(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        def __init__(
            self,
        ) -> None: ...

    @typing.final
    class StatusInactive(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        def __init__(
            self,
        ) -> None: ...

    @typing.final
    class StatusError(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ERROR_FIELD_NUMBER: builtins.int
        error: builtins.str
        def __init__(
            self,
            *,
            error: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["error", b"error"]) -> None: ...

    STATUS_ACTIVE_FIELD_NUMBER: builtins.int
    STATUS_INACTIVE_FIELD_NUMBER: builtins.int
    STATUS_ERROR_FIELD_NUMBER: builtins.int
    @property
    def status_active(self) -> global___FilestoreStatus.StatusActive: ...
    @property
    def status_inactive(self) -> global___FilestoreStatus.StatusInactive: ...
    @property
    def status_error(self) -> global___FilestoreStatus.StatusError: ...
    def __init__(
        self,
        *,
        status_active: global___FilestoreStatus.StatusActive | None = ...,
        status_inactive: global___FilestoreStatus.StatusInactive | None = ...,
        status_error: global___FilestoreStatus.StatusError | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["status", b"status", "status_active", b"status_active", "status_error", b"status_error", "status_inactive", b"status_inactive"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["status", b"status", "status_active", b"status_active", "status_error", b"status_error", "status_inactive", b"status_inactive"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["status", b"status"]) -> typing.Literal["status_active", "status_inactive", "status_error"] | None: ...

global___FilestoreStatus = FilestoreStatus
