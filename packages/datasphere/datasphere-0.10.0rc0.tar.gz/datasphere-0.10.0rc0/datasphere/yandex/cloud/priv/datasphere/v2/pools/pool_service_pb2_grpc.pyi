"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class PoolServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.CreatePoolRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.UpdatePoolsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.DeletePoolRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    UpdateAvailability: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.UpdatePoolAvailabilityRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetYdsVersion: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.YdsVersion,
    ]

class PoolServiceAsyncStub:
    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.CreatePoolRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.UpdatePoolsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.DeletePoolRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    UpdateAvailability: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.UpdatePoolAvailabilityRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetYdsVersion: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.YdsVersion,
    ]

class PoolServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.CreatePoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.UpdatePoolsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.DeletePoolRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def UpdateAvailability(
        self,
        request: yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.UpdatePoolAvailabilityRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetYdsVersion(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.YdsVersion, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.pools.pool_service_pb2.YdsVersion]]: ...

def add_PoolServiceServicer_to_server(servicer: PoolServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
