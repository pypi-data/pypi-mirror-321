# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings


try:
    from yandex.cloud.priv.iam.v1 import restriction_pb2 as yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__pb2
except ImportError:
    from datasphere.yandex.cloud.priv.iam.v1 import restriction_pb2 as yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__pb2


try:
    from yandex.cloud.priv.iam.v1 import restriction_service_pb2 as yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2
except ImportError:
    from datasphere.yandex.cloud.priv.iam.v1 import restriction_service_pb2 as yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2


try:
    from yandex.cloud.priv.operation import operation_pb2 as yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2
except ImportError:
    from datasphere.yandex.cloud.priv.operation import operation_pb2 as yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2


GRPC_GENERATED_VERSION = '1.63.2'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in yandex/cloud/priv/iam/v1/restriction_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RestrictionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/yandex.cloud.priv.iam.v1.RestrictionService/Get',
                request_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.GetRestrictionRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__pb2.Restriction.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/yandex.cloud.priv.iam.v1.RestrictionService/List',
                request_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.ListRestrictionsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.ListRestrictionsResponse.FromString,
                _registered_method=True)
        self.FilterRestrictedResources = channel.unary_unary(
                '/yandex.cloud.priv.iam.v1.RestrictionService/FilterRestrictedResources',
                request_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.FilterRestrictedResourcesRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.FilterRestrictedResourcesResponse.FromString,
                _registered_method=True)
        self.AddIfAbsent = channel.unary_unary(
                '/yandex.cloud.priv.iam.v1.RestrictionService/AddIfAbsent',
                request_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.AddRestrictionIfAbsentRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.RemoveIfPresent = channel.unary_unary(
                '/yandex.cloud.priv.iam.v1.RestrictionService/RemoveIfPresent',
                request_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.RemoveRestrictionIfPresentRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.RemoveAll = channel.unary_unary(
                '/yandex.cloud.priv.iam.v1.RestrictionService/RemoveAll',
                request_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.RemoveAllRestrictionsRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)


class RestrictionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FilterRestrictedResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddIfAbsent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveIfPresent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RestrictionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.GetRestrictionRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__pb2.Restriction.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.ListRestrictionsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.ListRestrictionsResponse.SerializeToString,
            ),
            'FilterRestrictedResources': grpc.unary_unary_rpc_method_handler(
                    servicer.FilterRestrictedResources,
                    request_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.FilterRestrictedResourcesRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.FilterRestrictedResourcesResponse.SerializeToString,
            ),
            'AddIfAbsent': grpc.unary_unary_rpc_method_handler(
                    servicer.AddIfAbsent,
                    request_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.AddRestrictionIfAbsentRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'RemoveIfPresent': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveIfPresent,
                    request_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.RemoveRestrictionIfPresentRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
            'RemoveAll': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveAll,
                    request_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.RemoveAllRestrictionsRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yandex.cloud.priv.iam.v1.RestrictionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RestrictionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.priv.iam.v1.RestrictionService/Get',
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.GetRestrictionRequest.SerializeToString,
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__pb2.Restriction.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.priv.iam.v1.RestrictionService/List',
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.ListRestrictionsRequest.SerializeToString,
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.ListRestrictionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FilterRestrictedResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.priv.iam.v1.RestrictionService/FilterRestrictedResources',
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.FilterRestrictedResourcesRequest.SerializeToString,
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.FilterRestrictedResourcesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddIfAbsent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.priv.iam.v1.RestrictionService/AddIfAbsent',
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.AddRestrictionIfAbsentRequest.SerializeToString,
            yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveIfPresent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.priv.iam.v1.RestrictionService/RemoveIfPresent',
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.RemoveRestrictionIfPresentRequest.SerializeToString,
            yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.priv.iam.v1.RestrictionService/RemoveAll',
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_restriction__service__pb2.RemoveAllRestrictionsRequest.SerializeToString,
            yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
