"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Type:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    TYPE_UNSPECIFIED: _Type.ValueType  # 0
    NOTEBOOK_SERVICE_ACCOUNT: _Type.ValueType  # 1

class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...

TYPE_UNSPECIFIED: Type.ValueType  # 0
NOTEBOOK_SERVICE_ACCOUNT: Type.ValueType  # 1
global___Type = Type

@typing.final
class GetServiceAccountRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    type: global___Type.ValueType
    project_id: builtins.str
    def __init__(
        self,
        *,
        type: global___Type.ValueType = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id", "type", b"type"]) -> None: ...

global___GetServiceAccountRequest = GetServiceAccountRequest

@typing.final
class GetServiceAccountResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    CLOUD_ID_FIELD_NUMBER: builtins.int
    EMPTY_FIELD_NUMBER: builtins.int
    type: global___Type.ValueType
    service_account: builtins.str
    cloud_id: builtins.str
    empty: builtins.bool
    def __init__(
        self,
        *,
        type: global___Type.ValueType = ...,
        service_account: builtins.str = ...,
        cloud_id: builtins.str = ...,
        empty: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cloud_id", b"cloud_id", "empty", b"empty", "service_account", b"service_account", "type", b"type"]) -> None: ...

global___GetServiceAccountResponse = GetServiceAccountResponse
