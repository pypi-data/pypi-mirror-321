"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.datasphere.v2.docker_image_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.docker_image_pb2


try:
    import yandex.cloud.priv.datasphere.v2.docker_image_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.docker_image_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class DockerImageServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Build: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerResponse,
    ]

    BuildDocker: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    BuildLogs: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerLogsRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerLogsResponse,
    ]

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CreateDockerRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.UpdateDockerRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage,
    ]

    UpdateStatus: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.UpdateDockerStatusRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage,
    ]

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.DeleteDockerRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Activate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ActivateDockerRequest,
        google.protobuf.empty_pb2.Empty,
    ]

    ActivateOperation: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ActivateDockerRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Deactivate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.DeactivateDockerRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetActivationStatus: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerActivationStatusRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerActivationStatusResponse,
    ]

    ListProjectDockers: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListProjectDockersRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListProjectDockersResponse,
    ]

    ListSpaceDockers: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListSpaceDockersRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListSpaceDockersResponse,
    ]

    IsInProject: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CheckDockerInProjectRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CheckDockerInProjectResponse,
    ]

class DockerImageServiceAsyncStub:
    Build: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerResponse,
    ]

    BuildDocker: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    BuildLogs: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerLogsRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerLogsResponse,
    ]

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CreateDockerRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.UpdateDockerRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage,
    ]

    UpdateStatus: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.UpdateDockerStatusRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage,
    ]

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.DeleteDockerRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Activate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ActivateDockerRequest,
        google.protobuf.empty_pb2.Empty,
    ]

    ActivateOperation: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ActivateDockerRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Deactivate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.DeactivateDockerRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetActivationStatus: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerActivationStatusRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerActivationStatusResponse,
    ]

    ListProjectDockers: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListProjectDockersRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListProjectDockersResponse,
    ]

    ListSpaceDockers: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListSpaceDockersRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListSpaceDockersResponse,
    ]

    IsInProject: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CheckDockerInProjectRequest,
        yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CheckDockerInProjectResponse,
    ]

class DockerImageServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Build(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerResponse]]: ...

    @abc.abstractmethod
    def BuildDocker(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def BuildLogs(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerLogsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerLogsResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.BuildDockerLogsResponse]]: ...

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CreateDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.UpdateDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage]]: ...

    @abc.abstractmethod
    def UpdateStatus(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.UpdateDockerStatusRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage]]: ...

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_pb2.DockerImage]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.DeleteDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Activate(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ActivateDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def ActivateOperation(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ActivateDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Deactivate(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.DeactivateDockerRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetActivationStatus(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerActivationStatusRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerActivationStatusResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.GetDockerActivationStatusResponse]]: ...

    @abc.abstractmethod
    def ListProjectDockers(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListProjectDockersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListProjectDockersResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListProjectDockersResponse]]: ...

    @abc.abstractmethod
    def ListSpaceDockers(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListSpaceDockersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListSpaceDockersResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.ListSpaceDockersResponse]]: ...

    @abc.abstractmethod
    def IsInProject(
        self,
        request: yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CheckDockerInProjectRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CheckDockerInProjectResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.docker_image_service_pb2.CheckDockerInProjectResponse]]: ...

def add_DockerImageServiceServicer_to_server(servicer: DockerImageServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
