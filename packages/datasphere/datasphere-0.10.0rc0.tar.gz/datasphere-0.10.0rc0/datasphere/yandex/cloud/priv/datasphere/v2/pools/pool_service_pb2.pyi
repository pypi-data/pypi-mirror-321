"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

try:
    import yandex.cloud.priv.ai.platform.v1.workload_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.ai.platform.v1.workload_pb2


try:
    import yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2


if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PoolType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PoolTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PoolType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNDEFINED: _PoolType.ValueType  # 0
    SERVANT_CPU: _PoolType.ValueType  # 1
    SERVANT_GPU: _PoolType.ValueType  # 2
    ROOM: _PoolType.ValueType  # 3
    JUPYTER_LAB: _PoolType.ValueType  # 4

class PoolType(_PoolType, metaclass=_PoolTypeEnumTypeWrapper): ...

UNDEFINED: PoolType.ValueType  # 0
SERVANT_CPU: PoolType.ValueType  # 1
SERVANT_GPU: PoolType.ValueType  # 2
ROOM: PoolType.ValueType  # 3
JUPYTER_LAB: PoolType.ValueType  # 4
global___PoolType = PoolType

@typing.final
class CreatePoolRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    type: global___PoolType.ValueType
    @property
    def request(self) -> yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.CreatePoolRequest: ...
    def __init__(
        self,
        *,
        request: yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.CreatePoolRequest | None = ...,
        type: global___PoolType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["request", b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["request", b"request", "type", b"type"]) -> None: ...

global___CreatePoolRequest = CreatePoolRequest

@typing.final
class DeletePoolRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOL_NAME_FIELD_NUMBER: builtins.int
    pool_name: builtins.str
    def __init__(
        self,
        *,
        pool_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pool_name", b"pool_name"]) -> None: ...

global___DeletePoolRequest = DeletePoolRequest

@typing.final
class UpdatePoolsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKLOADS_FIELD_NUMBER: builtins.int
    COMPUTE_IMAGES_FIELD_NUMBER: builtins.int
    @property
    def workloads(self) -> global___Workloads: ...
    @property
    def compute_images(self) -> global___ComputeImages: ...
    def __init__(
        self,
        *,
        workloads: global___Workloads | None = ...,
        compute_images: global___ComputeImages | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["compute_images", b"compute_images", "workloads", b"workloads"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["compute_images", b"compute_images", "workloads", b"workloads"]) -> None: ...

global___UpdatePoolsRequest = UpdatePoolsRequest

@typing.final
class UpdatePoolAvailabilityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    POOL_NAME_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    AVAILABILITY_SPECS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    IMAGE_CACHE_FIELD_NUMBER: builtins.int
    PRE_STARTED_WORKLOAD_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    pool_name: builtins.str
    status: yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.PoolStatus.ValueType
    service_account_id: builtins.str
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask: ...
    @property
    def spec(self) -> yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.VmSpec: ...
    @property
    def availability_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.AvailabilitySpec]: ...
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def image_cache(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def pre_started_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    def __init__(
        self,
        *,
        pool_name: builtins.str = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
        spec: yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.VmSpec | None = ...,
        availability_specs: collections.abc.Iterable[yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.AvailabilitySpec] | None = ...,
        metadata: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        status: yandex.cloud.priv.datasphere.resourcepool.pool_service_pb2.PoolStatus.ValueType = ...,
        image_cache: collections.abc.Iterable[builtins.str] | None = ...,
        pre_started_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        service_account_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pre_started_workload", b"pre_started_workload", "spec", b"spec", "update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["availability_specs", b"availability_specs", "image_cache", b"image_cache", "metadata", b"metadata", "pool_name", b"pool_name", "pre_started_workload", b"pre_started_workload", "service_account_id", b"service_account_id", "spec", b"spec", "status", b"status", "update_mask", b"update_mask"]) -> None: ...

global___UpdatePoolAvailabilityRequest = UpdatePoolAvailabilityRequest

@typing.final
class Workloads(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVANT_WORKLOAD_FIELD_NUMBER: builtins.int
    ROOM_DEDICATED_WORKLOAD_FIELD_NUMBER: builtins.int
    JUPYTER_LAB_WORKLOAD_FIELD_NUMBER: builtins.int
    @property
    def servant_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    @property
    def room_dedicated_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    @property
    def jupyter_lab_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    def __init__(
        self,
        *,
        servant_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        room_dedicated_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        jupyter_lab_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["jupyter_lab_workload", b"jupyter_lab_workload", "room_dedicated_workload", b"room_dedicated_workload", "servant_workload", b"servant_workload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["jupyter_lab_workload", b"jupyter_lab_workload", "room_dedicated_workload", b"room_dedicated_workload", "servant_workload", b"servant_workload"]) -> None: ...

global___Workloads = Workloads

@typing.final
class ComputeImages(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CPU_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    GPU_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    ROOM_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    JUPYTER_LAB_COMPUTE_IMAGE_FIELD_NUMBER: builtins.int
    cpu_compute_image: builtins.str
    gpu_compute_image: builtins.str
    room_compute_image: builtins.str
    jupyter_lab_compute_image: builtins.str
    def __init__(
        self,
        *,
        cpu_compute_image: builtins.str = ...,
        gpu_compute_image: builtins.str = ...,
        room_compute_image: builtins.str = ...,
        jupyter_lab_compute_image: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cpu_compute_image", b"cpu_compute_image", "gpu_compute_image", b"gpu_compute_image", "jupyter_lab_compute_image", b"jupyter_lab_compute_image", "room_compute_image", b"room_compute_image"]) -> None: ...

global___ComputeImages = ComputeImages

@typing.final
class YdsVersion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    WORKLOADS_FIELD_NUMBER: builtins.int
    COMPUTE_IMAGES_FIELD_NUMBER: builtins.int
    version: builtins.int
    @property
    def workloads(self) -> global___Workloads: ...
    @property
    def compute_images(self) -> global___ComputeImages: ...
    def __init__(
        self,
        *,
        version: builtins.int = ...,
        workloads: global___Workloads | None = ...,
        compute_images: global___ComputeImages | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["compute_images", b"compute_images", "workloads", b"workloads"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["compute_images", b"compute_images", "version", b"version", "workloads", b"workloads"]) -> None: ...

global___YdsVersion = YdsVersion
