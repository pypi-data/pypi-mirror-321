"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class NodeAliasServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    ListAliases: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.ListAliasesRequest,
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.ListAliasesResponse,
    ]

    GetAlias: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.GetAliasRequest,
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.GetAliasResponse,
    ]

    CreateAlias: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.CreateAliasRequest,
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.CreateAliasResponse,
    ]

    UpdateAlias: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.UpdateAliasRequest,
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.UpdateAliasResponse,
    ]

    DeleteAlias: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.DeleteAliasRequest,
        google.protobuf.empty_pb2.Empty,
    ]

class NodeAliasServiceAsyncStub:
    ListAliases: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.ListAliasesRequest,
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.ListAliasesResponse,
    ]

    GetAlias: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.GetAliasRequest,
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.GetAliasResponse,
    ]

    CreateAlias: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.CreateAliasRequest,
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.CreateAliasResponse,
    ]

    UpdateAlias: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.UpdateAliasRequest,
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.UpdateAliasResponse,
    ]

    DeleteAlias: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.DeleteAliasRequest,
        google.protobuf.empty_pb2.Empty,
    ]

class NodeAliasServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ListAliases(
        self,
        request: yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.ListAliasesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.ListAliasesResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.ListAliasesResponse]]: ...

    @abc.abstractmethod
    def GetAlias(
        self,
        request: yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.GetAliasRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.GetAliasResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.GetAliasResponse]]: ...

    @abc.abstractmethod
    def CreateAlias(
        self,
        request: yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.CreateAliasRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.CreateAliasResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.CreateAliasResponse]]: ...

    @abc.abstractmethod
    def UpdateAlias(
        self,
        request: yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.UpdateAliasRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.UpdateAliasResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.UpdateAliasResponse]]: ...

    @abc.abstractmethod
    def DeleteAlias(
        self,
        request: yandex.cloud.priv.datasphere.v2.nodedeployer.node_alias_service_pb2.DeleteAliasRequest,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

def add_NodeAliasServiceServicer_to_server(servicer: NodeAliasServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
