"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.iam.v1.ssh_key_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.ssh_key_pb2


try:
    import yandex.cloud.priv.iam.v1.ssh_key_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.ssh_key_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class SshKeyServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.GetSshKeyRequest,
        yandex.cloud.priv.iam.v1.ssh_key_pb2.SshKey,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeysRequest,
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeysResponse,
    ]

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.CreateSshKeyRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.DeleteSshKeyRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeyOperationsRequest,
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeyOperationsResponse,
    ]

class SshKeyServiceAsyncStub:
    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.GetSshKeyRequest,
        yandex.cloud.priv.iam.v1.ssh_key_pb2.SshKey,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeysRequest,
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeysResponse,
    ]

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.CreateSshKeyRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.DeleteSshKeyRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeyOperationsRequest,
        yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeyOperationsResponse,
    ]

class SshKeyServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.iam.v1.ssh_key_service_pb2.GetSshKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.ssh_key_pb2.SshKey, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.ssh_key_pb2.SshKey]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeysRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeysResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeysResponse]]: ...

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.iam.v1.ssh_key_service_pb2.CreateSshKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.iam.v1.ssh_key_service_pb2.DeleteSshKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeyOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeyOperationsResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.ssh_key_service_pb2.ListSshKeyOperationsResponse]]: ...

def add_SshKeyServiceServicer_to_server(servicer: SshKeyServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
