"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2


try:
    import yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ProjectJobServiceStub:
    """Header in each request: `Authorization: Bearer <IAM token>`."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CreateProjectJobRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Clone: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CloneProjectJobRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Execute: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ExecuteProjectJobRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Status, cancel - through OperationService. `JobResult` with output files will be inside Operation."""

    ReadLogs: grpc.UnaryStreamMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ReadProjectJobLogsRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ReadProjectJobLogsResponse,
    ]

    DownloadJobFiles: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DownloadProjectJobFilesRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DownloadProjectJobFilesResponse,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ListProjectJobRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ListProjectJobResponse,
    ]

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobRequest,
        yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2.Job,
    ]

    GetStorageCostEstimation: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobStorageCostEstimationRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobStorageCostEstimationResponse,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteProjectJobRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    PurgeAll: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.PurgeProjectJobsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    DeleteData: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteProjectJobDataRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    DeleteAllData: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteAllProjectJobDataRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    SetDataTtl: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.SetProjectJobDataTtlRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.SetProjectJobDataTtlResponse,
    ]

    Cancel: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelProjectJobRequest,
        google.protobuf.empty_pb2.Empty,
    ]

    CancelAllJobs: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelAllJobsRequest,
        google.protobuf.empty_pb2.Empty,
    ]

    CancelAll: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelAllProjectJobsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetJobInstance: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobInstanceRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobInstanceResponse,
    ]
    """Utility endpoint used for AC tests"""

    GetJobMetrics: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobMetricsRequest,
        yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2.JobMetrics,
    ]

class ProjectJobServiceAsyncStub:
    """Header in each request: `Authorization: Bearer <IAM token>`."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CreateProjectJobRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Clone: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CloneProjectJobRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Execute: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ExecuteProjectJobRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Status, cancel - through OperationService. `JobResult` with output files will be inside Operation."""

    ReadLogs: grpc.aio.UnaryStreamMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ReadProjectJobLogsRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ReadProjectJobLogsResponse,
    ]

    DownloadJobFiles: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DownloadProjectJobFilesRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DownloadProjectJobFilesResponse,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ListProjectJobRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ListProjectJobResponse,
    ]

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobRequest,
        yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2.Job,
    ]

    GetStorageCostEstimation: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobStorageCostEstimationRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobStorageCostEstimationResponse,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteProjectJobRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    PurgeAll: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.PurgeProjectJobsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    DeleteData: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteProjectJobDataRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    DeleteAllData: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteAllProjectJobDataRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    SetDataTtl: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.SetProjectJobDataTtlRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.SetProjectJobDataTtlResponse,
    ]

    Cancel: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelProjectJobRequest,
        google.protobuf.empty_pb2.Empty,
    ]

    CancelAllJobs: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelAllJobsRequest,
        google.protobuf.empty_pb2.Empty,
    ]

    CancelAll: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelAllProjectJobsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetJobInstance: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobInstanceRequest,
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobInstanceResponse,
    ]
    """Utility endpoint used for AC tests"""

    GetJobMetrics: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobMetricsRequest,
        yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2.JobMetrics,
    ]

class ProjectJobServiceServicer(metaclass=abc.ABCMeta):
    """Header in each request: `Authorization: Bearer <IAM token>`."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CreateProjectJobRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Clone(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CloneProjectJobRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Execute(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ExecuteProjectJobRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Status, cancel - through OperationService. `JobResult` with output files will be inside Operation."""

    @abc.abstractmethod
    def ReadLogs(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ReadProjectJobLogsRequest,
        context: _ServicerContext,
    ) -> typing.Union[collections.abc.Iterator[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ReadProjectJobLogsResponse], collections.abc.AsyncIterator[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ReadProjectJobLogsResponse]]: ...

    @abc.abstractmethod
    def DownloadJobFiles(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DownloadProjectJobFilesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DownloadProjectJobFilesResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DownloadProjectJobFilesResponse]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ListProjectJobRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ListProjectJobResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.ListProjectJobResponse]]: ...

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2.Job, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2.Job]]: ...

    @abc.abstractmethod
    def GetStorageCostEstimation(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobStorageCostEstimationRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobStorageCostEstimationResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetProjectJobStorageCostEstimationResponse]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteProjectJobRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def PurgeAll(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.PurgeProjectJobsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def DeleteData(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteProjectJobDataRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def DeleteAllData(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.DeleteAllProjectJobDataRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def SetDataTtl(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.SetProjectJobDataTtlRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.SetProjectJobDataTtlResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.SetProjectJobDataTtlResponse]]: ...

    @abc.abstractmethod
    def Cancel(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelProjectJobRequest,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def CancelAllJobs(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelAllJobsRequest,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def CancelAll(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.CancelAllProjectJobsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetJobInstance(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobInstanceRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobInstanceResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobInstanceResponse]]:
        """Utility endpoint used for AC tests"""

    @abc.abstractmethod
    def GetJobMetrics(
        self,
        request: yandex.cloud.priv.datasphere.v2.jobs.project_job_service_pb2.GetJobMetricsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2.JobMetrics, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.jobs.jobs_pb2.JobMetrics]]: ...

def add_ProjectJobServiceServicer_to_server(servicer: ProjectJobServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
