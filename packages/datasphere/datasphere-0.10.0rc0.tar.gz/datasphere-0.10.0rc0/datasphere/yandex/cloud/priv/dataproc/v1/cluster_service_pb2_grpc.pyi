"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.dataproc.v1.cluster_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.dataproc.v1.cluster_pb2


try:
    import yandex.cloud.priv.dataproc.v1.cluster_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.dataproc.v1.cluster_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ClusterServiceStub:
    """A set of methods for managing Hadoop clusters."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetClusterRequest,
        yandex.cloud.priv.dataproc.v1.cluster_pb2.Cluster,
    ]
    """Returns the specified Hadoop cluster."""

    GetAtRevision: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetClusterAtRevisionRequest,
        yandex.cloud.priv.dataproc.v1.cluster_pb2.Cluster,
    ]
    """Returns the Hadoop cluster at the specified revision."""

    GetTopology: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetTopologyRequest,
        yandex.cloud.priv.dataproc.v1.cluster_pb2.Topology,
    ]
    """Returns the specified Hadoop Cluster Topology."""

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClustersRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClustersResponse,
    ]
    """Retrieves a list of Hadoop clusters."""

    ListActive: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListActiveClustersRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListActiveClustersResponse,
    ]
    """Retrieves a list of active Hadoop clusters across all the clouds (cluster-type level rpc)."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.CreateClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Creates a Hadoop cluster."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.UpdateClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Updates configuration of the specified Hadoop cluster."""

    Resetup: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ResetupClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Resetup hosts of the specified Hadoop cluster."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.DeleteClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Deletes the specified Hadoop cluster."""

    Start: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.StartClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Start the specified Hadoop cluster."""

    Stop: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.StopClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Stop the specified Hadoop cluster."""

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterOperationsRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterOperationsResponse,
    ]

    ListHosts: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterHostsRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterHostsResponse,
    ]
    """Retrieves a list of hosts."""

    ListUILinks: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListUILinksRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListUILinksResponse,
    ]
    """Retrieves a list of links to web interfaces being proxied by Data Proc UI Proxy."""

class ClusterServiceAsyncStub:
    """A set of methods for managing Hadoop clusters."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetClusterRequest,
        yandex.cloud.priv.dataproc.v1.cluster_pb2.Cluster,
    ]
    """Returns the specified Hadoop cluster."""

    GetAtRevision: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetClusterAtRevisionRequest,
        yandex.cloud.priv.dataproc.v1.cluster_pb2.Cluster,
    ]
    """Returns the Hadoop cluster at the specified revision."""

    GetTopology: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetTopologyRequest,
        yandex.cloud.priv.dataproc.v1.cluster_pb2.Topology,
    ]
    """Returns the specified Hadoop Cluster Topology."""

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClustersRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClustersResponse,
    ]
    """Retrieves a list of Hadoop clusters."""

    ListActive: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListActiveClustersRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListActiveClustersResponse,
    ]
    """Retrieves a list of active Hadoop clusters across all the clouds (cluster-type level rpc)."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.CreateClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Creates a Hadoop cluster."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.UpdateClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Updates configuration of the specified Hadoop cluster."""

    Resetup: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ResetupClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Resetup hosts of the specified Hadoop cluster."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.DeleteClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Deletes the specified Hadoop cluster."""

    Start: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.StartClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Start the specified Hadoop cluster."""

    Stop: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.StopClusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Stop the specified Hadoop cluster."""

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterOperationsRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterOperationsResponse,
    ]

    ListHosts: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterHostsRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterHostsResponse,
    ]
    """Retrieves a list of hosts."""

    ListUILinks: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListUILinksRequest,
        yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListUILinksResponse,
    ]
    """Retrieves a list of links to web interfaces being proxied by Data Proc UI Proxy."""

class ClusterServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Hadoop clusters."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.cluster_pb2.Cluster, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.cluster_pb2.Cluster]]:
        """Returns the specified Hadoop cluster."""

    @abc.abstractmethod
    def GetAtRevision(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetClusterAtRevisionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.cluster_pb2.Cluster, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.cluster_pb2.Cluster]]:
        """Returns the Hadoop cluster at the specified revision."""

    @abc.abstractmethod
    def GetTopology(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.GetTopologyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.cluster_pb2.Topology, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.cluster_pb2.Topology]]:
        """Returns the specified Hadoop Cluster Topology."""

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClustersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClustersResponse, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClustersResponse]]:
        """Retrieves a list of Hadoop clusters."""

    @abc.abstractmethod
    def ListActive(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListActiveClustersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListActiveClustersResponse, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListActiveClustersResponse]]:
        """Retrieves a list of active Hadoop clusters across all the clouds (cluster-type level rpc)."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.CreateClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Creates a Hadoop cluster."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.UpdateClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Updates configuration of the specified Hadoop cluster."""

    @abc.abstractmethod
    def Resetup(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ResetupClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Resetup hosts of the specified Hadoop cluster."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.DeleteClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Deletes the specified Hadoop cluster."""

    @abc.abstractmethod
    def Start(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.StartClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Start the specified Hadoop cluster."""

    @abc.abstractmethod
    def Stop(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.StopClusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Stop the specified Hadoop cluster."""

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterOperationsResponse, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterOperationsResponse]]: ...

    @abc.abstractmethod
    def ListHosts(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterHostsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterHostsResponse, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListClusterHostsResponse]]:
        """Retrieves a list of hosts."""

    @abc.abstractmethod
    def ListUILinks(
        self,
        request: yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListUILinksRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListUILinksResponse, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.cluster_service_pb2.ListUILinksResponse]]:
        """Retrieves a list of links to web interfaces being proxied by Data Proc UI Proxy."""

def add_ClusterServiceServicer_to_server(servicer: ClusterServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
