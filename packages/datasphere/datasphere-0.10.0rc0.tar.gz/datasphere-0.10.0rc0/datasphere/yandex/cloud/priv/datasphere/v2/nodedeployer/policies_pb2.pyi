"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Policies(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AVAILABILITY_POLICY_FIELD_NUMBER: builtins.int
    SCALE_POLICY_FIELD_NUMBER: builtins.int
    @property
    def availability_policy(self) -> global___AvailabilityPolicy: ...
    @property
    def scale_policy(self) -> global___ScalePolicy: ...
    def __init__(
        self,
        *,
        availability_policy: global___AvailabilityPolicy | None = ...,
        scale_policy: global___ScalePolicy | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["availability_policy", b"availability_policy", "scale_policy", b"scale_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["availability_policy", b"availability_policy", "scale_policy", b"scale_policy"]) -> None: ...

global___Policies = Policies

@typing.final
class AvailabilityPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ZoneAvailability(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ZONE_ID_FIELD_NUMBER: builtins.int
        MIN_COUNT_FIELD_NUMBER: builtins.int
        MAX_COUNT_FIELD_NUMBER: builtins.int
        SUBNET_ID_FIELD_NUMBER: builtins.int
        zone_id: builtins.str
        min_count: builtins.int
        max_count: builtins.int
        subnet_id: builtins.str
        def __init__(
            self,
            *,
            zone_id: builtins.str = ...,
            min_count: builtins.int = ...,
            max_count: builtins.int = ...,
            subnet_id: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["max_count", b"max_count", "min_count", b"min_count", "subnet_id", b"subnet_id", "zone_id", b"zone_id"]) -> None: ...

    @typing.final
    class MaintenanceLimit(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        MAINTENANCE_LIMIT_FIELD_NUMBER: builtins.int
        maintenance_limit: builtins.int
        def __init__(
            self,
            *,
            maintenance_limit: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["maintenance_limit", b"maintenance_limit"]) -> None: ...

    ZONES_FIELD_NUMBER: builtins.int
    MAINTENANCE_LIMIT_FIELD_NUMBER: builtins.int
    @property
    def zones(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailabilityPolicy.ZoneAvailability]: ...
    @property
    def maintenance_limit(self) -> global___AvailabilityPolicy.MaintenanceLimit: ...
    def __init__(
        self,
        *,
        zones: collections.abc.Iterable[global___AvailabilityPolicy.ZoneAvailability] | None = ...,
        maintenance_limit: global___AvailabilityPolicy.MaintenanceLimit | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["maintenance_limit", b"maintenance_limit"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["maintenance_limit", b"maintenance_limit", "zones", b"zones"]) -> None: ...

global___AvailabilityPolicy = AvailabilityPolicy

@typing.final
class ScalePolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSIONS_PER_INSTANCE_FIELD_NUMBER: builtins.int
    @property
    def sessions_per_instance(self) -> global___SessionBasedScalePolicy: ...
    def __init__(
        self,
        *,
        sessions_per_instance: global___SessionBasedScalePolicy | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["policy", b"policy", "sessions_per_instance", b"sessions_per_instance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["policy", b"policy", "sessions_per_instance", b"sessions_per_instance"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["policy", b"policy"]) -> typing.Literal["sessions_per_instance"] | None: ...

global___ScalePolicy = ScalePolicy

@typing.final
class SessionBasedScalePolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSIONS_PER_INSTANCE_FIELD_NUMBER: builtins.int
    sessions_per_instance: builtins.int
    def __init__(
        self,
        *,
        sessions_per_instance: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["sessions_per_instance", b"sessions_per_instance"]) -> None: ...

global___SessionBasedScalePolicy = SessionBasedScalePolicy
