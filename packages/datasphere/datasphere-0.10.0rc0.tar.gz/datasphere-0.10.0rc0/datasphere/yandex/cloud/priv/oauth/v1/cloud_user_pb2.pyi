"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class CloudUserInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class CreateCloudRestrictions(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        HAS_PHONE_FIELD_NUMBER: builtins.int
        HAS_EMAIL_FIELD_NUMBER: builtins.int
        HAS_LOGIN_FIELD_NUMBER: builtins.int
        has_phone: builtins.bool
        has_email: builtins.bool
        has_login: builtins.bool
        def __init__(
            self,
            *,
            has_phone: builtins.bool = ...,
            has_email: builtins.bool = ...,
            has_login: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["has_email", b"has_email", "has_login", b"has_login", "has_phone", b"has_phone"]) -> None: ...

    IS_EULA_ACCEPTED_FIELD_NUMBER: builtins.int
    IS_MEMBER_OF_CLOUD_FIELD_NUMBER: builtins.int
    CAN_CREATE_CLOUD_FIELD_NUMBER: builtins.int
    CREATE_CLOUD_RESTRICTIONS_FIELD_NUMBER: builtins.int
    is_eula_accepted: builtins.bool
    """corresponding to eulaAccepted field"""
    is_member_of_cloud: builtins.bool
    """corresponding to hasClouds field"""
    can_create_cloud: builtins.bool
    """corresponding to canCreateClouds field"""
    @property
    def create_cloud_restrictions(self) -> global___CloudUserInfo.CreateCloudRestrictions:
        """corresponding to checks field"""

    def __init__(
        self,
        *,
        is_eula_accepted: builtins.bool = ...,
        is_member_of_cloud: builtins.bool = ...,
        can_create_cloud: builtins.bool = ...,
        create_cloud_restrictions: global___CloudUserInfo.CreateCloudRestrictions | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["create_cloud_restrictions", b"create_cloud_restrictions"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["can_create_cloud", b"can_create_cloud", "create_cloud_restrictions", b"create_cloud_restrictions", "is_eula_accepted", b"is_eula_accepted", "is_member_of_cloud", b"is_member_of_cloud"]) -> None: ...

global___CloudUserInfo = CloudUserInfo
