"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.ai.platform.v1.mount_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.ai.platform.v1.mount_pb2


try:
    import yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class RPAgentServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    StartWorkload: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.StartWorkloadRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetWorkload: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.GetWorkloadRequest,
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.WorkloadInfo,
    ]

    StopWorkload: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.StopWorkloadRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    UpdateImageCache: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.UpdateImageCacheRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListMounts: grpc.UnaryStreamMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest,
    ]

    ClearMounts: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Mount: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Unmount: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.mount_pb2.UnmountRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetVersion: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.Version,
    ]

    DownloadNewVersion: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ReloadVersion: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        google.protobuf.empty_pb2.Empty,
    ]

    RunNetplan: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        google.protobuf.empty_pb2.Empty,
    ]

    RestartDockerService: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.DockerService,
        google.protobuf.empty_pb2.Empty,
    ]

class RPAgentServiceAsyncStub:
    StartWorkload: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.StartWorkloadRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetWorkload: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.GetWorkloadRequest,
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.WorkloadInfo,
    ]

    StopWorkload: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.StopWorkloadRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    UpdateImageCache: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.UpdateImageCacheRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListMounts: grpc.aio.UnaryStreamMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest,
    ]

    ClearMounts: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Mount: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Unmount: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.mount_pb2.UnmountRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetVersion: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.Version,
    ]

    DownloadNewVersion: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ReloadVersion: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        google.protobuf.empty_pb2.Empty,
    ]

    RunNetplan: grpc.aio.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        google.protobuf.empty_pb2.Empty,
    ]

    RestartDockerService: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.DockerService,
        google.protobuf.empty_pb2.Empty,
    ]

class RPAgentServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def StartWorkload(
        self,
        request: yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.StartWorkloadRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetWorkload(
        self,
        request: yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.GetWorkloadRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.WorkloadInfo, collections.abc.Awaitable[yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.WorkloadInfo]]: ...

    @abc.abstractmethod
    def StopWorkload(
        self,
        request: yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.StopWorkloadRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def UpdateImageCache(
        self,
        request: yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.UpdateImageCacheRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def ListMounts(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[collections.abc.Iterator[yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest], collections.abc.AsyncIterator[yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest]]: ...

    @abc.abstractmethod
    def ClearMounts(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Mount(
        self,
        request: yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Unmount(
        self,
        request: yandex.cloud.priv.ai.platform.v1.mount_pb2.UnmountRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetVersion(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.Version, collections.abc.Awaitable[yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.Version]]: ...

    @abc.abstractmethod
    def DownloadNewVersion(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def ReloadVersion(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def RunNetplan(
        self,
        request: google.protobuf.empty_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def RestartDockerService(
        self,
        request: yandex.cloud.priv.ai.platform.v1.rp_agent_service_pb2.DockerService,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

def add_RPAgentServiceServicer_to_server(servicer: RPAgentServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
