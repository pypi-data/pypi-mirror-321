"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.access.access_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.access.access_pb2


try:
    import yandex.cloud.priv.iam.v1.restriction_type_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.restriction_type_pb2


try:
    import yandex.cloud.priv.iam.v1.restriction_type_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.restriction_type_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class RestrictionTypeServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.GetRestrictionTypeRequest,
        yandex.cloud.priv.iam.v1.restriction_type_pb2.RestrictionType,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypesRequest,
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypesResponse,
    ]

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.CreateRestrictionTypeRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.UpdateRestrictionTypeRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeAccessBindingsRequest,
        yandex.cloud.priv.access.access_pb2.ListAccessBindingsResponse,
    ]
    """access"""

    SetAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.SetRestrictionTypeAccessBindingsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    UpdateAccessBindings: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.UpdateRestrictionTypeAccessBindingsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeOperationsRequest,
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeOperationsResponse,
    ]
    """operations"""

class RestrictionTypeServiceAsyncStub:
    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.GetRestrictionTypeRequest,
        yandex.cloud.priv.iam.v1.restriction_type_pb2.RestrictionType,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypesRequest,
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypesResponse,
    ]

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.CreateRestrictionTypeRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.UpdateRestrictionTypeRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeAccessBindingsRequest,
        yandex.cloud.priv.access.access_pb2.ListAccessBindingsResponse,
    ]
    """access"""

    SetAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.SetRestrictionTypeAccessBindingsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    UpdateAccessBindings: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.UpdateRestrictionTypeAccessBindingsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeOperationsRequest,
        yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeOperationsResponse,
    ]
    """operations"""

class RestrictionTypeServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.iam.v1.restriction_type_service_pb2.GetRestrictionTypeRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.restriction_type_pb2.RestrictionType, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.restriction_type_pb2.RestrictionType]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypesResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypesResponse]]: ...

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.iam.v1.restriction_type_service_pb2.CreateRestrictionTypeRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.iam.v1.restriction_type_service_pb2.UpdateRestrictionTypeRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def ListAccessBindings(
        self,
        request: yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.access.access_pb2.ListAccessBindingsResponse, collections.abc.Awaitable[yandex.cloud.priv.access.access_pb2.ListAccessBindingsResponse]]:
        """access"""

    @abc.abstractmethod
    def SetAccessBindings(
        self,
        request: yandex.cloud.priv.iam.v1.restriction_type_service_pb2.SetRestrictionTypeAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def UpdateAccessBindings(
        self,
        request: yandex.cloud.priv.iam.v1.restriction_type_service_pb2.UpdateRestrictionTypeAccessBindingsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeOperationsResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.restriction_type_service_pb2.ListRestrictionTypeOperationsResponse]]:
        """operations"""

def add_RestrictionTypeServiceServicer_to_server(servicer: RestrictionTypeServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
