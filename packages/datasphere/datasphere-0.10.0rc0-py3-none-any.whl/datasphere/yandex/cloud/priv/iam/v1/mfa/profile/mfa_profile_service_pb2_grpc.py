# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

try:
    from yandex.cloud.priv.iam.v1.mfa.profile import mfa_profile_service_pb2 as yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_mfa_dot_profile_dot_mfa__profile__service__pb2
except ImportError:
    from datasphere.yandex.cloud.priv.iam.v1.mfa.profile import mfa_profile_service_pb2 as yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_mfa_dot_profile_dot_mfa__profile__service__pb2


try:
    from yandex.cloud.priv.operation import operation_pb2 as yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2
except ImportError:
    from datasphere.yandex.cloud.priv.operation import operation_pb2 as yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2


GRPC_GENERATED_VERSION = '1.63.2'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in yandex/cloud/priv/iam/v1/mfa/profile/mfa_profile_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class MfaProfileServiceStub(object):
    """A set of methods for managing mfa profiles.
    The user credentials should be passed in the authorization header.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProfilesConfig = channel.unary_unary(
                '/yandex.cloud.priv.iam.v1.mfa.MfaProfileService/GetProfilesConfig',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_mfa_dot_profile_dot_mfa__profile__service__pb2.GetProfilesConfigResponse.FromString,
                _registered_method=True)
        self.DeleteAllPofilesForSubject = channel.unary_unary(
                '/yandex.cloud.priv.iam.v1.mfa.MfaProfileService/DeleteAllPofilesForSubject',
                request_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_mfa_dot_profile_dot_mfa__profile__service__pb2.DeleteAllPofilesForSubjectRequest.SerializeToString,
                response_deserializer=yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.FromString,
                _registered_method=True)


class MfaProfileServiceServicer(object):
    """A set of methods for managing mfa profiles.
    The user credentials should be passed in the authorization header.
    """

    def GetProfilesConfig(self, request, context):
        """Returns allowed mfa profile types and configured mfa profiles.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAllPofilesForSubject(self, request, context):
        """Delete all mfa profiles for specified user.
        This method requires `iam.mfaProfiles.delete` permission.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MfaProfileServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProfilesConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfilesConfig,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_mfa_dot_profile_dot_mfa__profile__service__pb2.GetProfilesConfigResponse.SerializeToString,
            ),
            'DeleteAllPofilesForSubject': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAllPofilesForSubject,
                    request_deserializer=yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_mfa_dot_profile_dot_mfa__profile__service__pb2.DeleteAllPofilesForSubjectRequest.FromString,
                    response_serializer=yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yandex.cloud.priv.iam.v1.mfa.MfaProfileService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MfaProfileService(object):
    """A set of methods for managing mfa profiles.
    The user credentials should be passed in the authorization header.
    """

    @staticmethod
    def GetProfilesConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.priv.iam.v1.mfa.MfaProfileService/GetProfilesConfig',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_mfa_dot_profile_dot_mfa__profile__service__pb2.GetProfilesConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAllPofilesForSubject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yandex.cloud.priv.iam.v1.mfa.MfaProfileService/DeleteAllPofilesForSubject',
            yandex_dot_cloud_dot_priv_dot_iam_dot_v1_dot_mfa_dot_profile_dot_mfa__profile__service__pb2.DeleteAllPofilesForSubjectRequest.SerializeToString,
            yandex_dot_cloud_dot_priv_dot_operation_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
