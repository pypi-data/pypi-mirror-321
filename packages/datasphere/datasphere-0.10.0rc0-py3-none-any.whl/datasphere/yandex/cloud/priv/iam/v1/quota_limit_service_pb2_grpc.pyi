"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


try:
    import yandex.cloud.priv.quota.quota_limit_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.quota.quota_limit_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class QuotaLimitServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.quota.quota_limit_pb2.GetQuotaLimitRequest,
        yandex.cloud.priv.quota.quota_limit_pb2.GetQuotaLimitResponse,
    ]

    GetDefault: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.quota.quota_limit_pb2.GetDefaultQuotaLimitRequest,
        yandex.cloud.priv.quota.quota_limit_pb2.GetDefaultQuotaLimitResponse,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.quota.quota_limit_pb2.UpdateQuotaLimitRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    BatchUpdate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.quota.quota_limit_pb2.BatchUpdateQuotaLimitsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

class QuotaLimitServiceAsyncStub:
    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.quota.quota_limit_pb2.GetQuotaLimitRequest,
        yandex.cloud.priv.quota.quota_limit_pb2.GetQuotaLimitResponse,
    ]

    GetDefault: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.quota.quota_limit_pb2.GetDefaultQuotaLimitRequest,
        yandex.cloud.priv.quota.quota_limit_pb2.GetDefaultQuotaLimitResponse,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.quota.quota_limit_pb2.UpdateQuotaLimitRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    BatchUpdate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.quota.quota_limit_pb2.BatchUpdateQuotaLimitsRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

class QuotaLimitServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.quota.quota_limit_pb2.GetQuotaLimitRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.quota.quota_limit_pb2.GetQuotaLimitResponse, collections.abc.Awaitable[yandex.cloud.priv.quota.quota_limit_pb2.GetQuotaLimitResponse]]: ...

    @abc.abstractmethod
    def GetDefault(
        self,
        request: yandex.cloud.priv.quota.quota_limit_pb2.GetDefaultQuotaLimitRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.quota.quota_limit_pb2.GetDefaultQuotaLimitResponse, collections.abc.Awaitable[yandex.cloud.priv.quota.quota_limit_pb2.GetDefaultQuotaLimitResponse]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.quota.quota_limit_pb2.UpdateQuotaLimitRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def BatchUpdate(
        self,
        request: yandex.cloud.priv.quota.quota_limit_pb2.BatchUpdateQuotaLimitsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

def add_QuotaLimitServiceServicer_to_server(servicer: QuotaLimitServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
