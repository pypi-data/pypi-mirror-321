"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

try:
    import yandex.cloud.priv.iam.v1.subject_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.subject_pb2


DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetOrCreateSubjectRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_ID_FIELD_NUMBER: builtins.int
    SUBJECT_TYPE_FIELD_NUMBER: builtins.int
    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    FEDERATION_ID_FIELD_NUMBER: builtins.int
    subject_id: builtins.str
    """Optional IAM Subject unique identifier (well-known-id)."""
    subject_type: builtins.str
    """IAM Subject type. May be one of:
       * serviceAccount (unsupported yet)
       * federatedUser
       * invitee
    """
    external_id: builtins.str
    """The Subject external (IdP-specific) identifier."""
    attributes: builtins.str
    """Json-string representation of map<string, object> IAM Subject attributes."""
    settings: builtins.str
    """Json-string representation of map<string, object> IAM Subject settings."""
    federation_id: builtins.str
    """Subject's federation id."""
    def __init__(
        self,
        *,
        subject_id: builtins.str = ...,
        subject_type: builtins.str = ...,
        external_id: builtins.str = ...,
        attributes: builtins.str = ...,
        settings: builtins.str = ...,
        federation_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "external_id", b"external_id", "federation_id", b"federation_id", "settings", b"settings", "subject_id", b"subject_id", "subject_type", b"subject_type"]) -> None: ...

global___GetOrCreateSubjectRequest = GetOrCreateSubjectRequest

@typing.final
class GetOrCreateSubjectResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    SUBJECT_TYPE_FIELD_NUMBER: builtins.int
    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    FEDERATION_ID_FIELD_NUMBER: builtins.int
    NEW_SUBJECT_CREATED_FIELD_NUMBER: builtins.int
    id: builtins.str
    """IAM Subject unique identifier."""
    subject_type: builtins.str
    """IAM Subject type."""
    external_id: builtins.str
    """The Subject external (IdP-specific) identifier."""
    attributes: builtins.str
    """Json-string representation of map<string, object> IAM Subject attributes."""
    settings: builtins.str
    """Json-string representation of map<string, object> IAM Subject settings."""
    federation_id: builtins.str
    """Subject's federation id."""
    new_subject_created: builtins.bool
    """Flag indicating that a new subject was created as a result of request."""
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Creation timestamp."""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        subject_type: builtins.str = ...,
        external_id: builtins.str = ...,
        attributes: builtins.str = ...,
        settings: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        federation_id: builtins.str = ...,
        new_subject_created: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "created_at", b"created_at", "external_id", b"external_id", "federation_id", b"federation_id", "id", b"id", "new_subject_created", b"new_subject_created", "settings", b"settings", "subject_type", b"subject_type"]) -> None: ...

global___GetOrCreateSubjectResponse = GetOrCreateSubjectResponse

@typing.final
class MergeSubjectsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOURCE_SUBJECT_ID_FIELD_NUMBER: builtins.int
    DESTINATION_SUBJECT_ID_FIELD_NUMBER: builtins.int
    source_subject_id: builtins.str
    """Source subject.
    Attention!!! Source subject will be deleted at the end of the merge operation.
    """
    destination_subject_id: builtins.str
    """Destination subject."""
    def __init__(
        self,
        *,
        source_subject_id: builtins.str = ...,
        destination_subject_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["destination_subject_id", b"destination_subject_id", "source_subject_id", b"source_subject_id"]) -> None: ...

global___MergeSubjectsRequest = MergeSubjectsRequest

@typing.final
class MergeSubjectsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOURCE_SUBJECT_ID_FIELD_NUMBER: builtins.int
    DESTINATION_SUBJECT_ID_FIELD_NUMBER: builtins.int
    source_subject_id: builtins.str
    destination_subject_id: builtins.str
    def __init__(
        self,
        *,
        source_subject_id: builtins.str = ...,
        destination_subject_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["destination_subject_id", b"destination_subject_id", "source_subject_id", b"source_subject_id"]) -> None: ...

global___MergeSubjectsMetadata = MergeSubjectsMetadata

@typing.final
class DeleteSubjectRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_ID_FIELD_NUMBER: builtins.int
    subject_id: builtins.str
    def __init__(
        self,
        *,
        subject_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["subject_id", b"subject_id"]) -> None: ...

global___DeleteSubjectRequest = DeleteSubjectRequest

@typing.final
class DeleteSubjectMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_ID_FIELD_NUMBER: builtins.int
    subject_id: builtins.str
    def __init__(
        self,
        *,
        subject_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["subject_id", b"subject_id"]) -> None: ...

global___DeleteSubjectMetadata = DeleteSubjectMetadata

@typing.final
class SubjectExternalIdentity(google.protobuf.message.Message):
    """----------------------- SubjectServiceV2 messages -----------------------"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    FEDERATION_ID_FIELD_NUMBER: builtins.int
    external_id: builtins.str
    federation_id: builtins.str
    def __init__(
        self,
        *,
        external_id: builtins.str = ...,
        federation_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["external_id", b"external_id", "federation_id", b"federation_id"]) -> None: ...

global___SubjectExternalIdentity = SubjectExternalIdentity

@typing.final
class SubjectIdentity(google.protobuf.message.Message):
    """All bulk methods accept SubjectIdentities where:
    * neither subject_id nor external_identity is specified - create new subject of specified type with generated id
      (assuming subject_type does not require an external identity)
    * only subject_id is specified - lookup subject by id or create new subject of specified type with specified id
      (assuming subject_type does not require an external identity)
    * only external_identity is specified - lookup subject by external identity or create new subject of specified type
      with generated id and specified external identity (assuming subject_type requires one)
    * both subject_id and external_identity are specified - lookup subject by id and external identity (both must match)
      or create new subject of specified type with specified id and external identity (assuming subject_type requires one).
      Existing subjects with conflicting subject_id/external_identity cause FAILED_PRECONDITION.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_ID_FIELD_NUMBER: builtins.int
    EXTERNAL_IDENTITY_FIELD_NUMBER: builtins.int
    SUBJECT_TYPE_FIELD_NUMBER: builtins.int
    subject_id: builtins.str
    """IAM subject id."""
    subject_type: builtins.str
    """Subject type (e.g. "userAccount", "invitee", etc.). Always required because authorization depends on it."""
    @property
    def external_identity(self) -> global___SubjectExternalIdentity:
        """Subject's identity in external IdP."""

    def __init__(
        self,
        *,
        subject_id: builtins.str = ...,
        external_identity: global___SubjectExternalIdentity | None = ...,
        subject_type: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["external_identity", b"external_identity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["external_identity", b"external_identity", "subject_id", b"subject_id", "subject_type", b"subject_type"]) -> None: ...

global___SubjectIdentity = SubjectIdentity

@typing.final
class SubjectDefinition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ATTRIBUTES_PATCH_FIELD_NUMBER: builtins.int
    SETTINGS_PATCH_FIELD_NUMBER: builtins.int
    attributes_patch: builtins.str
    """Serialized JSON patch for subject's attributes. (https://tools.ietf.org/html/rfc6902)
    For new subjects patch is applied to an empty object {}.
    """
    settings_patch: builtins.str
    """Serialized JSON patch for subject's settings. (https://tools.ietf.org/html/rfc6902)
    For new subjects patch is applied to an empty object {}.
    """
    def __init__(
        self,
        *,
        attributes_patch: builtins.str = ...,
        settings_patch: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attributes_patch", b"attributes_patch", "settings_patch", b"settings_patch"]) -> None: ...

global___SubjectDefinition = SubjectDefinition

@typing.final
class SubjectModificationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDENTITY_FIELD_NUMBER: builtins.int
    DEFINITION_FIELD_NUMBER: builtins.int
    @property
    def identity(self) -> global___SubjectIdentity: ...
    @property
    def definition(self) -> global___SubjectDefinition: ...
    def __init__(
        self,
        *,
        identity: global___SubjectIdentity | None = ...,
        definition: global___SubjectDefinition | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["definition", b"definition", "identity", b"identity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["definition", b"definition", "identity", b"identity"]) -> None: ...

global___SubjectModificationRequest = SubjectModificationRequest

@typing.final
class BulkGetOrCreateSubjectsRequest(google.protobuf.message.Message):
    """Search for subjects with matching SubjectIdentities and return them (in which case SubjectDefinitions are ignored).
    If some subjects were not found, create them using provided SubjectDefinitions.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class PerFederationQuotasEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    REQUESTS_FIELD_NUMBER: builtins.int
    PER_FEDERATION_QUOTAS_FIELD_NUMBER: builtins.int
    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubjectModificationRequest]: ...
    @property
    def per_federation_quotas(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]:
        """Total subjects count quotas per "federation_id".
        If number of total subjects in some federation exceeds quota for that "federation_id",
        operation will fail with FAILED_PRECONDITION code and will contain com.google.rpc.QuotaFailure detail
        outlining which "federation_id" quota was exceeded (any one if multiple).
        Only applicable to subjects that have "external_identity".
        """

    def __init__(
        self,
        *,
        requests: collections.abc.Iterable[global___SubjectModificationRequest] | None = ...,
        per_federation_quotas: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["per_federation_quotas", b"per_federation_quotas", "requests", b"requests"]) -> None: ...

global___BulkGetOrCreateSubjectsRequest = BulkGetOrCreateSubjectsRequest

@typing.final
class BulkGetOrCreateSubjectsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXISTING_SUBJECTS_FIELD_NUMBER: builtins.int
    CREATED_SUBJECTS_FIELD_NUMBER: builtins.int
    @property
    def existing_subjects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2]: ...
    @property
    def created_subjects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2]: ...
    def __init__(
        self,
        *,
        existing_subjects: collections.abc.Iterable[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2] | None = ...,
        created_subjects: collections.abc.Iterable[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["created_subjects", b"created_subjects", "existing_subjects", b"existing_subjects"]) -> None: ...

global___BulkGetOrCreateSubjectsResponse = BulkGetOrCreateSubjectsResponse

@typing.final
class BulkGetOrCreateSubjectsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_IDS_FIELD_NUMBER: builtins.int
    @property
    def subject_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        subject_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["subject_ids", b"subject_ids"]) -> None: ...

global___BulkGetOrCreateSubjectsMetadata = BulkGetOrCreateSubjectsMetadata

@typing.final
class BulkUpdateSubjectsRequest(google.protobuf.message.Message):
    """Search for subjects with matching SubjectIdentities and update their SubjectDefinitions."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUESTS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubjectModificationRequest]: ...
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Update mask fields are relative to SubjectDefinition.
        E.g. "attributes_patch", and not "definition.attributes_patch".
        """

    def __init__(
        self,
        *,
        requests: collections.abc.Iterable[global___SubjectModificationRequest] | None = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["requests", b"requests", "update_mask", b"update_mask"]) -> None: ...

global___BulkUpdateSubjectsRequest = BulkUpdateSubjectsRequest

@typing.final
class BulkUpdateSubjectsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UPDATED_SUBJECTS_FIELD_NUMBER: builtins.int
    @property
    def updated_subjects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2]: ...
    def __init__(
        self,
        *,
        updated_subjects: collections.abc.Iterable[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["updated_subjects", b"updated_subjects"]) -> None: ...

global___BulkUpdateSubjectsResponse = BulkUpdateSubjectsResponse

@typing.final
class BulkUpdateSubjectsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_IDS_FIELD_NUMBER: builtins.int
    @property
    def subject_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        subject_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["subject_ids", b"subject_ids"]) -> None: ...

global___BulkUpdateSubjectsMetadata = BulkUpdateSubjectsMetadata

@typing.final
class BulkCreateOrUpdateSubjectsRequest(google.protobuf.message.Message):
    """Search for subjects with matching SubjectIdentities and update SubjectDefinitions.
    If some subjects were not found, create them using provided SubjectDefinitions.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class PerFederationQuotasEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    REQUESTS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    PER_FEDERATION_QUOTAS_FIELD_NUMBER: builtins.int
    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubjectModificationRequest]: ...
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Update mask fields are relative to SubjectDefinition.
        Update mask is applied to existing subjects only. New subjects use entire SubjectDefinition.
        """

    @property
    def per_federation_quotas(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]:
        """Total subjects count quotas per "federation_id".
        If number of total subjects in some federation exceeds quota for that "federation_id",
        operation will fail with FAILED_PRECONDITION code and will contain com.google.rpc.QuotaFailure detail
        outlining which "federation_id" quota was exceeded (any one if multiple).
        Only applicable to subjects that have "external_identity".
        """

    def __init__(
        self,
        *,
        requests: collections.abc.Iterable[global___SubjectModificationRequest] | None = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
        per_federation_quotas: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["per_federation_quotas", b"per_federation_quotas", "requests", b"requests", "update_mask", b"update_mask"]) -> None: ...

global___BulkCreateOrUpdateSubjectsRequest = BulkCreateOrUpdateSubjectsRequest

@typing.final
class BulkCreateOrUpdateSubjectsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATED_SUBJECTS_FIELD_NUMBER: builtins.int
    UPDATED_SUBJECTS_FIELD_NUMBER: builtins.int
    @property
    def created_subjects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2]: ...
    @property
    def updated_subjects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2]: ...
    def __init__(
        self,
        *,
        created_subjects: collections.abc.Iterable[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2] | None = ...,
        updated_subjects: collections.abc.Iterable[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["created_subjects", b"created_subjects", "updated_subjects", b"updated_subjects"]) -> None: ...

global___BulkCreateOrUpdateSubjectsResponse = BulkCreateOrUpdateSubjectsResponse

@typing.final
class BulkCreateOrUpdateSubjectsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_IDS_FIELD_NUMBER: builtins.int
    @property
    def subject_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        subject_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["subject_ids", b"subject_ids"]) -> None: ...

global___BulkCreateOrUpdateSubjectsMetadata = BulkCreateOrUpdateSubjectsMetadata

@typing.final
class BulkDeleteSubjectsRequest(google.protobuf.message.Message):
    """Search for subjects with matching SubjectIdentities and delete them and all related IAM resources (access bindings, keys, etc.)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDENTITIES_FIELD_NUMBER: builtins.int
    @property
    def identities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubjectIdentity]: ...
    def __init__(
        self,
        *,
        identities: collections.abc.Iterable[global___SubjectIdentity] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["identities", b"identities"]) -> None: ...

global___BulkDeleteSubjectsRequest = BulkDeleteSubjectsRequest

@typing.final
class BulkDeleteSubjectsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DELETED_SUBJECTS_FIELD_NUMBER: builtins.int
    @property
    def deleted_subjects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2]: ...
    def __init__(
        self,
        *,
        deleted_subjects: collections.abc.Iterable[yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["deleted_subjects", b"deleted_subjects"]) -> None: ...

global___BulkDeleteSubjectsResponse = BulkDeleteSubjectsResponse

@typing.final
class BulkDeleteSubjectsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_IDS_FIELD_NUMBER: builtins.int
    @property
    def subject_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        subject_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["subject_ids", b"subject_ids"]) -> None: ...

global___BulkDeleteSubjectsMetadata = BulkDeleteSubjectsMetadata

@typing.final
class BulkMergeSubjectsRequest(google.protobuf.message.Message):
    """Search for subjects with matching SubjectIdentities and merge them into one."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDENTITIES_FIELD_NUMBER: builtins.int
    MERGE_INTO_FIELD_NUMBER: builtins.int
    @property
    def identities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubjectIdentity]:
        """Specified subjects will be deleted as a result of merge operation."""

    @property
    def merge_into(self) -> global___SubjectModificationRequest:
        """Existing or new subject to merge into."""

    def __init__(
        self,
        *,
        identities: collections.abc.Iterable[global___SubjectIdentity] | None = ...,
        merge_into: global___SubjectModificationRequest | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["merge_into", b"merge_into"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["identities", b"identities", "merge_into", b"merge_into"]) -> None: ...

global___BulkMergeSubjectsRequest = BulkMergeSubjectsRequest

@typing.final
class BulkMergeSubjectsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MERGED_SUBJECT_FIELD_NUMBER: builtins.int
    @property
    def merged_subject(self) -> yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2: ...
    def __init__(
        self,
        *,
        merged_subject: yandex.cloud.priv.iam.v1.subject_pb2.SubjectV2 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["merged_subject", b"merged_subject"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["merged_subject", b"merged_subject"]) -> None: ...

global___BulkMergeSubjectsResponse = BulkMergeSubjectsResponse

@typing.final
class BulkMergeSubjectsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBJECT_IDS_FIELD_NUMBER: builtins.int
    @property
    def subject_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        subject_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["subject_ids", b"subject_ids"]) -> None: ...

global___BulkMergeSubjectsMetadata = BulkMergeSubjectsMetadata
