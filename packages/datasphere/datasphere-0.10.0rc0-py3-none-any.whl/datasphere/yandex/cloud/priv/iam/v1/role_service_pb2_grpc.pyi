"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.iam.v1.role_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.role_pb2


try:
    import yandex.cloud.priv.iam.v1.role_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.iam.v1.role_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class RoleServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.GetRoleRequest,
        yandex.cloud.priv.iam.v1.role_pb2.Role,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.ListRolesRequest,
        yandex.cloud.priv.iam.v1.role_service_pb2.ListRolesResponse,
    ]

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.CreateRoleRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.UpdateRoleRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.DeleteRoleRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetCategory: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.GetRoleCategoryRequest,
        yandex.cloud.priv.iam.v1.role_pb2.RoleCategory,
    ]

    ListCategories: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.ListRoleCategoriesRequest,
        yandex.cloud.priv.iam.v1.role_service_pb2.ListRoleCategoriesResponse,
    ]

    CreateCategory: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.CreateRoleCategoryRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    UpdateCategory: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.UpdateRoleCategoryRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    DeleteCategory: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.DeleteRoleCategoryRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

class RoleServiceAsyncStub:
    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.GetRoleRequest,
        yandex.cloud.priv.iam.v1.role_pb2.Role,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.ListRolesRequest,
        yandex.cloud.priv.iam.v1.role_service_pb2.ListRolesResponse,
    ]

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.CreateRoleRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.UpdateRoleRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.DeleteRoleRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetCategory: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.GetRoleCategoryRequest,
        yandex.cloud.priv.iam.v1.role_pb2.RoleCategory,
    ]

    ListCategories: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.ListRoleCategoriesRequest,
        yandex.cloud.priv.iam.v1.role_service_pb2.ListRoleCategoriesResponse,
    ]

    CreateCategory: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.CreateRoleCategoryRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    UpdateCategory: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.UpdateRoleCategoryRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    DeleteCategory: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.role_service_pb2.DeleteRoleCategoryRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

class RoleServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.GetRoleRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.role_pb2.Role, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.role_pb2.Role]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.ListRolesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.role_service_pb2.ListRolesResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.role_service_pb2.ListRolesResponse]]: ...

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.CreateRoleRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.UpdateRoleRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.DeleteRoleRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetCategory(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.GetRoleCategoryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.role_pb2.RoleCategory, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.role_pb2.RoleCategory]]: ...

    @abc.abstractmethod
    def ListCategories(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.ListRoleCategoriesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.role_service_pb2.ListRoleCategoriesResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.role_service_pb2.ListRoleCategoriesResponse]]: ...

    @abc.abstractmethod
    def CreateCategory(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.CreateRoleCategoryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def UpdateCategory(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.UpdateRoleCategoryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def DeleteCategory(
        self,
        request: yandex.cloud.priv.iam.v1.role_service_pb2.DeleteRoleCategoryRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

def add_RoleServiceServicer_to_server(servicer: RoleServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
