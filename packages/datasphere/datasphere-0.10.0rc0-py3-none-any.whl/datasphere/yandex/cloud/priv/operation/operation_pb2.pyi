"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2

try:
    import google.rpc.status_pb2
except ImportError:
    import datasphere.google.rpc.status_pb2

import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Operation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    CREATED_BY_FIELD_NUMBER: builtins.int
    MODIFIED_AT_FIELD_NUMBER: builtins.int
    DONE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    id: builtins.str
    description: builtins.str
    """ex: Create VM, Stop VM, Delete Disk, Snapshot Disk, etc"""
    created_by: builtins.str
    done: builtins.bool
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def metadata(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """for error and cancellation"""

    @property
    def response(self) -> google.protobuf.any_pb2.Any:
        """for 'Create/Update' should contain entity"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        description: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_by: builtins.str = ...,
        modified_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        done: builtins.bool = ...,
        metadata: google.protobuf.any_pb2.Any | None = ...,
        error: google.rpc.status_pb2.Status | None = ...,
        response: google.protobuf.any_pb2.Any | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "error", b"error", "metadata", b"metadata", "modified_at", b"modified_at", "response", b"response", "result", b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["created_at", b"created_at", "created_by", b"created_by", "description", b"description", "done", b"done", "error", b"error", "id", b"id", "metadata", b"metadata", "modified_at", b"modified_at", "response", b"response", "result", b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["result", b"result"]) -> typing.Literal["error", "response"] | None: ...

global___Operation = Operation
