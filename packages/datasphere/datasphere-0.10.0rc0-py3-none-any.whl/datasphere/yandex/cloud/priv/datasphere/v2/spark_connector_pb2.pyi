"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

try:
    import yandex.cloud.priv.datasphere.v2.data_proc_template_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.data_proc_template_pb2


if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class SparkConnector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Mode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SparkConnector._Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        MODE_UNSPECIFIED: SparkConnector._Mode.ValueType  # 0
        SPARK_CONTEXT: SparkConnector._Mode.ValueType  # 1
        SPARK_CONNECT: SparkConnector._Mode.ValueType  # 2

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper): ...
    MODE_UNSPECIFIED: SparkConnector.Mode.ValueType  # 0
    SPARK_CONTEXT: SparkConnector.Mode.ValueType  # 1
    SPARK_CONNECT: SparkConnector.Mode.ValueType  # 2

    @typing.final
    class PermanentCluster(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        MASTER_NODE_HOST_FIELD_NUMBER: builtins.int
        VERSION_FIELD_NUMBER: builtins.int
        STATUS_FIELD_NUMBER: builtins.int
        FOLDER_ID_FIELD_NUMBER: builtins.int
        BUCKET_FIELD_NUMBER: builtins.int
        id: builtins.str
        name: builtins.str
        master_node_host: builtins.str
        version: builtins.str
        status: builtins.str
        folder_id: builtins.str
        bucket: builtins.str
        def __init__(
            self,
            *,
            id: builtins.str = ...,
            name: builtins.str = ...,
            master_node_host: builtins.str = ...,
            version: builtins.str = ...,
            status: builtins.str = ...,
            folder_id: builtins.str = ...,
            bucket: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["bucket", b"bucket", "folder_id", b"folder_id", "id", b"id", "master_node_host", b"master_node_host", "name", b"name", "status", b"status", "version", b"version"]) -> None: ...

    @typing.final
    class TemporaryCluster(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SPEC_FIELD_NUMBER: builtins.int
        ID_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        FOLDER_ID_FIELD_NUMBER: builtins.int
        MASTER_NODE_HOST_FIELD_NUMBER: builtins.int
        STATUS_FIELD_NUMBER: builtins.int
        VERSION_FIELD_NUMBER: builtins.int
        id: builtins.str
        name: builtins.str
        folder_id: builtins.str
        master_node_host: builtins.str
        status: builtins.str
        version: builtins.str
        @property
        def spec(self) -> yandex.cloud.priv.datasphere.v2.data_proc_template_pb2.DataProcClusterSpec: ...
        def __init__(
            self,
            *,
            spec: yandex.cloud.priv.datasphere.v2.data_proc_template_pb2.DataProcClusterSpec | None = ...,
            id: builtins.str = ...,
            name: builtins.str = ...,
            folder_id: builtins.str = ...,
            master_node_host: builtins.str = ...,
            status: builtins.str = ...,
            version: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["spec", b"spec"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["folder_id", b"folder_id", "id", b"id", "master_node_host", b"master_node_host", "name", b"name", "spec", b"spec", "status", b"status", "version", b"version"]) -> None: ...

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class SessionParamsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATED_BY_ID_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    PERMANENT_CLUSTER_FIELD_NUMBER: builtins.int
    TEMPORARY_CLUSTER_FIELD_NUMBER: builtins.int
    SESSION_PARAMS_FIELD_NUMBER: builtins.int
    S3_ACCESS_KEY_FIELD_NUMBER: builtins.int
    S3_SECRET_KEY_SECRET_ID_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    SPARK_IMAGE_DESCRIPTION_FIELD_NUMBER: builtins.int
    PUBLIC_SSH_KEY_FIELD_NUMBER: builtins.int
    id: builtins.str
    project_id: builtins.str
    name: builtins.str
    description: builtins.str
    created_by_id: builtins.str
    s3_access_key: builtins.str
    s3_secret_key_secret_id: builtins.str
    mode: global___SparkConnector.Mode.ValueType
    spark_image_description: builtins.str
    public_ssh_key: builtins.str
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def permanent_cluster(self) -> global___SparkConnector.PermanentCluster: ...
    @property
    def temporary_cluster(self) -> global___SparkConnector.TemporaryCluster: ...
    @property
    def session_params(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        project_id: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        created_by_id: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        permanent_cluster: global___SparkConnector.PermanentCluster | None = ...,
        temporary_cluster: global___SparkConnector.TemporaryCluster | None = ...,
        session_params: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        s3_access_key: builtins.str = ...,
        s3_secret_key_secret_id: builtins.str = ...,
        mode: global___SparkConnector.Mode.ValueType = ...,
        spark_image_description: builtins.str = ...,
        public_ssh_key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["cluster", b"cluster", "created_at", b"created_at", "permanent_cluster", b"permanent_cluster", "temporary_cluster", b"temporary_cluster", "updated_at", b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cluster", b"cluster", "created_at", b"created_at", "created_by_id", b"created_by_id", "description", b"description", "id", b"id", "labels", b"labels", "mode", b"mode", "name", b"name", "permanent_cluster", b"permanent_cluster", "project_id", b"project_id", "public_ssh_key", b"public_ssh_key", "s3_access_key", b"s3_access_key", "s3_secret_key_secret_id", b"s3_secret_key_secret_id", "session_params", b"session_params", "spark_image_description", b"spark_image_description", "temporary_cluster", b"temporary_cluster", "updated_at", b"updated_at"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["cluster", b"cluster"]) -> typing.Literal["permanent_cluster", "temporary_cluster"] | None: ...

global___SparkConnector = SparkConnector
