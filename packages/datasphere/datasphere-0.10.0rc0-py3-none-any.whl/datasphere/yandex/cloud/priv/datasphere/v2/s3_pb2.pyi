"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _S3MountMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _S3MountModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_S3MountMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    S3_MOUNT_MODE_UNSPECIFIED: _S3MountMode.ValueType  # 0
    READ_ONLY: _S3MountMode.ValueType  # 1
    READ_WRITE: _S3MountMode.ValueType  # 2

class S3MountMode(_S3MountMode, metaclass=_S3MountModeEnumTypeWrapper): ...

S3_MOUNT_MODE_UNSPECIFIED: S3MountMode.ValueType  # 0
READ_ONLY: S3MountMode.ValueType  # 1
READ_WRITE: S3MountMode.ValueType  # 2
global___S3MountMode = S3MountMode

class _S3Backend:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _S3BackendEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_S3Backend.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    S3_BACKEND_UNSPECIFIED: _S3Backend.ValueType  # 0
    DEFAULT: _S3Backend.ValueType  # 1
    GEESEFS: _S3Backend.ValueType  # 3

class S3Backend(_S3Backend, metaclass=_S3BackendEnumTypeWrapper): ...

S3_BACKEND_UNSPECIFIED: S3Backend.ValueType  # 0
DEFAULT: S3Backend.ValueType  # 1
GEESEFS: S3Backend.ValueType  # 3
global___S3Backend = S3Backend

@typing.final
class S3(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CREATED_BY_ID_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    BUCKET_FIELD_NUMBER: builtins.int
    MOUNT_PATH_FIELD_NUMBER: builtins.int
    ACCESS_KEY_ID_FIELD_NUMBER: builtins.int
    SECRET_ACCESS_KEY_SECRET_ID_FIELD_NUMBER: builtins.int
    S3_MOUNT_MODE_FIELD_NUMBER: builtins.int
    S3_BACKEND_FIELD_NUMBER: builtins.int
    id: builtins.str
    project_id: builtins.str
    name: builtins.str
    description: builtins.str
    created_by_id: builtins.str
    endpoint: builtins.str
    bucket: builtins.str
    mount_path: builtins.str
    access_key_id: builtins.str
    secret_access_key_secret_id: builtins.str
    s3_mount_mode: global___S3MountMode.ValueType
    s3_backend: global___S3Backend.ValueType
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        project_id: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        created_by_id: builtins.str = ...,
        endpoint: builtins.str = ...,
        bucket: builtins.str = ...,
        mount_path: builtins.str = ...,
        access_key_id: builtins.str = ...,
        secret_access_key_secret_id: builtins.str = ...,
        s3_mount_mode: global___S3MountMode.ValueType = ...,
        s3_backend: global___S3Backend.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["access_key_id", b"access_key_id", "bucket", b"bucket", "created_at", b"created_at", "created_by_id", b"created_by_id", "description", b"description", "endpoint", b"endpoint", "id", b"id", "labels", b"labels", "mount_path", b"mount_path", "name", b"name", "project_id", b"project_id", "s3_backend", b"s3_backend", "s3_mount_mode", b"s3_mount_mode", "secret_access_key_secret_id", b"secret_access_key_secret_id"]) -> None: ...

global___S3 = S3

@typing.final
class S3Status(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class StatusActive(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        def __init__(
            self,
        ) -> None: ...

    @typing.final
    class StatusInactive(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        def __init__(
            self,
        ) -> None: ...

    @typing.final
    class StatusError(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ERROR_FIELD_NUMBER: builtins.int
        error: builtins.str
        def __init__(
            self,
            *,
            error: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["error", b"error"]) -> None: ...

    STATUS_ACTIVE_FIELD_NUMBER: builtins.int
    STATUS_INACTIVE_FIELD_NUMBER: builtins.int
    STATUS_ERROR_FIELD_NUMBER: builtins.int
    @property
    def status_active(self) -> global___S3Status.StatusActive: ...
    @property
    def status_inactive(self) -> global___S3Status.StatusInactive: ...
    @property
    def status_error(self) -> global___S3Status.StatusError: ...
    def __init__(
        self,
        *,
        status_active: global___S3Status.StatusActive | None = ...,
        status_inactive: global___S3Status.StatusInactive | None = ...,
        status_error: global___S3Status.StatusError | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["status", b"status", "status_active", b"status_active", "status_error", b"status_error", "status_inactive", b"status_inactive"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["status", b"status", "status_active", b"status_active", "status_error", b"status_error", "status_inactive", b"status_inactive"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["status", b"status"]) -> typing.Literal["status_active", "status_inactive", "status_error"] | None: ...

global___S3Status = S3Status
