"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import sys
import typing

try:
    import yandex.cloud.priv.datasphere.v2.spark_connector_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.spark_connector_pb2


if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Project(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Settings(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _Ide:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _IdeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Project.Settings._Ide.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            IDE_UNSPECIFIED: Project.Settings._Ide.ValueType  # 0
            JUPYTER_LAB: Project.Settings._Ide.ValueType  # 1
            VS_CODE: Project.Settings._Ide.ValueType  # 2

        class Ide(_Ide, metaclass=_IdeEnumTypeWrapper): ...
        IDE_UNSPECIFIED: Project.Settings.Ide.ValueType  # 0
        JUPYTER_LAB: Project.Settings.Ide.ValueType  # 1
        VS_CODE: Project.Settings.Ide.ValueType  # 2

        class _StaleExecutionTimeoutMode:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _StaleExecutionTimeoutModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Project.Settings._StaleExecutionTimeoutMode.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            STALE_EXECUTION_TIMEOUT_MODE_UNSPECIFIED: Project.Settings._StaleExecutionTimeoutMode.ValueType  # 0
            ONE_HOUR: Project.Settings._StaleExecutionTimeoutMode.ValueType  # 1
            THREE_HOURS: Project.Settings._StaleExecutionTimeoutMode.ValueType  # 2
            NO_TIMEOUT: Project.Settings._StaleExecutionTimeoutMode.ValueType  # 3

        class StaleExecutionTimeoutMode(_StaleExecutionTimeoutMode, metaclass=_StaleExecutionTimeoutModeEnumTypeWrapper): ...
        STALE_EXECUTION_TIMEOUT_MODE_UNSPECIFIED: Project.Settings.StaleExecutionTimeoutMode.ValueType  # 0
        ONE_HOUR: Project.Settings.StaleExecutionTimeoutMode.ValueType  # 1
        THREE_HOURS: Project.Settings.StaleExecutionTimeoutMode.ValueType  # 2
        NO_TIMEOUT: Project.Settings.StaleExecutionTimeoutMode.ValueType  # 3

        SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
        SUBNET_ID_FIELD_NUMBER: builtins.int
        DATA_PROC_CLUSTER_ID_FIELD_NUMBER: builtins.int
        SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
        EARLY_ACCESS_FIELD_NUMBER: builtins.int
        IDE_FIELD_NUMBER: builtins.int
        DEFAULT_FOLDER_ID_FIELD_NUMBER: builtins.int
        STALE_EXEC_TIMEOUT_MODE_FIELD_NUMBER: builtins.int
        VM_INACTIVITY_TIMEOUT_FIELD_NUMBER: builtins.int
        DEFAULT_DEDICATED_SPEC_FIELD_NUMBER: builtins.int
        service_account_id: builtins.str
        subnet_id: builtins.str
        data_proc_cluster_id: builtins.str
        early_access: builtins.bool
        ide: global___Project.Settings.Ide.ValueType
        default_folder_id: builtins.str
        stale_exec_timeout_mode: global___Project.Settings.StaleExecutionTimeoutMode.ValueType
        default_dedicated_spec: builtins.str
        @property
        def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        @property
        def vm_inactivity_timeout(self) -> google.protobuf.duration_pb2.Duration: ...
        def __init__(
            self,
            *,
            service_account_id: builtins.str = ...,
            subnet_id: builtins.str = ...,
            data_proc_cluster_id: builtins.str = ...,
            security_group_ids: collections.abc.Iterable[builtins.str] | None = ...,
            early_access: builtins.bool = ...,
            ide: global___Project.Settings.Ide.ValueType = ...,
            default_folder_id: builtins.str = ...,
            stale_exec_timeout_mode: global___Project.Settings.StaleExecutionTimeoutMode.ValueType = ...,
            vm_inactivity_timeout: google.protobuf.duration_pb2.Duration | None = ...,
            default_dedicated_spec: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["vm_inactivity_timeout", b"vm_inactivity_timeout"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["data_proc_cluster_id", b"data_proc_cluster_id", "default_dedicated_spec", b"default_dedicated_spec", "default_folder_id", b"default_folder_id", "early_access", b"early_access", "ide", b"ide", "security_group_ids", b"security_group_ids", "service_account_id", b"service_account_id", "stale_exec_timeout_mode", b"stale_exec_timeout_mode", "subnet_id", b"subnet_id", "vm_inactivity_timeout", b"vm_inactivity_timeout"]) -> None: ...

    @typing.final
    class Limits(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        MAX_UNITS_PER_HOUR_FIELD_NUMBER: builtins.int
        MAX_UNITS_PER_EXECUTION_FIELD_NUMBER: builtins.int
        @property
        def max_units_per_hour(self) -> google.protobuf.wrappers_pb2.Int64Value: ...
        @property
        def max_units_per_execution(self) -> google.protobuf.wrappers_pb2.Int64Value: ...
        def __init__(
            self,
            *,
            max_units_per_hour: google.protobuf.wrappers_pb2.Int64Value | None = ...,
            max_units_per_execution: google.protobuf.wrappers_pb2.Int64Value | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["max_units_per_execution", b"max_units_per_execution", "max_units_per_hour", b"max_units_per_hour"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["max_units_per_execution", b"max_units_per_execution", "max_units_per_hour", b"max_units_per_hour"]) -> None: ...

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CREATED_BY_ID_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    LIMITS_FIELD_NUMBER: builtins.int
    BUDGET_ID_FIELD_NUMBER: builtins.int
    ZONE_ID_FIELD_NUMBER: builtins.int
    COMMUNITY_ID_FIELD_NUMBER: builtins.int
    BILLING_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    description: builtins.str
    created_by_id: builtins.str
    budget_id: builtins.str
    zone_id: builtins.str
    community_id: builtins.str
    billing_account_id: builtins.str
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def settings(self) -> global___Project.Settings: ...
    @property
    def limits(self) -> global___Project.Limits: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        created_by_id: builtins.str = ...,
        settings: global___Project.Settings | None = ...,
        limits: global___Project.Limits | None = ...,
        budget_id: builtins.str = ...,
        zone_id: builtins.str = ...,
        community_id: builtins.str = ...,
        billing_account_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "limits", b"limits", "settings", b"settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["billing_account_id", b"billing_account_id", "budget_id", b"budget_id", "community_id", b"community_id", "created_at", b"created_at", "created_by_id", b"created_by_id", "description", b"description", "id", b"id", "labels", b"labels", "limits", b"limits", "name", b"name", "settings", b"settings", "zone_id", b"zone_id"]) -> None: ...

global___Project = Project

@typing.final
class InstanceSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _GpuType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _GpuTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[InstanceSpec._GpuType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        GPU_TYPE_UNSPECIFIED: InstanceSpec._GpuType.ValueType  # 0
        GPU_TYPE_V100: InstanceSpec._GpuType.ValueType  # 1
        GPU_TYPE_A100: InstanceSpec._GpuType.ValueType  # 2
        GPU_TYPE_MIG: InstanceSpec._GpuType.ValueType  # 3
        GPU_TYPE_T4: InstanceSpec._GpuType.ValueType  # 4
        GPU_TYPE_T4I: InstanceSpec._GpuType.ValueType  # 5

    class GpuType(_GpuType, metaclass=_GpuTypeEnumTypeWrapper): ...
    GPU_TYPE_UNSPECIFIED: InstanceSpec.GpuType.ValueType  # 0
    GPU_TYPE_V100: InstanceSpec.GpuType.ValueType  # 1
    GPU_TYPE_A100: InstanceSpec.GpuType.ValueType  # 2
    GPU_TYPE_MIG: InstanceSpec.GpuType.ValueType  # 3
    GPU_TYPE_T4: InstanceSpec.GpuType.ValueType  # 4
    GPU_TYPE_T4I: InstanceSpec.GpuType.ValueType  # 5

    class _CellType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CellTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[InstanceSpec._CellType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CELL_TYPE_UNSPECIFIED: InstanceSpec._CellType.ValueType  # 0
        CELL_SYNCHRONOUS: InstanceSpec._CellType.ValueType  # 1
        CELL_ASYNCHRONOUS: InstanceSpec._CellType.ValueType  # 2

    class CellType(_CellType, metaclass=_CellTypeEnumTypeWrapper): ...
    CELL_TYPE_UNSPECIFIED: InstanceSpec.CellType.ValueType  # 0
    CELL_SYNCHRONOUS: InstanceSpec.CellType.ValueType  # 1
    CELL_ASYNCHRONOUS: InstanceSpec.CellType.ValueType  # 2

    NAME_FIELD_NUMBER: builtins.int
    CPU_COUNT_FIELD_NUMBER: builtins.int
    GPU_COUNT_FIELD_NUMBER: builtins.int
    GPU_TYPE_FIELD_NUMBER: builtins.int
    MIN_RAM_GB_FIELD_NUMBER: builtins.int
    MAX_RAM_GB_FIELD_NUMBER: builtins.int
    COST_FIELD_NUMBER: builtins.int
    COST_DEDICATED_FIELD_NUMBER: builtins.int
    CURRENCY_FIELD_NUMBER: builtins.int
    CELL_TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    cpu_count: builtins.int
    gpu_count: builtins.int
    gpu_type: global___InstanceSpec.GpuType.ValueType
    min_ram_gb: builtins.int
    max_ram_gb: builtins.int
    cost: builtins.float
    cost_dedicated: builtins.float
    currency: builtins.str
    cell_type: global___InstanceSpec.CellType.ValueType
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        cpu_count: builtins.int = ...,
        gpu_count: builtins.int = ...,
        gpu_type: global___InstanceSpec.GpuType.ValueType = ...,
        min_ram_gb: builtins.int = ...,
        max_ram_gb: builtins.int = ...,
        cost: builtins.float = ...,
        cost_dedicated: builtins.float = ...,
        currency: builtins.str = ...,
        cell_type: global___InstanceSpec.CellType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cell_type", b"cell_type", "cost", b"cost", "cost_dedicated", b"cost_dedicated", "cpu_count", b"cpu_count", "currency", b"currency", "gpu_count", b"gpu_count", "gpu_type", b"gpu_type", "max_ram_gb", b"max_ram_gb", "min_ram_gb", b"min_ram_gb", "name", b"name"]) -> None: ...

global___InstanceSpec = InstanceSpec

@typing.final
class ProjectInstance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _State:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ProjectInstance._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        INSTANCE_STATE_UNSPECIFIED: ProjectInstance._State.ValueType  # 0
        ALLOCATING: ProjectInstance._State.ValueType  # 1
        ALLOCATED: ProjectInstance._State.ValueType  # 2
        STARTED: ProjectInstance._State.ValueType  # 3
        ALIVE: ProjectInstance._State.ValueType  # 4
        STOPPING: ProjectInstance._State.ValueType  # 5
        STOPPED: ProjectInstance._State.ValueType  # 6
        DELETED: ProjectInstance._State.ValueType  # 7
        DEAD: ProjectInstance._State.ValueType  # 8

    class State(_State, metaclass=_StateEnumTypeWrapper): ...
    INSTANCE_STATE_UNSPECIFIED: ProjectInstance.State.ValueType  # 0
    ALLOCATING: ProjectInstance.State.ValueType  # 1
    ALLOCATED: ProjectInstance.State.ValueType  # 2
    STARTED: ProjectInstance.State.ValueType  # 3
    ALIVE: ProjectInstance.State.ValueType  # 4
    STOPPING: ProjectInstance.State.ValueType  # 5
    STOPPED: ProjectInstance.State.ValueType  # 6
    DELETED: ProjectInstance.State.ValueType  # 7
    DEAD: ProjectInstance.State.ValueType  # 8

    class _CellType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CellTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ProjectInstance._CellType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CELL_TYPE_UNSPECIFIED: ProjectInstance._CellType.ValueType  # 0
        CELL_SYNCHRONOUS: ProjectInstance._CellType.ValueType  # 1
        CELL_ASYNCHRONOUS: ProjectInstance._CellType.ValueType  # 2

    class CellType(_CellType, metaclass=_CellTypeEnumTypeWrapper): ...
    CELL_TYPE_UNSPECIFIED: ProjectInstance.CellType.ValueType  # 0
    CELL_SYNCHRONOUS: ProjectInstance.CellType.ValueType  # 1
    CELL_ASYNCHRONOUS: ProjectInstance.CellType.ValueType  # 2

    @typing.final
    class ResourceUsage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        CPU_FIELD_NUMBER: builtins.int
        GPU_FIELD_NUMBER: builtins.int
        RAM_TOTAL_FIELD_NUMBER: builtins.int
        RAM_USAGE_FIELD_NUMBER: builtins.int
        GPU_MEM_USAGE_FIELD_NUMBER: builtins.int
        cpu: builtins.float
        gpu: builtins.float
        ram_total: builtins.int
        ram_usage: builtins.float
        gpu_mem_usage: builtins.float
        def __init__(
            self,
            *,
            cpu: builtins.float = ...,
            gpu: builtins.float = ...,
            ram_total: builtins.int = ...,
            ram_usage: builtins.float = ...,
            gpu_mem_usage: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["cpu", b"cpu", "gpu", b"gpu", "gpu_mem_usage", b"gpu_mem_usage", "ram_total", b"ram_total", "ram_usage", b"ram_usage"]) -> None: ...

    @typing.final
    class SparkCluster(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _SparkClusterType:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _SparkClusterTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ProjectInstance.SparkCluster._SparkClusterType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            SPARK_CLUSTER_TYPE_UNSPECIFIED: ProjectInstance.SparkCluster._SparkClusterType.ValueType  # 0
            PERMANENT: ProjectInstance.SparkCluster._SparkClusterType.ValueType  # 1
            TEMPORARY: ProjectInstance.SparkCluster._SparkClusterType.ValueType  # 2

        class SparkClusterType(_SparkClusterType, metaclass=_SparkClusterTypeEnumTypeWrapper): ...
        SPARK_CLUSTER_TYPE_UNSPECIFIED: ProjectInstance.SparkCluster.SparkClusterType.ValueType  # 0
        PERMANENT: ProjectInstance.SparkCluster.SparkClusterType.ValueType  # 1
        TEMPORARY: ProjectInstance.SparkCluster.SparkClusterType.ValueType  # 2

        NAME_FIELD_NUMBER: builtins.int
        VERSION_FIELD_NUMBER: builtins.int
        STATUS_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        name: builtins.str
        version: builtins.str
        status: builtins.str
        type: global___ProjectInstance.SparkCluster.SparkClusterType.ValueType
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            version: builtins.str = ...,
            status: builtins.str = ...,
            type: global___ProjectInstance.SparkCluster.SparkClusterType.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["name", b"name", "status", b"status", "type", b"type", "version", b"version"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    INSTANCE_SPEC_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    RESOURCE_USAGE_FIELD_NUMBER: builtins.int
    CELL_TYPE_FIELD_NUMBER: builtins.int
    SPARK_CLUSTER_FIELD_NUMBER: builtins.int
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    SPARK_CONNECTOR_FIELD_NUMBER: builtins.int
    RUNNING_CELL_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    state: global___ProjectInstance.State.ValueType
    path: builtins.str
    cell_type: global___ProjectInstance.CellType.ValueType
    environment: builtins.str
    running_cell_id: builtins.str
    @property
    def instance_spec(self) -> global___InstanceSpec: ...
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def resource_usage(self) -> global___ProjectInstance.ResourceUsage: ...
    @property
    def spark_cluster(self) -> global___ProjectInstance.SparkCluster: ...
    @property
    def spark_connector(self) -> yandex.cloud.priv.datasphere.v2.spark_connector_pb2.SparkConnector: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        instance_spec: global___InstanceSpec | None = ...,
        state: global___ProjectInstance.State.ValueType = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        path: builtins.str = ...,
        resource_usage: global___ProjectInstance.ResourceUsage | None = ...,
        cell_type: global___ProjectInstance.CellType.ValueType = ...,
        spark_cluster: global___ProjectInstance.SparkCluster | None = ...,
        environment: builtins.str = ...,
        spark_connector: yandex.cloud.priv.datasphere.v2.spark_connector_pb2.SparkConnector | None = ...,
        running_cell_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "instance_spec", b"instance_spec", "resource_usage", b"resource_usage", "spark_cluster", b"spark_cluster", "spark_connector", b"spark_connector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cell_type", b"cell_type", "created_at", b"created_at", "environment", b"environment", "id", b"id", "instance_spec", b"instance_spec", "path", b"path", "resource_usage", b"resource_usage", "running_cell_id", b"running_cell_id", "spark_cluster", b"spark_cluster", "spark_connector", b"spark_connector", "state", b"state"]) -> None: ...

global___ProjectInstance = ProjectInstance
