"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

try:
    import yandex.cloud.priv.ai.platform.v1.mount_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.ai.platform.v1.mount_pb2


try:
    import yandex.cloud.priv.ai.platform.v1.workload_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.ai.platform.v1.workload_pb2


if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PoolStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PoolStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PoolStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    POOL_STATUS_UNSPECIFIED: _PoolStatus.ValueType  # 0
    POOL_STATUS_RUNNING: _PoolStatus.ValueType  # 1
    POOL_STATUS_FROZEN: _PoolStatus.ValueType  # 2

class PoolStatus(_PoolStatus, metaclass=_PoolStatusEnumTypeWrapper): ...

POOL_STATUS_UNSPECIFIED: PoolStatus.ValueType  # 0
POOL_STATUS_RUNNING: PoolStatus.ValueType  # 1
POOL_STATUS_FROZEN: PoolStatus.ValueType  # 2
global___PoolStatus = PoolStatus

@typing.final
class CreatePoolRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    AVAILABILITY_SPECS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    IMAGE_CACHE_FIELD_NUMBER: builtins.int
    PRE_STARTED_WORKLOAD_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    name: builtins.str
    folder_id: builtins.str
    service_account_id: builtins.str
    @property
    def spec(self) -> global___VmSpec: ...
    @property
    def availability_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailabilitySpec]: ...
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """compute metadata"""

    @property
    def image_cache(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def pre_started_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        folder_id: builtins.str = ...,
        spec: global___VmSpec | None = ...,
        availability_specs: collections.abc.Iterable[global___AvailabilitySpec] | None = ...,
        metadata: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        image_cache: collections.abc.Iterable[builtins.str] | None = ...,
        pre_started_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        service_account_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pre_started_workload", b"pre_started_workload", "spec", b"spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["availability_specs", b"availability_specs", "folder_id", b"folder_id", "image_cache", b"image_cache", "metadata", b"metadata", "name", b"name", "pre_started_workload", b"pre_started_workload", "service_account_id", b"service_account_id", "spec", b"spec"]) -> None: ...

global___CreatePoolRequest = CreatePoolRequest

@typing.final
class CreatePoolMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOL_ID_FIELD_NUMBER: builtins.int
    pool_id: builtins.str
    def __init__(
        self,
        *,
        pool_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pool_id", b"pool_id"]) -> None: ...

global___CreatePoolMetadata = CreatePoolMetadata

@typing.final
class ListPoolsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILTER_FIELD_NUMBER: builtins.int
    WITH_VMS_FIELD_NUMBER: builtins.int
    SPECS_NAME_FIELD_NUMBER: builtins.int
    filter: builtins.str
    with_vms: builtins.bool
    @property
    def specs_name(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        filter: builtins.str = ...,
        with_vms: builtins.bool = ...,
        specs_name: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "specs_name", b"specs_name", "with_vms", b"with_vms"]) -> None: ...

global___ListPoolsRequest = ListPoolsRequest

@typing.final
class ListPoolsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOLS_FIELD_NUMBER: builtins.int
    @property
    def pools(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Pool]: ...
    def __init__(
        self,
        *,
        pools: collections.abc.Iterable[global___Pool] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pools", b"pools"]) -> None: ...

global___ListPoolsResponse = ListPoolsResponse

@typing.final
class DeletePoolRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOL_ID_FIELD_NUMBER: builtins.int
    pool_id: builtins.str
    def __init__(
        self,
        *,
        pool_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pool_id", b"pool_id"]) -> None: ...

global___DeletePoolRequest = DeletePoolRequest

@typing.final
class DeletePoolMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOL_ID_FIELD_NUMBER: builtins.int
    pool_id: builtins.str
    def __init__(
        self,
        *,
        pool_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pool_id", b"pool_id"]) -> None: ...

global___DeletePoolMetadata = DeletePoolMetadata

@typing.final
class DeleteOutdatedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOL_ID_FIELD_NUMBER: builtins.int
    pool_id: builtins.str
    def __init__(
        self,
        *,
        pool_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pool_id", b"pool_id"]) -> None: ...

global___DeleteOutdatedRequest = DeleteOutdatedRequest

@typing.final
class UpdatePoolRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    POOL_ID_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    AVAILABILITY_SPECS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    IMAGE_CACHE_FIELD_NUMBER: builtins.int
    PRE_STARTED_WORKLOAD_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    pool_id: builtins.str
    status: global___PoolStatus.ValueType
    service_account_id: builtins.str
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask: ...
    @property
    def spec(self) -> global___VmSpec: ...
    @property
    def availability_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailabilitySpec]: ...
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def image_cache(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def pre_started_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    def __init__(
        self,
        *,
        pool_id: builtins.str = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
        spec: global___VmSpec | None = ...,
        availability_specs: collections.abc.Iterable[global___AvailabilitySpec] | None = ...,
        metadata: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        status: global___PoolStatus.ValueType = ...,
        image_cache: collections.abc.Iterable[builtins.str] | None = ...,
        pre_started_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        service_account_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pre_started_workload", b"pre_started_workload", "spec", b"spec", "update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["availability_specs", b"availability_specs", "image_cache", b"image_cache", "metadata", b"metadata", "pool_id", b"pool_id", "pre_started_workload", b"pre_started_workload", "service_account_id", b"service_account_id", "spec", b"spec", "status", b"status", "update_mask", b"update_mask"]) -> None: ...

global___UpdatePoolRequest = UpdatePoolRequest

@typing.final
class UpdatePoolMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___UpdatePoolMetadata = UpdatePoolMetadata

@typing.final
class AllocateVmRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    SESSION_ID_FIELD_NUMBER: builtins.int
    POOL_ID_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    USER_SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    WORKLOAD_FIELD_NUMBER: builtins.int
    MOUNTS_FIELD_NUMBER: builtins.int
    session_id: builtins.str
    pool_id: builtins.str
    subnet_id: builtins.str
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def user_security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    @property
    def mounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest]: ...
    def __init__(
        self,
        *,
        session_id: builtins.str = ...,
        pool_id: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        subnet_id: builtins.str = ...,
        security_group_ids: collections.abc.Iterable[builtins.str] | None = ...,
        user_security_group_ids: collections.abc.Iterable[builtins.str] | None = ...,
        workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        mounts: collections.abc.Iterable[yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["workload", b"workload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["labels", b"labels", "mounts", b"mounts", "pool_id", b"pool_id", "security_group_ids", b"security_group_ids", "session_id", b"session_id", "subnet_id", b"subnet_id", "user_security_group_ids", b"user_security_group_ids", "workload", b"workload"]) -> None: ...

global___AllocateVmRequest = AllocateVmRequest

@typing.final
class AllocateVmMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VM_ID_FIELD_NUMBER: builtins.int
    vm_id: builtins.str
    def __init__(
        self,
        *,
        vm_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["vm_id", b"vm_id"]) -> None: ...

global___AllocateVmMetadata = AllocateVmMetadata

@typing.final
class FreeVmRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VM_ID_FIELD_NUMBER: builtins.int
    vm_id: builtins.str
    def __init__(
        self,
        *,
        vm_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["vm_id", b"vm_id"]) -> None: ...

global___FreeVmRequest = FreeVmRequest

@typing.final
class FreeVmMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VM_ID_FIELD_NUMBER: builtins.int
    vm_id: builtins.str
    def __init__(
        self,
        *,
        vm_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["vm_id", b"vm_id"]) -> None: ...

global___FreeVmMetadata = FreeVmMetadata

@typing.final
class UpdateMountsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VM_ID_FIELD_NUMBER: builtins.int
    MOUNTS_FIELD_NUMBER: builtins.int
    UNMOUNTS_FIELD_NUMBER: builtins.int
    vm_id: builtins.str
    @property
    def mounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest]: ...
    @property
    def unmounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.ai.platform.v1.mount_pb2.UnmountRequest]: ...
    def __init__(
        self,
        *,
        vm_id: builtins.str = ...,
        mounts: collections.abc.Iterable[yandex.cloud.priv.ai.platform.v1.mount_pb2.MountRequest] | None = ...,
        unmounts: collections.abc.Iterable[yandex.cloud.priv.ai.platform.v1.mount_pb2.UnmountRequest] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["mounts", b"mounts", "unmounts", b"unmounts", "vm_id", b"vm_id"]) -> None: ...

global___UpdateMountsRequest = UpdateMountsRequest

@typing.final
class UpdateMountsMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VM_ID_FIELD_NUMBER: builtins.int
    vm_id: builtins.str
    def __init__(
        self,
        *,
        vm_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["vm_id", b"vm_id"]) -> None: ...

global___UpdateMountsMetadata = UpdateMountsMetadata

@typing.final
class VmSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CPU_COUNT_FIELD_NUMBER: builtins.int
    GPU_COUNT_FIELD_NUMBER: builtins.int
    GPU_TYPE_FIELD_NUMBER: builtins.int
    RAM_GB_FIELD_NUMBER: builtins.int
    IMAGE_ID_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_SPECS_FIELD_NUMBER: builtins.int
    DNS_RECORDS_FIELD_NUMBER: builtins.int
    SYSTEM_METADATA_FIELD_NUMBER: builtins.int
    CREATE_ALB_FIELD_NUMBER: builtins.int
    name: builtins.str
    cpu_count: builtins.int
    gpu_count: builtins.int
    gpu_type: builtins.str
    ram_gb: builtins.int
    image_id: builtins.str
    system_metadata: builtins.bool
    create_alb: builtins.bool
    @property
    def network_interface_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VmNetworkInterfaceSpec]: ...
    @property
    def dns_records(self) -> global___DnsRecords: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        cpu_count: builtins.int = ...,
        gpu_count: builtins.int = ...,
        gpu_type: builtins.str = ...,
        ram_gb: builtins.int = ...,
        image_id: builtins.str = ...,
        network_interface_specs: collections.abc.Iterable[global___VmNetworkInterfaceSpec] | None = ...,
        dns_records: global___DnsRecords | None = ...,
        system_metadata: builtins.bool = ...,
        create_alb: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["dns_records", b"dns_records"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cpu_count", b"cpu_count", "create_alb", b"create_alb", "dns_records", b"dns_records", "gpu_count", b"gpu_count", "gpu_type", b"gpu_type", "image_id", b"image_id", "name", b"name", "network_interface_specs", b"network_interface_specs", "ram_gb", b"ram_gb", "system_metadata", b"system_metadata"]) -> None: ...

global___VmSpec = VmSpec

@typing.final
class VmNetworkInterfaceSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ETH_INDEX_FIELD_NUMBER: builtins.int
    PRIMARY_V4_ADDRESS_FIELD_NUMBER: builtins.int
    PRIMARY_V6_ADDRESS_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    eth_index: builtins.int
    primary_v4_address: builtins.bool
    primary_v6_address: builtins.bool
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        eth_index: builtins.int = ...,
        primary_v4_address: builtins.bool = ...,
        primary_v6_address: builtins.bool = ...,
        security_group_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["eth_index", b"eth_index", "primary_v4_address", b"primary_v4_address", "primary_v6_address", b"primary_v6_address", "security_group_ids", b"security_group_ids"]) -> None: ...

global___VmNetworkInterfaceSpec = VmNetworkInterfaceSpec

@typing.final
class VmNetworkInterface(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IPV4_FIELD_NUMBER: builtins.int
    IPV6_FIELD_NUMBER: builtins.int
    SUBNET_ID_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_IDS_FIELD_NUMBER: builtins.int
    ipv4: builtins.str
    ipv6: builtins.str
    subnet_id: builtins.str
    @property
    def security_group_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        ipv4: builtins.str = ...,
        ipv6: builtins.str = ...,
        subnet_id: builtins.str = ...,
        security_group_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ipv4", b"ipv4", "ipv6", b"ipv6", "security_group_ids", b"security_group_ids", "subnet_id", b"subnet_id"]) -> None: ...

global___VmNetworkInterface = VmNetworkInterface

@typing.final
class DnsRecords(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DnsRecordsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    SYSTEM_RECORD_FIELD_NUMBER: builtins.int
    DNS_RECORDS_FIELD_NUMBER: builtins.int
    system_record: builtins.bool
    @property
    def dns_records(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """instance name or any key to address"""

    def __init__(
        self,
        *,
        system_record: builtins.bool = ...,
        dns_records: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dns_records", b"dns_records", "system_record", b"system_record"]) -> None: ...

global___DnsRecords = DnsRecords

@typing.final
class PooledVm(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Status:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PooledVm._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNSPECIFIED: PooledVm._Status.ValueType  # 0
        IN_POOL: PooledVm._Status.ValueType  # 1
        ALLOCATING: PooledVm._Status.ValueType  # 2
        HAS_USER: PooledVm._Status.ValueType  # 3
        SCHEDULED_REMOVE: PooledVm._Status.ValueType  # 4
        PROVISIONING: PooledVm._Status.ValueType  # 5
        PULLING_CACHE: PooledVm._Status.ValueType  # 6
        DELETING: PooledVm._Status.ValueType  # 7

    class Status(_Status, metaclass=_StatusEnumTypeWrapper): ...
    STATUS_UNSPECIFIED: PooledVm.Status.ValueType  # 0
    IN_POOL: PooledVm.Status.ValueType  # 1
    ALLOCATING: PooledVm.Status.ValueType  # 2
    HAS_USER: PooledVm.Status.ValueType  # 3
    SCHEDULED_REMOVE: PooledVm.Status.ValueType  # 4
    PROVISIONING: PooledVm.Status.ValueType  # 5
    PULLING_CACHE: PooledVm.Status.ValueType  # 6
    DELETING: PooledVm.Status.ValueType  # 7

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VM_ID_FIELD_NUMBER: builtins.int
    POOL_ID_FIELD_NUMBER: builtins.int
    ZONE_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    ALLOCATED_AT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    SYSTEM_NETWORK_INTERFACE_FIELD_NUMBER: builtins.int
    USER_NETWORK_INTERFACE_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ATTACHED_STORAGES_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    vm_id: builtins.str
    pool_id: builtins.str
    zone_id: builtins.str
    status: global___PooledVm.Status.ValueType
    session_id: builtins.str
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def allocated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def spec(self) -> global___VmSpec: ...
    @property
    def system_network_interface(self) -> global___VmNetworkInterface: ...
    @property
    def user_network_interface(self) -> global___VmNetworkInterface: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def attached_storages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        vm_id: builtins.str = ...,
        pool_id: builtins.str = ...,
        zone_id: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        allocated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        status: global___PooledVm.Status.ValueType = ...,
        spec: global___VmSpec | None = ...,
        system_network_interface: global___VmNetworkInterface | None = ...,
        user_network_interface: global___VmNetworkInterface | None = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        attached_storages: collections.abc.Iterable[builtins.str] | None = ...,
        session_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["allocated_at", b"allocated_at", "created_at", b"created_at", "spec", b"spec", "system_network_interface", b"system_network_interface", "user_network_interface", b"user_network_interface"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["allocated_at", b"allocated_at", "attached_storages", b"attached_storages", "created_at", b"created_at", "labels", b"labels", "pool_id", b"pool_id", "session_id", b"session_id", "spec", b"spec", "status", b"status", "system_network_interface", b"system_network_interface", "user_network_interface", b"user_network_interface", "vm_id", b"vm_id", "zone_id", b"zone_id"]) -> None: ...

global___PooledVm = PooledVm

@typing.final
class AvailabilitySpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MIN_COUNT_FIELD_NUMBER: builtins.int
    MAX_COUNT_FIELD_NUMBER: builtins.int
    DEFAULT_SUBNET_ID_FIELD_NUMBER: builtins.int
    USER_SUBNET_ID_FIELD_NUMBER: builtins.int
    SYSTEM_SUBNET_ID_FIELD_NUMBER: builtins.int
    min_count: builtins.int
    max_count: builtins.int
    default_subnet_id: builtins.str
    user_subnet_id: builtins.str
    system_subnet_id: builtins.str
    def __init__(
        self,
        *,
        min_count: builtins.int = ...,
        max_count: builtins.int = ...,
        default_subnet_id: builtins.str = ...,
        user_subnet_id: builtins.str = ...,
        system_subnet_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["custom_subnet_id", b"custom_subnet_id", "system_subnet_id", b"system_subnet_id", "user_subnet_id", b"user_subnet_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["custom_subnet_id", b"custom_subnet_id", "default_subnet_id", b"default_subnet_id", "max_count", b"max_count", "min_count", b"min_count", "system_subnet_id", b"system_subnet_id", "user_subnet_id", b"user_subnet_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["custom_subnet_id", b"custom_subnet_id"]) -> typing.Literal["user_subnet_id", "system_subnet_id"] | None: ...

global___AvailabilitySpec = AvailabilitySpec

@typing.final
class Pool(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    POOL_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    FOLDER_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    AVAILABILITY_SPECS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    IMAGE_CACHE_FIELD_NUMBER: builtins.int
    PRE_STARTED_WORKLOAD_FIELD_NUMBER: builtins.int
    VMS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    pool_id: builtins.str
    name: builtins.str
    folder_id: builtins.str
    status: global___PoolStatus.ValueType
    service_account_id: builtins.str
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def spec(self) -> global___VmSpec: ...
    @property
    def availability_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailabilitySpec]: ...
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def image_cache(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def pre_started_workload(self) -> yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload: ...
    @property
    def vms(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PooledVm]: ...
    def __init__(
        self,
        *,
        pool_id: builtins.str = ...,
        name: builtins.str = ...,
        folder_id: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        spec: global___VmSpec | None = ...,
        availability_specs: collections.abc.Iterable[global___AvailabilitySpec] | None = ...,
        metadata: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        status: global___PoolStatus.ValueType = ...,
        image_cache: collections.abc.Iterable[builtins.str] | None = ...,
        pre_started_workload: yandex.cloud.priv.ai.platform.v1.workload_pb2.Workload | None = ...,
        vms: collections.abc.Iterable[global___PooledVm] | None = ...,
        service_account_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "pre_started_workload", b"pre_started_workload", "spec", b"spec", "updated_at", b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["availability_specs", b"availability_specs", "created_at", b"created_at", "folder_id", b"folder_id", "image_cache", b"image_cache", "metadata", b"metadata", "name", b"name", "pool_id", b"pool_id", "pre_started_workload", b"pre_started_workload", "service_account_id", b"service_account_id", "spec", b"spec", "status", b"status", "updated_at", b"updated_at", "vms", b"vms"]) -> None: ...

global___Pool = Pool
