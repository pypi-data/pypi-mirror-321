"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.datasphere.v2.s3_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.s3_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class S3ServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.CreateS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.CreateS3Response,
    ]

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3Response,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.UpdateS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.UpdateS3Response,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeleteS3Request,
        google.protobuf.empty_pb2.Empty,
    ]

    ListProjectS3s: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3sRequest,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3sResponse,
    ]
    """TODO: 31.08.2022  for compatibility with room from release-22-08-22"""

    ListProject: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3Response,
    ]

    ListSpace: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListSpaceS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListSpaceS3Response,
    ]

    Activate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ActivateS3Request,
        google.protobuf.empty_pb2.Empty,
    ]

    ActivateOperation: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ActivateS3Request,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Deactivate: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeactivateS3Request,
        google.protobuf.empty_pb2.Empty,
    ]

    DeactivateOperation: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeactivateS3Request,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetActivationStatus: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3ActivationStatusRequest,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3ActivationStatusResponse,
    ]

    ListMountedInProject: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListMountedInProjectRequest,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListMountedInProjectResponse,
    ]

    SetErrorMessage: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.SetErrorMessageRequest,
        google.protobuf.empty_pb2.Empty,
    ]

class S3ServiceAsyncStub:
    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.CreateS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.CreateS3Response,
    ]

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3Response,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.UpdateS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.UpdateS3Response,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeleteS3Request,
        google.protobuf.empty_pb2.Empty,
    ]

    ListProjectS3s: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3sRequest,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3sResponse,
    ]
    """TODO: 31.08.2022  for compatibility with room from release-22-08-22"""

    ListProject: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3Response,
    ]

    ListSpace: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListSpaceS3Request,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListSpaceS3Response,
    ]

    Activate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ActivateS3Request,
        google.protobuf.empty_pb2.Empty,
    ]

    ActivateOperation: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ActivateS3Request,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Deactivate: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeactivateS3Request,
        google.protobuf.empty_pb2.Empty,
    ]

    DeactivateOperation: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeactivateS3Request,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetActivationStatus: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3ActivationStatusRequest,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3ActivationStatusResponse,
    ]

    ListMountedInProject: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListMountedInProjectRequest,
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListMountedInProjectResponse,
    ]

    SetErrorMessage: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.s3_service_pb2.SetErrorMessageRequest,
        google.protobuf.empty_pb2.Empty,
    ]

class S3ServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.CreateS3Request,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.s3_service_pb2.CreateS3Response, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.s3_service_pb2.CreateS3Response]]: ...

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3Request,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3Response, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3Response]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.UpdateS3Request,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.s3_service_pb2.UpdateS3Response, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.s3_service_pb2.UpdateS3Response]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeleteS3Request,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def ListProjectS3s(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3sRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3sResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3sResponse]]:
        """TODO: 31.08.2022  for compatibility with room from release-22-08-22"""

    @abc.abstractmethod
    def ListProject(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3Request,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3Response, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListProjectS3Response]]: ...

    @abc.abstractmethod
    def ListSpace(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListSpaceS3Request,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListSpaceS3Response, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListSpaceS3Response]]: ...

    @abc.abstractmethod
    def Activate(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.ActivateS3Request,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def ActivateOperation(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.ActivateS3Request,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Deactivate(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeactivateS3Request,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def DeactivateOperation(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.DeactivateS3Request,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetActivationStatus(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3ActivationStatusRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3ActivationStatusResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.s3_service_pb2.GetS3ActivationStatusResponse]]: ...

    @abc.abstractmethod
    def ListMountedInProject(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListMountedInProjectRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListMountedInProjectResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.s3_service_pb2.ListMountedInProjectResponse]]: ...

    @abc.abstractmethod
    def SetErrorMessage(
        self,
        request: yandex.cloud.priv.datasphere.v2.s3_service_pb2.SetErrorMessageRequest,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

def add_S3ServiceServicer_to_server(servicer: S3ServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
