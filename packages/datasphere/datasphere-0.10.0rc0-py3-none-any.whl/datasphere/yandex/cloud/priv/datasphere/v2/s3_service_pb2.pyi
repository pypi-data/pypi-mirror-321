"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing

try:
    import yandex.cloud.priv.datasphere.v2.s3_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.s3_pb2


DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class CreateS3Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    PROJECT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    BUCKET_FIELD_NUMBER: builtins.int
    MOUNT_PATH_FIELD_NUMBER: builtins.int
    ACCESS_KEY_ID_FIELD_NUMBER: builtins.int
    SECRET_ACCESS_KEY_SECRET_ID_FIELD_NUMBER: builtins.int
    MOUNT_MODE_FIELD_NUMBER: builtins.int
    S3_BACKEND_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    name: builtins.str
    description: builtins.str
    endpoint: builtins.str
    bucket: builtins.str
    mount_path: builtins.str
    access_key_id: builtins.str
    secret_access_key_secret_id: builtins.str
    mount_mode: yandex.cloud.priv.datasphere.v2.s3_pb2.S3MountMode.ValueType
    s3_backend: yandex.cloud.priv.datasphere.v2.s3_pb2.S3Backend.ValueType
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        endpoint: builtins.str = ...,
        bucket: builtins.str = ...,
        mount_path: builtins.str = ...,
        access_key_id: builtins.str = ...,
        secret_access_key_secret_id: builtins.str = ...,
        mount_mode: yandex.cloud.priv.datasphere.v2.s3_pb2.S3MountMode.ValueType = ...,
        s3_backend: yandex.cloud.priv.datasphere.v2.s3_pb2.S3Backend.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["access_key_id", b"access_key_id", "bucket", b"bucket", "description", b"description", "endpoint", b"endpoint", "labels", b"labels", "mount_mode", b"mount_mode", "mount_path", b"mount_path", "name", b"name", "project_id", b"project_id", "s3_backend", b"s3_backend", "secret_access_key_secret_id", b"secret_access_key_secret_id"]) -> None: ...

global___CreateS3Request = CreateS3Request

@typing.final
class CreateS3Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_FIELD_NUMBER: builtins.int
    @property
    def s3(self) -> yandex.cloud.priv.datasphere.v2.s3_pb2.S3: ...
    def __init__(
        self,
        *,
        s3: yandex.cloud.priv.datasphere.v2.s3_pb2.S3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["s3", b"s3"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["s3", b"s3"]) -> None: ...

global___CreateS3Response = CreateS3Response

@typing.final
class UpdateS3Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    S3_ID_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    BUCKET_FIELD_NUMBER: builtins.int
    ACCESS_KEY_ID_FIELD_NUMBER: builtins.int
    SECRET_ACCESS_KEY_SECRET_ID_FIELD_NUMBER: builtins.int
    MOUNT_MODE_FIELD_NUMBER: builtins.int
    S3_BACKEND_FIELD_NUMBER: builtins.int
    MOUNT_PATH_FIELD_NUMBER: builtins.int
    s3_id: builtins.str
    name: builtins.str
    description: builtins.str
    endpoint: builtins.str
    bucket: builtins.str
    access_key_id: builtins.str
    secret_access_key_secret_id: builtins.str
    mount_mode: yandex.cloud.priv.datasphere.v2.s3_pb2.S3MountMode.ValueType
    s3_backend: yandex.cloud.priv.datasphere.v2.s3_pb2.S3Backend.ValueType
    mount_path: builtins.str
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        s3_id: builtins.str = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        labels: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        endpoint: builtins.str = ...,
        bucket: builtins.str = ...,
        access_key_id: builtins.str = ...,
        secret_access_key_secret_id: builtins.str = ...,
        mount_mode: yandex.cloud.priv.datasphere.v2.s3_pb2.S3MountMode.ValueType = ...,
        s3_backend: yandex.cloud.priv.datasphere.v2.s3_pb2.S3Backend.ValueType = ...,
        mount_path: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["access_key_id", b"access_key_id", "bucket", b"bucket", "description", b"description", "endpoint", b"endpoint", "labels", b"labels", "mount_mode", b"mount_mode", "mount_path", b"mount_path", "name", b"name", "s3_backend", b"s3_backend", "s3_id", b"s3_id", "secret_access_key_secret_id", b"secret_access_key_secret_id", "update_mask", b"update_mask"]) -> None: ...

global___UpdateS3Request = UpdateS3Request

@typing.final
class UpdateS3Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_FIELD_NUMBER: builtins.int
    @property
    def s3(self) -> yandex.cloud.priv.datasphere.v2.s3_pb2.S3: ...
    def __init__(
        self,
        *,
        s3: yandex.cloud.priv.datasphere.v2.s3_pb2.S3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["s3", b"s3"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["s3", b"s3"]) -> None: ...

global___UpdateS3Response = UpdateS3Response

@typing.final
class GetS3Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_ID_FIELD_NUMBER: builtins.int
    s3_id: builtins.str
    def __init__(
        self,
        *,
        s3_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["s3_id", b"s3_id"]) -> None: ...

global___GetS3Request = GetS3Request

@typing.final
class GetS3Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_FIELD_NUMBER: builtins.int
    @property
    def s3(self) -> yandex.cloud.priv.datasphere.v2.s3_pb2.S3: ...
    def __init__(
        self,
        *,
        s3: yandex.cloud.priv.datasphere.v2.s3_pb2.S3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["s3", b"s3"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["s3", b"s3"]) -> None: ...

global___GetS3Response = GetS3Response

@typing.final
class DeleteS3Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_ID_FIELD_NUMBER: builtins.int
    s3_id: builtins.str
    def __init__(
        self,
        *,
        s3_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["s3_id", b"s3_id"]) -> None: ...

global___DeleteS3Request = DeleteS3Request

@typing.final
class ListProjectS3sRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id"]) -> None: ...

global___ListProjectS3sRequest = ListProjectS3sRequest

@typing.final
class ListProjectS3sResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3S_FIELD_NUMBER: builtins.int
    @property
    def s3s(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.datasphere.v2.s3_pb2.S3]: ...
    def __init__(
        self,
        *,
        s3s: collections.abc.Iterable[yandex.cloud.priv.datasphere.v2.s3_pb2.S3] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["s3s", b"s3s"]) -> None: ...

global___ListProjectS3sResponse = ListProjectS3sResponse

@typing.final
class ListProjectS3Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id"]) -> None: ...

global___ListProjectS3Request = ListProjectS3Request

@typing.final
class ListProjectS3Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_FIELD_NUMBER: builtins.int
    @property
    def s3(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.datasphere.v2.s3_pb2.S3]: ...
    def __init__(
        self,
        *,
        s3: collections.abc.Iterable[yandex.cloud.priv.datasphere.v2.s3_pb2.S3] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["s3", b"s3"]) -> None: ...

global___ListProjectS3Response = ListProjectS3Response

@typing.final
class ListSpaceS3Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPACE_ID_FIELD_NUMBER: builtins.int
    space_id: builtins.str
    def __init__(
        self,
        *,
        space_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["space_id", b"space_id"]) -> None: ...

global___ListSpaceS3Request = ListSpaceS3Request

@typing.final
class ListSpaceS3Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_FIELD_NUMBER: builtins.int
    @property
    def s3(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.datasphere.v2.s3_pb2.S3]: ...
    def __init__(
        self,
        *,
        s3: collections.abc.Iterable[yandex.cloud.priv.datasphere.v2.s3_pb2.S3] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["s3", b"s3"]) -> None: ...

global___ListSpaceS3Response = ListSpaceS3Response

@typing.final
class ActivateS3Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    S3_MOUNT_MODE_FIELD_NUMBER: builtins.int
    s3_id: builtins.str
    project_id: builtins.str
    s3_mount_mode: yandex.cloud.priv.datasphere.v2.s3_pb2.S3MountMode.ValueType
    def __init__(
        self,
        *,
        s3_id: builtins.str = ...,
        project_id: builtins.str = ...,
        s3_mount_mode: yandex.cloud.priv.datasphere.v2.s3_pb2.S3MountMode.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id", "s3_id", b"s3_id", "s3_mount_mode", b"s3_mount_mode"]) -> None: ...

global___ActivateS3Request = ActivateS3Request

@typing.final
class DeactivateS3Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    s3_id: builtins.str
    project_id: builtins.str
    def __init__(
        self,
        *,
        s3_id: builtins.str = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id", "s3_id", b"s3_id"]) -> None: ...

global___DeactivateS3Request = DeactivateS3Request

@typing.final
class GetS3ActivationStatusRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    s3_id: builtins.str
    project_id: builtins.str
    def __init__(
        self,
        *,
        s3_id: builtins.str = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id", "s3_id", b"s3_id"]) -> None: ...

global___GetS3ActivationStatusRequest = GetS3ActivationStatusRequest

@typing.final
class GetS3ActivationStatusResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_STATUS_FIELD_NUMBER: builtins.int
    @property
    def s3_status(self) -> yandex.cloud.priv.datasphere.v2.s3_pb2.S3Status: ...
    def __init__(
        self,
        *,
        s3_status: yandex.cloud.priv.datasphere.v2.s3_pb2.S3Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["s3_status", b"s3_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["s3_status", b"s3_status"]) -> None: ...

global___GetS3ActivationStatusResponse = GetS3ActivationStatusResponse

@typing.final
class ListMountedInProjectRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id"]) -> None: ...

global___ListMountedInProjectRequest = ListMountedInProjectRequest

@typing.final
class ListMountedInProjectResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S3_FIELD_NUMBER: builtins.int
    @property
    def s3(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.datasphere.v2.s3_pb2.S3]: ...
    def __init__(
        self,
        *,
        s3: collections.abc.Iterable[yandex.cloud.priv.datasphere.v2.s3_pb2.S3] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["s3", b"s3"]) -> None: ...

global___ListMountedInProjectResponse = ListMountedInProjectResponse

@typing.final
class DeleteByNameRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    S3_NAME_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    s3_name: builtins.str
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        s3_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id", "s3_name", b"s3_name"]) -> None: ...

global___DeleteByNameRequest = DeleteByNameRequest

@typing.final
class SetErrorMessageRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    S3_ID_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    s3_id: builtins.str
    error_message: builtins.str
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        s3_id: builtins.str = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "project_id", b"project_id", "s3_id", b"s3_id"]) -> None: ...

global___SetErrorMessageRequest = SetErrorMessageRequest
