"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.datasphere.v2.foundation_model_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.foundation_model_pb2


try:
    import yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class FoundationModelServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetFoundationModelRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_pb2.FoundationModel,
    ]

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.CreateFoundationModelRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.CreateFoundationModelResponse,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.UpdateFoundationModelRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.UpdateFoundationModelResponse,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.DeleteFoundationModelRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetDatasetUploadUrl: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetDatasetUploadUrlRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetDatasetUploadUrlResponse,
    ]

    Train: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.TrainFoundationModelRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetTrainedModelBlob: grpc.UnaryStreamMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelBlobRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.TrainedModelBlob,
    ]

    GetTrainedModelLink: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelLinkRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelLinkResponse,
    ]

    GetModelTypes: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetModelTypesRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetModelTypesResponse,
    ]

class FoundationModelServiceAsyncStub:
    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetFoundationModelRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_pb2.FoundationModel,
    ]

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.CreateFoundationModelRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.CreateFoundationModelResponse,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.UpdateFoundationModelRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.UpdateFoundationModelResponse,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.DeleteFoundationModelRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetDatasetUploadUrl: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetDatasetUploadUrlRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetDatasetUploadUrlResponse,
    ]

    Train: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.TrainFoundationModelRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    GetTrainedModelBlob: grpc.aio.UnaryStreamMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelBlobRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.TrainedModelBlob,
    ]

    GetTrainedModelLink: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelLinkRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelLinkResponse,
    ]

    GetModelTypes: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetModelTypesRequest,
        yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetModelTypesResponse,
    ]

class FoundationModelServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetFoundationModelRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.foundation_model_pb2.FoundationModel, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.foundation_model_pb2.FoundationModel]]: ...

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.CreateFoundationModelRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.CreateFoundationModelResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.CreateFoundationModelResponse]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.UpdateFoundationModelRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.UpdateFoundationModelResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.UpdateFoundationModelResponse]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.DeleteFoundationModelRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetDatasetUploadUrl(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetDatasetUploadUrlRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetDatasetUploadUrlResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetDatasetUploadUrlResponse]]: ...

    @abc.abstractmethod
    def Train(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.TrainFoundationModelRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def GetTrainedModelBlob(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelBlobRequest,
        context: _ServicerContext,
    ) -> typing.Union[collections.abc.Iterator[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.TrainedModelBlob], collections.abc.AsyncIterator[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.TrainedModelBlob]]: ...

    @abc.abstractmethod
    def GetTrainedModelLink(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelLinkRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelLinkResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetTrainedModelLinkResponse]]: ...

    @abc.abstractmethod
    def GetModelTypes(
        self,
        request: yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetModelTypesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetModelTypesResponse, collections.abc.Awaitable[yandex.cloud.priv.datasphere.v2.foundation_model_service_pb2.GetModelTypesResponse]]: ...

def add_FoundationModelServiceServicer_to_server(servicer: FoundationModelServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
