"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

try:
    import yandex.cloud.priv.datasphere.v2.project_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.project_pb2


try:
    import yandex.cloud.priv.datasphere.v2.spark_connector_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.datasphere.v2.spark_connector_pb2


if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Quota(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMUNITY_ID_FIELD_NUMBER: builtins.int
    METRICS_FIELD_NUMBER: builtins.int
    community_id: builtins.str
    @property
    def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___QuotaMetric]: ...
    def __init__(
        self,
        *,
        community_id: builtins.str = ...,
        metrics: collections.abc.Iterable[global___QuotaMetric] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["community_id", b"community_id", "metrics", b"metrics"]) -> None: ...

global___Quota = Quota

@typing.final
class QuotaMetric(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    name: builtins.str
    value: builtins.int
    limit: builtins.int
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        value: builtins.int = ...,
        limit: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["limit", b"limit", "name", b"name", "value", b"value"]) -> None: ...

global___QuotaMetric = QuotaMetric

@typing.final
class MetricLimit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    name: builtins.str
    limit: builtins.int
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        limit: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["limit", b"limit", "name", b"name"]) -> None: ...

global___MetricLimit = MetricLimit

@typing.final
class AvailabilityByZone(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ZONE_ID_FIELD_NUMBER: builtins.int
    AVAILABILITY_FIELD_NUMBER: builtins.int
    zone_id: builtins.str
    availability: global___AvailableSpec.Availability.ValueType
    def __init__(
        self,
        *,
        zone_id: builtins.str = ...,
        availability: global___AvailableSpec.Availability.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["availability", b"availability", "zone_id", b"zone_id"]) -> None: ...

global___AvailabilityByZone = AvailabilityByZone

@typing.final
class AvailableSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _SpecType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _SpecTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AvailableSpec._SpecType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SPEC_TYPE_UNSPECIFIED: AvailableSpec._SpecType.ValueType  # 0
        FREE: AvailableSpec._SpecType.ValueType  # 1
        ADVANCED: AvailableSpec._SpecType.ValueType  # 2
        PRO: AvailableSpec._SpecType.ValueType  # 3

    class SpecType(_SpecType, metaclass=_SpecTypeEnumTypeWrapper): ...
    SPEC_TYPE_UNSPECIFIED: AvailableSpec.SpecType.ValueType  # 0
    FREE: AvailableSpec.SpecType.ValueType  # 1
    ADVANCED: AvailableSpec.SpecType.ValueType  # 2
    PRO: AvailableSpec.SpecType.ValueType  # 3

    class _Availability:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _AvailabilityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AvailableSpec._Availability.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        AVAILABILITY_UNSPECIFIED: AvailableSpec._Availability.ValueType  # 0
        READY: AvailableSpec._Availability.ValueType  # 1
        PREPARING: AvailableSpec._Availability.ValueType  # 2
        EMPTY: AvailableSpec._Availability.ValueType  # 3

    class Availability(_Availability, metaclass=_AvailabilityEnumTypeWrapper): ...
    AVAILABILITY_UNSPECIFIED: AvailableSpec.Availability.ValueType  # 0
    READY: AvailableSpec.Availability.ValueType  # 1
    PREPARING: AvailableSpec.Availability.ValueType  # 2
    EMPTY: AvailableSpec.Availability.ValueType  # 3

    SPEC_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    COST_FIELD_NUMBER: builtins.int
    COST_DEDICATED_FIELD_NUMBER: builtins.int
    CURRENCY_FIELD_NUMBER: builtins.int
    AVAILABILITY_FIELD_NUMBER: builtins.int
    AVAILABILITY_BY_ZONES_FIELD_NUMBER: builtins.int
    type: global___AvailableSpec.SpecType.ValueType
    active: builtins.bool
    cost: builtins.float
    cost_dedicated: builtins.float
    currency: builtins.str
    availability: global___AvailableSpec.Availability.ValueType
    @property
    def spec(self) -> yandex.cloud.priv.datasphere.v2.project_pb2.InstanceSpec: ...
    @property
    def availability_by_zones(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailabilityByZone]: ...
    def __init__(
        self,
        *,
        spec: yandex.cloud.priv.datasphere.v2.project_pb2.InstanceSpec | None = ...,
        type: global___AvailableSpec.SpecType.ValueType = ...,
        active: builtins.bool = ...,
        cost: builtins.float = ...,
        cost_dedicated: builtins.float = ...,
        currency: builtins.str = ...,
        availability: global___AvailableSpec.Availability.ValueType = ...,
        availability_by_zones: collections.abc.Iterable[global___AvailabilityByZone] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["spec", b"spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["active", b"active", "availability", b"availability", "availability_by_zones", b"availability_by_zones", "cost", b"cost", "cost_dedicated", b"cost_dedicated", "currency", b"currency", "spec", b"spec", "type", b"type"]) -> None: ...

global___AvailableSpec = AvailableSpec

@typing.final
class GetQuotaRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMUNITY_ID_FIELD_NUMBER: builtins.int
    community_id: builtins.str
    def __init__(
        self,
        *,
        community_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["community_id", b"community_id"]) -> None: ...

global___GetQuotaRequest = GetQuotaRequest

@typing.final
class UpdateQuotaMetricRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMUNITY_ID_FIELD_NUMBER: builtins.int
    METRIC_FIELD_NUMBER: builtins.int
    community_id: builtins.str
    @property
    def metric(self) -> global___MetricLimit: ...
    def __init__(
        self,
        *,
        community_id: builtins.str = ...,
        metric: global___MetricLimit | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metric", b"metric"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["community_id", b"community_id", "metric", b"metric"]) -> None: ...

global___UpdateQuotaMetricRequest = UpdateQuotaMetricRequest

@typing.final
class GetQuotaDefaultRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetQuotaDefaultRequest = GetQuotaDefaultRequest

@typing.final
class GetQuotaDefaultResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METRICS_FIELD_NUMBER: builtins.int
    @property
    def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MetricLimit]: ...
    def __init__(
        self,
        *,
        metrics: collections.abc.Iterable[global___MetricLimit] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["metrics", b"metrics"]) -> None: ...

global___GetQuotaDefaultResponse = GetQuotaDefaultResponse

@typing.final
class CostEstimation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECONDS_FIELD_NUMBER: builtins.int
    seconds: builtins.int
    def __init__(
        self,
        *,
        seconds: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["seconds", b"seconds"]) -> None: ...

global___CostEstimation = CostEstimation

@typing.final
class GetAvailableSpecsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMUNITY_ID_FIELD_NUMBER: builtins.int
    COST_ESTIMATION_FIELD_NUMBER: builtins.int
    USE_NEW_API_FIELD_NUMBER: builtins.int
    community_id: builtins.str
    use_new_api: builtins.bool
    @property
    def cost_estimation(self) -> global___CostEstimation: ...
    def __init__(
        self,
        *,
        community_id: builtins.str = ...,
        cost_estimation: global___CostEstimation | None = ...,
        use_new_api: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["cost_estimation", b"cost_estimation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["community_id", b"community_id", "cost_estimation", b"cost_estimation", "use_new_api", b"use_new_api"]) -> None: ...

global___GetAvailableSpecsRequest = GetAvailableSpecsRequest

@typing.final
class GetAvailableProjectSpecsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    COST_ESTIMATION_FIELD_NUMBER: builtins.int
    USE_NEW_API_FIELD_NUMBER: builtins.int
    ZONE_IDS_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    use_new_api: builtins.bool
    @property
    def cost_estimation(self) -> global___CostEstimation: ...
    @property
    def zone_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        cost_estimation: global___CostEstimation | None = ...,
        use_new_api: builtins.bool = ...,
        zone_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["cost_estimation", b"cost_estimation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cost_estimation", b"cost_estimation", "project_id", b"project_id", "use_new_api", b"use_new_api", "zone_ids", b"zone_ids"]) -> None: ...

global___GetAvailableProjectSpecsRequest = GetAvailableProjectSpecsRequest

@typing.final
class GetAvailableSpecsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPECS_FIELD_NUMBER: builtins.int
    AVAILABLE_SPECS_FIELD_NUMBER: builtins.int
    @property
    def specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.datasphere.v2.project_pb2.InstanceSpec]: ...
    @property
    def available_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailableSpec]: ...
    def __init__(
        self,
        *,
        specs: collections.abc.Iterable[yandex.cloud.priv.datasphere.v2.project_pb2.InstanceSpec] | None = ...,
        available_specs: collections.abc.Iterable[global___AvailableSpec] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["available_specs", b"available_specs", "specs", b"specs"]) -> None: ...

global___GetAvailableSpecsResponse = GetAvailableSpecsResponse

@typing.final
class ListAvailableProjectSpecsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPECS_FIELD_NUMBER: builtins.int
    AVAILABLE_SPECS_FIELD_NUMBER: builtins.int
    AVAILABLE_SPECS_FOR_SPARK_FIELD_NUMBER: builtins.int
    SPARK_CONNECTORS_FIELD_NUMBER: builtins.int
    @property
    def specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.datasphere.v2.project_pb2.InstanceSpec]: ...
    @property
    def available_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailableSpec]: ...
    @property
    def available_specs_for_spark(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailableSpec]: ...
    @property
    def spark_connectors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[yandex.cloud.priv.datasphere.v2.spark_connector_pb2.SparkConnector]: ...
    def __init__(
        self,
        *,
        specs: collections.abc.Iterable[yandex.cloud.priv.datasphere.v2.project_pb2.InstanceSpec] | None = ...,
        available_specs: collections.abc.Iterable[global___AvailableSpec] | None = ...,
        available_specs_for_spark: collections.abc.Iterable[global___AvailableSpec] | None = ...,
        spark_connectors: collections.abc.Iterable[yandex.cloud.priv.datasphere.v2.spark_connector_pb2.SparkConnector] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["available_specs", b"available_specs", "available_specs_for_spark", b"available_specs_for_spark", "spark_connectors", b"spark_connectors", "specs", b"specs"]) -> None: ...

global___ListAvailableProjectSpecsResponse = ListAvailableProjectSpecsResponse

@typing.final
class SetSpecAvailabilityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMUNITY_ID_FIELD_NUMBER: builtins.int
    SPEC_NAME_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    community_id: builtins.str
    spec_name: builtins.str
    active: builtins.bool
    def __init__(
        self,
        *,
        community_id: builtins.str = ...,
        spec_name: builtins.str = ...,
        active: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["active", b"active", "community_id", b"community_id", "spec_name", b"spec_name"]) -> None: ...

global___SetSpecAvailabilityRequest = SetSpecAvailabilityRequest

@typing.final
class SetSpecAvailabilityResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIVE_FIELD_NUMBER: builtins.int
    active: builtins.bool
    def __init__(
        self,
        *,
        active: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["active", b"active"]) -> None: ...

global___SetSpecAvailabilityResponse = SetSpecAvailabilityResponse
