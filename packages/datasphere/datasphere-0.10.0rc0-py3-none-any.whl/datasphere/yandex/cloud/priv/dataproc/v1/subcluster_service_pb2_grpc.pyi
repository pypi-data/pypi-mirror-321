"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing

try:
    import yandex.cloud.priv.dataproc.v1.subcluster_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.dataproc.v1.subcluster_pb2


try:
    import yandex.cloud.priv.dataproc.v1.subcluster_service_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.dataproc.v1.subcluster_service_pb2


try:
    import yandex.cloud.priv.operation.operation_pb2
except ImportError:
    import datasphere.yandex.cloud.priv.operation.operation_pb2


_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class SubclusterServiceStub:
    """A set of methods for managing Hadoop clusters."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.GetSubclusterRequest,
        yandex.cloud.priv.dataproc.v1.subcluster_pb2.Subcluster,
    ]
    """Returns the specified Hadoop subcluster."""

    GetAtRevision: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.GetSubclusterAtRevisionRequest,
        yandex.cloud.priv.dataproc.v1.subcluster_pb2.Subcluster,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.ListSubclustersRequest,
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.ListSubclustersResponse,
    ]
    """Retrieves a list of Hadoop subcluster."""

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.CreateSubclusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Creates a Hadoop subcluster."""

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.UpdateSubclusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Updates configuration of the specified Hadoop subcluster."""

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.DeleteSubclusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Deletes the specified Hadoop subcluster."""

class SubclusterServiceAsyncStub:
    """A set of methods for managing Hadoop clusters."""

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.GetSubclusterRequest,
        yandex.cloud.priv.dataproc.v1.subcluster_pb2.Subcluster,
    ]
    """Returns the specified Hadoop subcluster."""

    GetAtRevision: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.GetSubclusterAtRevisionRequest,
        yandex.cloud.priv.dataproc.v1.subcluster_pb2.Subcluster,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.ListSubclustersRequest,
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.ListSubclustersResponse,
    ]
    """Retrieves a list of Hadoop subcluster."""

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.CreateSubclusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Creates a Hadoop subcluster."""

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.UpdateSubclusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Updates configuration of the specified Hadoop subcluster."""

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.DeleteSubclusterRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]
    """Deletes the specified Hadoop subcluster."""

class SubclusterServiceServicer(metaclass=abc.ABCMeta):
    """A set of methods for managing Hadoop clusters."""

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.GetSubclusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.subcluster_pb2.Subcluster, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.subcluster_pb2.Subcluster]]:
        """Returns the specified Hadoop subcluster."""

    @abc.abstractmethod
    def GetAtRevision(
        self,
        request: yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.GetSubclusterAtRevisionRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.subcluster_pb2.Subcluster, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.subcluster_pb2.Subcluster]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.ListSubclustersRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.ListSubclustersResponse, collections.abc.Awaitable[yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.ListSubclustersResponse]]:
        """Retrieves a list of Hadoop subcluster."""

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.CreateSubclusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Creates a Hadoop subcluster."""

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.UpdateSubclusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Updates configuration of the specified Hadoop subcluster."""

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.dataproc.v1.subcluster_service_pb2.DeleteSubclusterRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]:
        """Deletes the specified Hadoop subcluster."""

def add_SubclusterServiceServicer_to_server(servicer: SubclusterServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
