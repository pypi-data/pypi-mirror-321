"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _SubjectType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SubjectTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SubjectType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SUBJECT_TYPE_UNSPECIFIED: _SubjectType.ValueType  # 0
    USER_ACCOUNT: _SubjectType.ValueType  # 1
    SERVICE_ACCOUNT: _SubjectType.ValueType  # 2
    GROUP: _SubjectType.ValueType  # 3
    INVITEE: _SubjectType.ValueType  # 4

class SubjectType(_SubjectType, metaclass=_SubjectTypeEnumTypeWrapper): ...

SUBJECT_TYPE_UNSPECIFIED: SubjectType.ValueType  # 0
USER_ACCOUNT: SubjectType.ValueType  # 1
SERVICE_ACCOUNT: SubjectType.ValueType  # 2
GROUP: SubjectType.ValueType  # 3
INVITEE: SubjectType.ValueType  # 4
global___SubjectType = SubjectType

@typing.final
class SubjectClaims(google.protobuf.message.Message):
    """claims representation, see https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims for details"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUB_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    GIVEN_NAME_FIELD_NUMBER: builtins.int
    FAMILY_NAME_FIELD_NUMBER: builtins.int
    PREFERRED_USERNAME_FIELD_NUMBER: builtins.int
    PICTURE_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    GENDER_FIELD_NUMBER: builtins.int
    ZONEINFO_FIELD_NUMBER: builtins.int
    LOCALE_FIELD_NUMBER: builtins.int
    PHONE_NUMBER_FIELD_NUMBER: builtins.int
    SUB_TYPE_FIELD_NUMBER: builtins.int
    FEDERATION_FIELD_NUMBER: builtins.int
    PICTURE_DATA_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FOLDER_ID_FIELD_NUMBER: builtins.int
    GROUPS_FIELD_NUMBER: builtins.int
    LAST_AUTHENTICATED_AT_FIELD_NUMBER: builtins.int
    YANDEX_CLAIMS_FIELD_NUMBER: builtins.int
    sub: builtins.str
    """Subject - Identifier for the End-User at the Issuer."""
    name: builtins.str
    """End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences."""
    given_name: builtins.str
    """Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters."""
    family_name: builtins.str
    """Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters."""
    preferred_username: builtins.str
    """Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe.
    This value MAY be any valid JSON string including special characters such as @, /, or whitespace. The RP MUST NOT rely upon this value being unique, as discussed in Section 5.7.
    """
    picture: builtins.str
    """URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file),
    rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User.
    """
    email: builtins.str
    """End-User's preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax.
    The RP MUST NOT rely upon this value being unique, as discussed in Section 5.7.
    """
    gender: builtins.str
    """End-User's gender. Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable."""
    zoneinfo: builtins.str
    """String from zoneinfo [zoneinfo] time zone database representing the End-User's time zone. For example, Europe/Paris or America/Los_Angeles."""
    locale: builtins.str
    """End-User's locale, represented as a BCP47 [RFC5646] language tag. This is typically an ISO 639-1 Alpha-2 [ISO639-1] language code in lowercase and an ISO 3166-1 Alpha-2 [ISO3166-1] country code in uppercase, separated by a dash.
    For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Relying Parties MAY choose to accept this locale syntax as well.
    """
    phone_number: builtins.str
    """End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400.
    If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.
    """
    sub_type: global___SubjectType.ValueType
    """Subject type."""
    picture_data: builtins.str
    """An image content of the user. Typically a space-efficient format like JPEG or GIF encoded in base64-string.
    The maximum size is limited to 100 Kib.
    """
    service_account_folder_id: builtins.str
    """Filled for service accounts only. Refers to a folder the service account is created in."""
    @property
    def federation(self) -> global___Federation:
        """non-empty only for federated users"""

    @property
    def groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Group]:
        """List of groups where subject is member"""

    @property
    def last_authenticated_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Last time the access token was created. Filled only for federated users (not for global users)."""

    @property
    def yandex_claims(self) -> global___YandexClaims: ...
    def __init__(
        self,
        *,
        sub: builtins.str = ...,
        name: builtins.str = ...,
        given_name: builtins.str = ...,
        family_name: builtins.str = ...,
        preferred_username: builtins.str = ...,
        picture: builtins.str = ...,
        email: builtins.str = ...,
        gender: builtins.str = ...,
        zoneinfo: builtins.str = ...,
        locale: builtins.str = ...,
        phone_number: builtins.str = ...,
        sub_type: global___SubjectType.ValueType = ...,
        federation: global___Federation | None = ...,
        picture_data: builtins.str = ...,
        service_account_folder_id: builtins.str = ...,
        groups: collections.abc.Iterable[global___Group] | None = ...,
        last_authenticated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        yandex_claims: global___YandexClaims | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["federation", b"federation", "last_authenticated_at", b"last_authenticated_at", "yandex_claims", b"yandex_claims"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["email", b"email", "family_name", b"family_name", "federation", b"federation", "gender", b"gender", "given_name", b"given_name", "groups", b"groups", "last_authenticated_at", b"last_authenticated_at", "locale", b"locale", "name", b"name", "phone_number", b"phone_number", "picture", b"picture", "picture_data", b"picture_data", "preferred_username", b"preferred_username", "service_account_folder_id", b"service_account_folder_id", "sub", b"sub", "sub_type", b"sub_type", "yandex_claims", b"yandex_claims", "zoneinfo", b"zoneinfo"]) -> None: ...

global___SubjectClaims = SubjectClaims

@typing.final
class Federation(google.protobuf.message.Message):
    """minimalistic analog of yandex.cloud.priv.iam.v1.saml.Federation"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _GlobalType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _GlobalTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Federation._GlobalType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        GLOBAL_TYPE_UNSPECIFIED: Federation._GlobalType.ValueType  # 0
        LOCAL: Federation._GlobalType.ValueType  # 1
        GLOBAL: Federation._GlobalType.ValueType  # 2
        INTERNAL_GLOBAL: Federation._GlobalType.ValueType  # 3

    class GlobalType(_GlobalType, metaclass=_GlobalTypeEnumTypeWrapper): ...
    GLOBAL_TYPE_UNSPECIFIED: Federation.GlobalType.ValueType  # 0
    LOCAL: Federation.GlobalType.ValueType  # 1
    GLOBAL: Federation.GlobalType.ValueType  # 2
    INTERNAL_GLOBAL: Federation.GlobalType.ValueType  # 3

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Federation._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_UNSPECIFIED: Federation._Type.ValueType  # 0
        SAML: Federation._Type.ValueType  # 1
        OAUTH: Federation._Type.ValueType  # 2
        PASSPORT: Federation._Type.ValueType  # 3
        USERPOOL: Federation._Type.ValueType  # 4

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    TYPE_UNSPECIFIED: Federation.Type.ValueType  # 0
    SAML: Federation.Type.ValueType  # 1
    OAUTH: Federation.Type.ValueType  # 2
    PASSPORT: Federation.Type.ValueType  # 3
    USERPOOL: Federation.Type.ValueType  # 4

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    IS_GLOBAL_FIELD_NUMBER: builtins.int
    GLOBAL_TYPE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    ORGANIZATION_FIELD_NUMBER: builtins.int
    id: builtins.str
    """ID of the federation."""
    name: builtins.str
    """Name of the federation. The name is unique within the cloud or organization"""
    is_global: builtins.bool
    """Whether the federation is global or not."""
    global_type: global___Federation.GlobalType.ValueType
    type: global___Federation.Type.ValueType
    @property
    def organization(self) -> global___Organization:
        """An organization owning the federation.
        It's empty if the federation is global.
        """

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        is_global: builtins.bool = ...,
        global_type: global___Federation.GlobalType.ValueType = ...,
        type: global___Federation.Type.ValueType = ...,
        organization: global___Organization | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["organization", b"organization"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["global_type", b"global_type", "id", b"id", "is_global", b"is_global", "name", b"name", "organization", b"organization", "type", b"type"]) -> None: ...

global___Federation = Federation

@typing.final
class Organization(google.protobuf.message.Message):
    """an organization view to represent the login-related organization in the SubjectClaims"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    id: builtins.str
    """ID of the organization"""
    title: builtins.str
    """Display title of the organization"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        title: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id", "title", b"title"]) -> None: ...

global___Organization = Organization

@typing.final
class YandexClaims(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Domain(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DOMAIN_FIELD_NUMBER: builtins.int
        DOMID_FIELD_NUMBER: builtins.int
        HOSTED_FIELD_NUMBER: builtins.int
        domain: builtins.str
        domid: builtins.str
        hosted: builtins.bool
        def __init__(
            self,
            *,
            domain: builtins.str = ...,
            domid: builtins.str = ...,
            hosted: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["domain", b"domain", "domid", b"domid", "hosted", b"hosted"]) -> None: ...

    STAFF_LOGIN_FIELD_NUMBER: builtins.int
    PASSPORT_UID_FIELD_NUMBER: builtins.int
    LOGIN_FIELD_NUMBER: builtins.int
    AVATAR_ID_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    TWO_FACTOR_AUTHENTICATION_ENABLED_FIELD_NUMBER: builtins.int
    KARMA_FIELD_NUMBER: builtins.int
    PHONES_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    LOGIN_ID_FIELD_NUMBER: builtins.int
    staff_login: builtins.str
    """staff.yandex-team.ru login - only for passport users"""
    passport_uid: builtins.int
    """passport uid (external). default_uid for Yandex.Passport active multi-session."""
    login: builtins.str
    """passport login"""
    avatar_id: builtins.str
    """For size-specific avatar rendering purposes https://avatars.mds.yandex.net/get-yapic/<avatarId>/<avatarSize>
    see https://doc.yandex-team.ru/blackbox/reference/method-sessionid-response-json.html#method-sessionid-response-json__display-name
    """
    email: builtins.str
    """passport default email"""
    two_factor_authentication_enabled: builtins.bool
    karma: builtins.int
    login_id: builtins.str
    @property
    def phones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def domain(self) -> global___YandexClaims.Domain: ...
    def __init__(
        self,
        *,
        staff_login: builtins.str = ...,
        passport_uid: builtins.int = ...,
        login: builtins.str = ...,
        avatar_id: builtins.str = ...,
        email: builtins.str = ...,
        two_factor_authentication_enabled: builtins.bool = ...,
        karma: builtins.int = ...,
        phones: collections.abc.Iterable[builtins.str] | None = ...,
        domain: global___YandexClaims.Domain | None = ...,
        login_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["domain", b"domain"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["avatar_id", b"avatar_id", "domain", b"domain", "email", b"email", "karma", b"karma", "login", b"login", "login_id", b"login_id", "passport_uid", b"passport_uid", "phones", b"phones", "staff_login", b"staff_login", "two_factor_authentication_enabled", b"two_factor_authentication_enabled"]) -> None: ...

global___YandexClaims = YandexClaims

@typing.final
class Group(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_ID_FIELD_NUMBER: builtins.int
    GROUP_NAME_FIELD_NUMBER: builtins.int
    group_id: builtins.str
    group_name: builtins.str
    def __init__(
        self,
        *,
        group_id: builtins.str = ...,
        group_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["group_id", b"group_id", "group_name", b"group_name"]) -> None: ...

global___Group = Group
