Metadata-Version: 2.3
Name: pybacktestchain_gui
Version: 0.0.0
Summary: A nice GUI addition to the pybacktestchain module, project for M2 203 python course
License: MIT
Author: Faune Blanchard
Requires-Python: >=3.11,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: dash (>=2.18.2,<3.0.0)
Requires-Dist: dash-bootstrap-components (>=1.6.0,<2.0.0)
Requires-Dist: numba (>=0.60.0,<0.61.0)
Requires-Dist: polars (>=1.19.0,<2.0.0)
Requires-Dist: pyarrow (>=19.0.0,<20.0.0)
Requires-Dist: pybacktestchain (>=0.2.1,<0.3.0)
Description-Content-Type: text/markdown

# pybacktestchain_gui

A nice GUI addition to the pybacktestchain module, project for M2 203 python course

## Installation

```bash
$ pip install pybacktestchain_gui
```

## Usage

- TODO

## Plan

- Change the universe using Backtest.universe (Backtest is a dataclass): we want to retrieve a list of tickers from an API (or manually import tickers) and then put them in a list: the user can either :
    - select an index or multiple indices as a universe
    - select the universe manually
    This can be done in the GUI thanks to the list object
- Add the option to change the strategy: add a min sharpe strategy, add the strategy from econometrics project ?, look for potentially other strategies to add. We can do this by creating new classes which inherit from the FirstTwoMoments class. The user can then manually select which strategy to choose. 
- The user should also be allowed to change the parameters (allow short selling or not, change the risk aversion parameter) etc
- allow the option to change the date range
- Add the option to change the risk model: right now we use stop loss, we can also 
- Then, we graph the PNL of the portfolio created by the user from the strategy and the universe.
- We add the list of stocks and their weights 
- Potentially, we can also add what indices they belong to (?) or what sector (how to retrieve ? yahoo finance maybe) if that's possible given the data we have
- allow the option to download the performance as a csv (csv generated by pybacktestchain)
- All of this should be done in a dashboard, then the user can simply launch the dashboard and it should be available -> either locally or find a way to share it with others.

## Contributing

Interested in contributing? Check out the contributing guidelines. Please note that this project is released with a Code of Conduct. By contributing to this project, you agree to abide by its terms.

## License

`pybacktestchain_gui` was created by Faune Blanchard. It is licensed under the terms of the MIT license.

## Credits

`pybacktestchain_gui` was created with [`cookiecutter`](https://cookiecutter.readthedocs.io/en/latest/) and the `py-pkgs-cookiecutter` [template](https://github.com/py-pkgs/py-pkgs-cookiecutter).

