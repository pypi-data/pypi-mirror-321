# coding: utf-8

"""
ColiVara

Colivara is a suite of services that allows you to store, search, and retrieve documents based on their visual embeddings.      It is a web-first implementation of the ColPali paper using ColQwen2 as backend model. It works exacly like RAG from the end-user standpoint - but using vision models instead of chunking and text-processing for documents.

The version of the OpenAPI document: 1.0.0
Contact: abdulhaleem@tjmlabs.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from colivara_py.models.patch_collection_in import PatchCollectionIn


class TestPatchCollectionIn(unittest.TestCase):
    """PatchCollectionIn unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchCollectionIn:
        """Test PatchCollectionIn
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `PatchCollectionIn`
        """
        model = PatchCollectionIn()
        if include_optional:
            return PatchCollectionIn(
                name = '',
                metadata = None
            )
        else:
            return PatchCollectionIn(
        )
        """

    def testPatchCollectionIn(self):
        """Test PatchCollectionIn"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
