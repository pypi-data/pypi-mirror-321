[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pdfredact"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "JSv4", email = "scrudato@umich.edu" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "reportlab==4.2.5",
  "Pillow==11.1.0",
  "pdf2image==1.17.0",
  "plasmapdf==0.1.1",
]

[project.urls]
Documentation = "https://github.com/JSv4/PdfRedact#readme"
Issues = "https://github.com/JSv4/PdfRedact/issues"
Source = "https://github.com/JSv4/PdfRedact"

[tool.hatch.version]
path = "src/pdfredact/__about__.py"

[tool.hatch.envs.test]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytesseract",
  "PyPDF2"
]
[tool.hatch.envs.test.scripts]
start = "pytest {args:tests}"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/pdfredact tests}"

[tool.coverage.run]
source_pkgs = ["pdfredact", "tests"]
branch = true
parallel = true
omit = [
  "src/pdfredact/__about__.py",
  "examples/*",
]

[tool.coverage.paths]
pdfredact = ["src/pdfredact", "*/src/pdfredact"]
tests = ["tests", "*/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py38"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line length violations (handled by black)
]

[tool.ruff.lint.isort]
known-first-party = ["pdfredact"]
force-single-line = false
lines-between-types = 1

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.hatch.envs.lint]
dependencies = [
    "black>=23.0.0",
    "ruff>=0.0.290",
]
[tool.hatch.envs.lint.scripts]
style = [
    "ruff check {args:.}",
    "black --check --diff {args:.}",
]
fmt = [
    "black {args:.}",
    "ruff check --fix {args:.}",
]
all = [
    "style",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
explicit_package_bases = true
namespace_packages = true
ignore_missing_imports = true


