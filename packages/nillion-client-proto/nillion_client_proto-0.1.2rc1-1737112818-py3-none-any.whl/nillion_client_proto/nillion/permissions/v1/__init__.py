# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: nillion/permissions/v1/service.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


class PermissionsStub(betterproto.ServiceStub):
    """A service to interact with permissions."""

    async def retrieve_permissions(
        self,
        retrieve_retrieve_permissions_request: "retrieve.RetrievePermissionsRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None,
    ) -> "permissions.Permissions":
        """Retrieve the permissions for a set of values."""

        return await self._unary_unary(
            "/nillion.permissions.v1.Permissions/RetrievePermissions",
            retrieve_retrieve_permissions_request,
            permissions.Permissions,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def overwrite_permissions(
        self,
        overwrite_overwrite_permissions_request: "overwrite.OverwritePermissionsRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None,
    ) -> "betterproto_lib_google_protobuf.Empty":
        """Overwrite the permissions for a set of values."""

        return await self._unary_unary(
            "/nillion.permissions.v1.Permissions/OverwritePermissions",
            overwrite_overwrite_permissions_request,
            betterproto_lib_google_protobuf.Empty,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def update_permissions(
        self,
        update_update_permissions_request: "update.UpdatePermissionsRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None,
    ) -> "betterproto_lib_google_protobuf.Empty":
        """
        Update the permissions for a set of values.

         This alters the current permissions for a set of values by applying all of the
         `allow` and `deny` permissions given on top of the set of permissions they have
         at the time when the request is invoked.
        """

        return await self._unary_unary(
            "/nillion.permissions.v1.Permissions/UpdatePermissions",
            update_update_permissions_request,
            betterproto_lib_google_protobuf.Empty,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf

from . import (
    overwrite,
    permissions,
    retrieve,
    update,
)


class PermissionsBase(ServiceBase):
    """A service to interact with permissions."""

    async def retrieve_permissions(
        self,
        retrieve_retrieve_permissions_request: "retrieve.RetrievePermissionsRequest",
    ) -> "permissions.Permissions":
        """Retrieve the permissions for a set of values."""

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def overwrite_permissions(
        self,
        overwrite_overwrite_permissions_request: "overwrite.OverwritePermissionsRequest",
    ) -> "betterproto_lib_google_protobuf.Empty":
        """Overwrite the permissions for a set of values."""

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def update_permissions(
        self, update_update_permissions_request: "update.UpdatePermissionsRequest"
    ) -> "betterproto_lib_google_protobuf.Empty":
        """
        Update the permissions for a set of values.

         This alters the current permissions for a set of values by applying all of the
         `allow` and `deny` permissions given on top of the set of permissions they have
         at the time when the request is invoked.
        """

        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_retrieve_permissions(
        self,
        stream: "grpclib.server.Stream[retrieve.RetrievePermissionsRequest, permissions.Permissions]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.retrieve_permissions(request)
        await stream.send_message(response)

    async def __rpc_overwrite_permissions(
        self,
        stream: "grpclib.server.Stream[overwrite.OverwritePermissionsRequest, betterproto_lib_google_protobuf.Empty]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.overwrite_permissions(request)
        await stream.send_message(response)

    async def __rpc_update_permissions(
        self,
        stream: "grpclib.server.Stream[update.UpdatePermissionsRequest, betterproto_lib_google_protobuf.Empty]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.update_permissions(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/nillion.permissions.v1.Permissions/RetrievePermissions": grpclib.const.Handler(
                self.__rpc_retrieve_permissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                retrieve.RetrievePermissionsRequest,
                permissions.Permissions,
            ),
            "/nillion.permissions.v1.Permissions/OverwritePermissions": grpclib.const.Handler(
                self.__rpc_overwrite_permissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                overwrite.OverwritePermissionsRequest,
                betterproto_lib_google_protobuf.Empty,
            ),
            "/nillion.permissions.v1.Permissions/UpdatePermissions": grpclib.const.Handler(
                self.__rpc_update_permissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                update.UpdatePermissionsRequest,
                betterproto_lib_google_protobuf.Empty,
            ),
        }
