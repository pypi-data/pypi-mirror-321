Metadata-Version: 2.1
Name: RussianLang
Version: 0.2
Summary: Библиотека для программирования на python русским языком
Home-page: https://github.com/Dron3916/RussianLanguage
Author: Rodionov Andrew
Author-email: dron3915work@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown


```markdown
# RussianLang - Библиотека для Python на русском языке

RussianLang — это библиотека для Python, которая позволяет писать код на русском языке, заменяя стандартные Python-команды на их русскоязычные аналоги. Она поддерживает базовые операции ввода/вывода, математические вычисления, генерацию случайных чисел и простую обработку ошибок. 

## Установка

Для начала работы с библиотекой, просто добавьте файл с библиотекой в ваш проект или установите её с помощью pip install RussianLang.

1. Скачайте или скопируйте файл библиотеки.
2. Добавьте его в ваш проект.

## Основные функции

### Ввод/Вывод

- **Писать(data=None)** — Выводит информацию на экран.
- **Молвить(data=None)** — Получает данные от пользователя.

```python
Система.Писать("Привет, мир!")
имя = Система.Молвить("Как тебя зовут? ")
Система.Писать(f"Привет, {имя}!")
```

### Проверка условий

- **Проверить(condition=None, do_first=None, do_second=None)** — Проверяет условие и выполняет одно из двух действий, в зависимости от его истинности.

```python
Система.Проверить(условие=True, do_first=lambda: Система.Писать("Условие выполнено"))
```

### Математические функции

- **КвадратныйКорень(число)** — Находит квадратный корень числа.
- **Синус(угол)** — Вычисляет синус угла (в радианах) с помощью ряда Тейлора.
- **Косинус(угол)** — Вычисляет косинус угла (в радианах) с помощью ряда Тейлора.
- **ВозвестиВСтепень(основание, степень)** — Возводит число в степень.
- **Логарифм(число, основание=10)** — Вычисляет логарифм числа по основанию.
- **Модуль(число)** — Находит модуль числа.
- **НайтиКорни(a, b, c)** — Решает квадратное уравнение по коэффициентам.

```python
результат = Система.КвадратныйКорень(16)
Система.Писать(результат)
```

### Случайные числа

- **СлучЦел(мин, макс)** — Генерирует случайное целое число в заданном диапазоне.
- **СлучДроб()** — Генерирует случайное дробное число от 0 до 1.
- **СлучВыбор(список)** — Выбирает случайный элемент из списка.

```python
случайное_число = Система.СлучЦел(1, 10)
Система.Писать(случайное_число)
```

### Ошибки и завершение работы

- **Ошибка(data=None)** — Выводит ошибку.
- **Завершить()** — Завершает программу.

```python
Система.Ошибка("Ошибка! Программа завершена.")
```

## Пример использования

```python
from RussianLang import Система

# Выводим информацию
Система.Писать("Привет, мир!")

# Получаем имя пользователя
имя = Система.Молвить("Как тебя зовут? ")

# Используем математическую функцию
результат = Система.КвадратныйКорень(25)
Система.Писать(f"Квадратный корень из 25: {результат}")

# Проверка условий
Система.Проверить(условие=True, do_first=lambda: Система.Писать("Условие выполнено"))
```

## Ошибки

Если будет выполнена ошибка, она будет выведена в консоль с помощью функции **Ошибка()**. Ошибки могут быть полезными при отладке программы.

## Информация о библиотеке

```python
Система.Информация()
```

Выводит информацию о библиотеке, версию и дату создания.

## Лицензия

Этот проект распространяется под лицензией [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0).
```

В этом файле добавлена информация о лицензии Apache 2.0 в раздел "Лицензия". Вы можете использовать его как основу для дальнейшего распространения вашей библиотеки.

