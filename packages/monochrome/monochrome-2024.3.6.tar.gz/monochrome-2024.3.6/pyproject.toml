[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "setuptools_scm>=6.2",
    "scikit-build",
    "cmake>=3.18",
    "ninja"
]
build-backend="setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/python/monochrome/_version.py"
fallback_version = "0.1"

[tool.pytest.ini_options]
testpaths = "src/python/tests"

[tool.cibuildwheel]
archs = ["auto64"]  # 64-bit only
skip = "pp* *musllinux*"  # disable PyPy, musl-based wheels
test-requires = ["pytest"]
test-command = "pytest {project}/src/python/tests"
before-build = "python -m pip install wheel>=0.40.0"

[tool.cibuildwheel.macos]
# https://cibuildwheel.readthedocs.io/en/stable/faq/#apple-silicon
archs = ["universal2"]
test-skip = ["*_arm64", "*_universal2:arm64"]
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel} && wheel tags --python-tag=py3 --abi-tag=none --remove {dest_dir}/*.whl"

[tool.cibuildwheel.linux]
before-all = "yum install -y libXrandr-devel libXcursor-devel libXinerama-devel libXi-devel mesa-libGL-devel libdwarf-devel binutils-devel"
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel} && wheel tags --python-tag=py3 --abi-tag=none --remove {dest_dir}/*.whl"

[tool.cibuildwheel.windows]
repair-wheel-command = "mv {wheel} {dest_dir} && powershell -command \"python -m wheel tags --python-tag=py3 --abi-tag=none --remove $(dir {dest_dir}\\*.whl)\""