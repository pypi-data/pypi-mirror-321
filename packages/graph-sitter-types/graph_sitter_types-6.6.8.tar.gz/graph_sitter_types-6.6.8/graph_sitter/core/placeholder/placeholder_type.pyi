"""
This type stub file was generated by pyright.
"""

from typing import Generic, TypeVar
from graph_sitter.core.interfaces.editable import Editable
from graph_sitter.core.placeholder.placeholder import Placeholder
from graph_sitter.writer_decorators import apidoc

Parent = TypeVar("Parent", bound="Editable")
@apidoc
class TypePlaceholder(Placeholder[Parent], Generic[Parent]):
    """A placeholder for a Type node that does not exist.
    Can be populated using the `edit` method.
    """
    def edit(self, new_src: str, fix_indentation: bool = ..., priority: int = ..., dedupe: bool = ...) -> None:
        """Edits the type annotation of a placeholder node.

        Modifies the source code by adding or updating a type annotation after a node.
        Handles cases where the parent node has children and adjusts spacing accordingly.

        Args:
            new_src (str): The new type annotation text to be inserted.
            fix_indentation (bool, optional): Whether to fix the indentation of the new source.
            priority (int, optional): Priority of the edit operation.
            dedupe (bool, optional): Whether to remove duplicate edits.

        Returns:
            None
        """
        ...
    


