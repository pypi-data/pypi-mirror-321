"""
This type stub file was generated by pyright.
"""

from typing import Generic, TYPE_CHECKING, TypeVar
from tree_sitter import Node as TSNode
from graph_sitter.core.detached_symbols.function_call import FunctionCall
from graph_sitter.core.interfaces.has_value import HasValue
from graph_sitter.core.node_id_factory import NodeId
from graph_sitter.core.statements.statement import Statement
from graph_sitter.extensions.autocommit import reader
from graph_sitter.writer_decorators import apidoc
from graph_sitter.codebase.codebase_graph import CodebaseGraph
from graph_sitter.core.detached_symbols.code_block import CodeBlock

if TYPE_CHECKING:
    ...
Parent = TypeVar("Parent", bound="CodeBlock")
@apidoc
class RaiseStatement(Statement[Parent], HasValue, Generic[Parent]):
    """Abstract representation of raise statements, e.g. in Python:

    ```python
    def f(x):
        raise ValueError()
    ```
    """
    statement_type = ...
    def __init__(self, ts_node: TSNode, file_node_id: NodeId, G: CodebaseGraph, parent: Parent, pos: int | None = ...) -> None:
        ...
    
    @property
    @reader
    def function_calls(self) -> list[FunctionCall]:
        """Gets function calls within a raise statement's value expression.

        Returns:
            list[FunctionCall]: A list of function calls in the raise statement's value expression, or an empty list if the value expression doesn't exist.
        """
        ...
    


