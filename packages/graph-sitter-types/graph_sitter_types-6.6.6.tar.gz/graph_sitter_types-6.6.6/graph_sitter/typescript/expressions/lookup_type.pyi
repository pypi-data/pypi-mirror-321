"""
This type stub file was generated by pyright.
"""

from typing import Generic, Self, TYPE_CHECKING, TypeVar
from tree_sitter import Node as TSNode
from codegen.utils.codemod.codemod_writer_decorators import ts_apidoc
from graph_sitter.core.autocommit import reader
from graph_sitter.core.expressions import Expression
from graph_sitter.core.expressions.type import Type
from graph_sitter.core.node_id_factory import NodeId
from graph_sitter.codebase.codebase_graph import CodebaseGraph
from graph_sitter.typescript.expressions.type import TSType

if TYPE_CHECKING:
    ...
Parent = TypeVar("Parent")
@ts_apidoc
class TSLookupType(Type[Parent], Generic[Parent]):
    """Type lookup
    Examples:
        a["key"]
    """
    type: TSType[Self]
    lookup: Expression
    def __init__(self, ts_node: TSNode, file_node_id: NodeId, G: CodebaseGraph, parent: Parent) -> None:
        ...
    
    @property
    @reader
    def name(self) -> str | None:
        """Retrieves the name of the type object.

        Gets the name property of the underlying type object. This property is commonly used to access type names in TypeScript-style type lookups.

        Returns:
            str | None: The name of the type object if it exists, None otherwise.
        """
        ...
    


