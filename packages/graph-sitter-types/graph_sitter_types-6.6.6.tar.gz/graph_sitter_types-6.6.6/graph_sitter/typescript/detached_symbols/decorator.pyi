"""
This type stub file was generated by pyright.
"""

from codegen.utils.codemod.codemod_writer_decorators import ts_apidoc
from graph_sitter.core.autocommit import reader
from graph_sitter.core.detached_symbols.decorator import Decorator
from graph_sitter.core.detached_symbols.function_call import FunctionCall

@ts_apidoc
class TSDecorator(Decorator["JSClass", "TSFunction", "TsParameter"]):
    """Abstract representation of a Decorator"""
    @property
    @reader
    def call(self) -> FunctionCall | None:
        """Retrieves the function call expression associated with the decorator.

        This property checks if the decorator has a function call expression (e.g., @decorator()) and returns it as a FunctionCall object.
        If the decorator is a simple identifier (e.g., @decorator), returns None.

        Returns:
            FunctionCall | None: A FunctionCall object representing the decorator's call expression if present, None otherwise.
        """
        ...
    


