"""
This type stub file was generated by pyright.
"""

from codegen.utils.codemod.codemod_writer_decorators import py_apidoc
from graph_sitter.core.autocommit import reader
from graph_sitter.core.detached_symbols.decorator import Decorator
from graph_sitter.core.detached_symbols.function_call import FunctionCall

@py_apidoc
class PyDecorator(Decorator["PyClass", "PyFunction", "PyParameter"]):
    """Extends Decorators for Python codebases."""
    @property
    @reader
    def call(self) -> FunctionCall | None:
        """Gets the function call node from the decorator if the decorator is a call.

        This property retrieves the FunctionCall instance if the decorator is a function call
        (e.g., @decorator()), otherwise returns None for simple decorators (e.g., @decorator).

        Args:
            None

        Returns:
            FunctionCall | None: A FunctionCall instance if the decorator is a function call,
            None if it's a simple decorator.
        """
        ...
    


