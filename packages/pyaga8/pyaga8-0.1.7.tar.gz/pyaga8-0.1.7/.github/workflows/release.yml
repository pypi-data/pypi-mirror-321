name: Release
on:
  release:
    types: [published]
jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Install maturin
      run: pip install maturin
    - name: Build the package
      run: maturin build --release
    - name: Create source distribution
      run: maturin sdist
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: |
          target/wheels/*.whl
          target/wheels/*.tar.gz
    - name: Publish to PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        twine upload target/wheels/*.whl target/wheels/*.tar.gz