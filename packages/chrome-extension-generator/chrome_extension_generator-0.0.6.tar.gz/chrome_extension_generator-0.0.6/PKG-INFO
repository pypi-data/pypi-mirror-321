Metadata-Version: 2.2
Name: chrome_extension_generator
Version: 0.0.6
Summary: A quick way to generate the minimum boilerplate to start hacking on a chrome plugin.
Home-page: https://github.com/radekosmulski/chrome_extension_generator
Author: Radek Osmulski
Author-email: rosmulski@gmail.com
License: Apache Software License 2.0
Keywords: nbdev jupyter notebook python
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fastcore
Provides-Extra: dev
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# chrome_extension_generator


<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

A command-line tool to streamline the creation of Chrome extensions by
automatically generating the required boilerplate files.

## Why?

Chrome extensions are powerful tools for customizing your browsing
experience, but setting up the basic structure can be repetitive. This
tool was created to eliminate the tedious part of:

- Creating the correct directory structure
- Writing a basic manifest.json with proper Chrome Extension v3 format
- Setting up initial content scripts
- Creating documentation

By automating these common tasks, developers can focus on what matters:
implementing their extension’s actual functionality.

## Installation

Install latest from the GitHub
[repository](https://github.com/radekosmulski/chrome_extension_generator):

``` sh
$ pip install git+https://github.com/radekosmulski/chrome_extension_generator.git
```

or from
[conda](https://anaconda.org/radekosmulski/chrome_extension_generator)

``` sh
$ conda install -c radekosmulski chrome_extension_generator
```

or from [pypi](https://pypi.org/project/chrome_extension_generator/)

``` sh
$ pip install chrome_extension_generator
```

## Usage

### Command Line Interface

After installation, you can use the command line tool directly:

    chrome-extension-generate --name "My Extension" --desc "A cool extension" --url "https://example.com/*"

### Python API

You can also use it programmatically in your Python code:

    from chrome_extension_generator.core import main

### Parameters

    --name  Name of your extension (required)
    --desc  Short description of what your extension does (optional)
    --url   URL pattern where your extension will run (optional)
    --repo  GitHub repository URL (optional)

## Output Structure

    your-extension-name/
    ├── README.md
    ├── manifest.json
    └── content.js

Each file is pre-populated with the provided information and formatted
for easy reading and editing.
