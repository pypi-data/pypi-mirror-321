# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _fetpapi
else:
    import _fetpapi

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

import fesapi
class SwigPyIterator(object):
    r"""Proxy of C++ swig::SwigPyIterator class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _fetpapi.delete_SwigPyIterator

    def value(self) -> "PyObject *":
        r"""value(SwigPyIterator self) -> PyObject *"""
        return _fetpapi.SwigPyIterator_value(self)

    def incr(self, n: "size_t"=1) -> "swig::SwigPyIterator *":
        r"""incr(SwigPyIterator self, size_t n=1) -> SwigPyIterator"""
        return _fetpapi.SwigPyIterator_incr(self, n)

    def decr(self, n: "size_t"=1) -> "swig::SwigPyIterator *":
        r"""decr(SwigPyIterator self, size_t n=1) -> SwigPyIterator"""
        return _fetpapi.SwigPyIterator_decr(self, n)

    def distance(self, x: "SwigPyIterator") -> "ptrdiff_t":
        r"""distance(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t"""
        return _fetpapi.SwigPyIterator_distance(self, x)

    def equal(self, x: "SwigPyIterator") -> "bool":
        r"""equal(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _fetpapi.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        r"""copy(SwigPyIterator self) -> SwigPyIterator"""
        return _fetpapi.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        r"""next(SwigPyIterator self) -> PyObject *"""
        return _fetpapi.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        r"""__next__(SwigPyIterator self) -> PyObject *"""
        return _fetpapi.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        r"""previous(SwigPyIterator self) -> PyObject *"""
        return _fetpapi.SwigPyIterator_previous(self)

    def advance(self, n: "ptrdiff_t") -> "swig::SwigPyIterator *":
        r"""advance(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _fetpapi.SwigPyIterator_advance(self, n)

    def __eq__(self, x: "SwigPyIterator") -> "bool":
        r"""__eq__(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _fetpapi.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: "SwigPyIterator") -> "bool":
        r"""__ne__(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _fetpapi.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: "ptrdiff_t") -> "swig::SwigPyIterator &":
        r"""__iadd__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _fetpapi.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: "ptrdiff_t") -> "swig::SwigPyIterator &":
        r"""__isub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _fetpapi.SwigPyIterator___isub__(self, n)

    def __add__(self, n: "ptrdiff_t") -> "swig::SwigPyIterator *":
        r"""__add__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _fetpapi.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        r"""
        __sub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator
        __sub__(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t
        """
        return _fetpapi.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _fetpapi:
_fetpapi.SwigPyIterator_swigregister(SwigPyIterator)
class StringVector(object):
    r"""Proxy of C++ std::vector< std::string > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(StringVector self) -> SwigPyIterator"""
        return _fetpapi.StringVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(StringVector self) -> bool"""
        return _fetpapi.StringVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(StringVector self) -> bool"""
        return _fetpapi.StringVector___bool__(self)

    def __len__(self) -> "std::vector< std::string >::size_type":
        r"""__len__(StringVector self) -> std::vector< std::string >::size_type"""
        return _fetpapi.StringVector___len__(self)

    def __getslice__(self, i: "std::vector< std::string >::difference_type", j: "std::vector< std::string >::difference_type") -> "std::vector< std::string,std::allocator< std::string > > *":
        r"""__getslice__(StringVector self, std::vector< std::string >::difference_type i, std::vector< std::string >::difference_type j) -> StringVector"""
        return _fetpapi.StringVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(StringVector self, std::vector< std::string >::difference_type i, std::vector< std::string >::difference_type j)
        __setslice__(StringVector self, std::vector< std::string >::difference_type i, std::vector< std::string >::difference_type j, StringVector v)
        """
        return _fetpapi.StringVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< std::string >::difference_type", j: "std::vector< std::string >::difference_type") -> "void":
        r"""__delslice__(StringVector self, std::vector< std::string >::difference_type i, std::vector< std::string >::difference_type j)"""
        return _fetpapi.StringVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(StringVector self, std::vector< std::string >::difference_type i)
        __delitem__(StringVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.StringVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< std::string >::value_type const &":
        r"""
        __getitem__(StringVector self, SWIGPY_SLICEOBJECT * slice) -> StringVector
        __getitem__(StringVector self, std::vector< std::string >::difference_type i) -> std::vector< std::string >::value_type const &
        """
        return _fetpapi.StringVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(StringVector self, SWIGPY_SLICEOBJECT * slice, StringVector v)
        __setitem__(StringVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(StringVector self, std::vector< std::string >::difference_type i, std::vector< std::string >::value_type const & x)
        """
        return _fetpapi.StringVector___setitem__(self, *args)

    def pop(self) -> "std::vector< std::string >::value_type":
        r"""pop(StringVector self) -> std::vector< std::string >::value_type"""
        return _fetpapi.StringVector_pop(self)

    def append(self, x: "std::vector< std::string >::value_type const &") -> "void":
        r"""append(StringVector self, std::vector< std::string >::value_type const & x)"""
        return _fetpapi.StringVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(StringVector self) -> bool"""
        return _fetpapi.StringVector_empty(self)

    def size(self) -> "std::vector< std::string >::size_type":
        r"""size(StringVector self) -> std::vector< std::string >::size_type"""
        return _fetpapi.StringVector_size(self)

    def swap(self, v: "StringVector") -> "void":
        r"""swap(StringVector self, StringVector v)"""
        return _fetpapi.StringVector_swap(self, v)

    def begin(self) -> "std::vector< std::string >::iterator":
        r"""begin(StringVector self) -> std::vector< std::string >::iterator"""
        return _fetpapi.StringVector_begin(self)

    def end(self) -> "std::vector< std::string >::iterator":
        r"""end(StringVector self) -> std::vector< std::string >::iterator"""
        return _fetpapi.StringVector_end(self)

    def rbegin(self) -> "std::vector< std::string >::reverse_iterator":
        r"""rbegin(StringVector self) -> std::vector< std::string >::reverse_iterator"""
        return _fetpapi.StringVector_rbegin(self)

    def rend(self) -> "std::vector< std::string >::reverse_iterator":
        r"""rend(StringVector self) -> std::vector< std::string >::reverse_iterator"""
        return _fetpapi.StringVector_rend(self)

    def clear(self) -> "void":
        r"""clear(StringVector self)"""
        return _fetpapi.StringVector_clear(self)

    def get_allocator(self) -> "std::vector< std::string >::allocator_type":
        r"""get_allocator(StringVector self) -> std::vector< std::string >::allocator_type"""
        return _fetpapi.StringVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(StringVector self)"""
        return _fetpapi.StringVector_pop_back(self)

    def erase(self, *args) -> "std::vector< std::string >::iterator":
        r"""
        erase(StringVector self, std::vector< std::string >::iterator pos) -> std::vector< std::string >::iterator
        erase(StringVector self, std::vector< std::string >::iterator first, std::vector< std::string >::iterator last) -> std::vector< std::string >::iterator
        """
        return _fetpapi.StringVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(StringVector self) -> StringVector
        __init__(StringVector self, StringVector other) -> StringVector
        __init__(StringVector self, std::vector< std::string >::size_type size) -> StringVector
        __init__(StringVector self, std::vector< std::string >::size_type size, std::vector< std::string >::value_type const & value) -> StringVector
        """
        _fetpapi.StringVector_swiginit(self, _fetpapi.new_StringVector(*args))

    def push_back(self, x: "std::vector< std::string >::value_type const &") -> "void":
        r"""push_back(StringVector self, std::vector< std::string >::value_type const & x)"""
        return _fetpapi.StringVector_push_back(self, x)

    def front(self) -> "std::vector< std::string >::value_type const &":
        r"""front(StringVector self) -> std::vector< std::string >::value_type const &"""
        return _fetpapi.StringVector_front(self)

    def back(self) -> "std::vector< std::string >::value_type const &":
        r"""back(StringVector self) -> std::vector< std::string >::value_type const &"""
        return _fetpapi.StringVector_back(self)

    def assign(self, n: "std::vector< std::string >::size_type", x: "std::vector< std::string >::value_type const &") -> "void":
        r"""assign(StringVector self, std::vector< std::string >::size_type n, std::vector< std::string >::value_type const & x)"""
        return _fetpapi.StringVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(StringVector self, std::vector< std::string >::size_type new_size)
        resize(StringVector self, std::vector< std::string >::size_type new_size, std::vector< std::string >::value_type const & x)
        """
        return _fetpapi.StringVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(StringVector self, std::vector< std::string >::iterator pos, std::vector< std::string >::value_type const & x) -> std::vector< std::string >::iterator
        insert(StringVector self, std::vector< std::string >::iterator pos, std::vector< std::string >::size_type n, std::vector< std::string >::value_type const & x)
        """
        return _fetpapi.StringVector_insert(self, *args)

    def reserve(self, n: "std::vector< std::string >::size_type") -> "void":
        r"""reserve(StringVector self, std::vector< std::string >::size_type n)"""
        return _fetpapi.StringVector_reserve(self, n)

    def capacity(self) -> "std::vector< std::string >::size_type":
        r"""capacity(StringVector self) -> std::vector< std::string >::size_type"""
        return _fetpapi.StringVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_StringVector

# Register StringVector in _fetpapi:
_fetpapi.StringVector_swigregister(StringVector)
class Int32Vector(object):
    r"""Proxy of C++ std::vector< int32_t > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(Int32Vector self) -> SwigPyIterator"""
        return _fetpapi.Int32Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(Int32Vector self) -> bool"""
        return _fetpapi.Int32Vector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(Int32Vector self) -> bool"""
        return _fetpapi.Int32Vector___bool__(self)

    def __len__(self) -> "std::vector< int >::size_type":
        r"""__len__(Int32Vector self) -> std::vector< int >::size_type"""
        return _fetpapi.Int32Vector___len__(self)

    def __getslice__(self, i: "std::vector< int >::difference_type", j: "std::vector< int >::difference_type") -> "std::vector< int,std::allocator< int > > *":
        r"""__getslice__(Int32Vector self, std::vector< int >::difference_type i, std::vector< int >::difference_type j) -> Int32Vector"""
        return _fetpapi.Int32Vector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(Int32Vector self, std::vector< int >::difference_type i, std::vector< int >::difference_type j)
        __setslice__(Int32Vector self, std::vector< int >::difference_type i, std::vector< int >::difference_type j, Int32Vector v)
        """
        return _fetpapi.Int32Vector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< int >::difference_type", j: "std::vector< int >::difference_type") -> "void":
        r"""__delslice__(Int32Vector self, std::vector< int >::difference_type i, std::vector< int >::difference_type j)"""
        return _fetpapi.Int32Vector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(Int32Vector self, std::vector< int >::difference_type i)
        __delitem__(Int32Vector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.Int32Vector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< int >::value_type const &":
        r"""
        __getitem__(Int32Vector self, SWIGPY_SLICEOBJECT * slice) -> Int32Vector
        __getitem__(Int32Vector self, std::vector< int >::difference_type i) -> std::vector< int >::value_type const &
        """
        return _fetpapi.Int32Vector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(Int32Vector self, SWIGPY_SLICEOBJECT * slice, Int32Vector v)
        __setitem__(Int32Vector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(Int32Vector self, std::vector< int >::difference_type i, std::vector< int >::value_type const & x)
        """
        return _fetpapi.Int32Vector___setitem__(self, *args)

    def pop(self) -> "std::vector< int >::value_type":
        r"""pop(Int32Vector self) -> std::vector< int >::value_type"""
        return _fetpapi.Int32Vector_pop(self)

    def append(self, x: "std::vector< int >::value_type const &") -> "void":
        r"""append(Int32Vector self, std::vector< int >::value_type const & x)"""
        return _fetpapi.Int32Vector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(Int32Vector self) -> bool"""
        return _fetpapi.Int32Vector_empty(self)

    def size(self) -> "std::vector< int >::size_type":
        r"""size(Int32Vector self) -> std::vector< int >::size_type"""
        return _fetpapi.Int32Vector_size(self)

    def swap(self, v: "Int32Vector") -> "void":
        r"""swap(Int32Vector self, Int32Vector v)"""
        return _fetpapi.Int32Vector_swap(self, v)

    def begin(self) -> "std::vector< int >::iterator":
        r"""begin(Int32Vector self) -> std::vector< int >::iterator"""
        return _fetpapi.Int32Vector_begin(self)

    def end(self) -> "std::vector< int >::iterator":
        r"""end(Int32Vector self) -> std::vector< int >::iterator"""
        return _fetpapi.Int32Vector_end(self)

    def rbegin(self) -> "std::vector< int >::reverse_iterator":
        r"""rbegin(Int32Vector self) -> std::vector< int >::reverse_iterator"""
        return _fetpapi.Int32Vector_rbegin(self)

    def rend(self) -> "std::vector< int >::reverse_iterator":
        r"""rend(Int32Vector self) -> std::vector< int >::reverse_iterator"""
        return _fetpapi.Int32Vector_rend(self)

    def clear(self) -> "void":
        r"""clear(Int32Vector self)"""
        return _fetpapi.Int32Vector_clear(self)

    def get_allocator(self) -> "std::vector< int >::allocator_type":
        r"""get_allocator(Int32Vector self) -> std::vector< int >::allocator_type"""
        return _fetpapi.Int32Vector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(Int32Vector self)"""
        return _fetpapi.Int32Vector_pop_back(self)

    def erase(self, *args) -> "std::vector< int >::iterator":
        r"""
        erase(Int32Vector self, std::vector< int >::iterator pos) -> std::vector< int >::iterator
        erase(Int32Vector self, std::vector< int >::iterator first, std::vector< int >::iterator last) -> std::vector< int >::iterator
        """
        return _fetpapi.Int32Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Int32Vector self) -> Int32Vector
        __init__(Int32Vector self, Int32Vector other) -> Int32Vector
        __init__(Int32Vector self, std::vector< int >::size_type size) -> Int32Vector
        __init__(Int32Vector self, std::vector< int >::size_type size, std::vector< int >::value_type const & value) -> Int32Vector
        """
        _fetpapi.Int32Vector_swiginit(self, _fetpapi.new_Int32Vector(*args))

    def push_back(self, x: "std::vector< int >::value_type const &") -> "void":
        r"""push_back(Int32Vector self, std::vector< int >::value_type const & x)"""
        return _fetpapi.Int32Vector_push_back(self, x)

    def front(self) -> "std::vector< int >::value_type const &":
        r"""front(Int32Vector self) -> std::vector< int >::value_type const &"""
        return _fetpapi.Int32Vector_front(self)

    def back(self) -> "std::vector< int >::value_type const &":
        r"""back(Int32Vector self) -> std::vector< int >::value_type const &"""
        return _fetpapi.Int32Vector_back(self)

    def assign(self, n: "std::vector< int >::size_type", x: "std::vector< int >::value_type const &") -> "void":
        r"""assign(Int32Vector self, std::vector< int >::size_type n, std::vector< int >::value_type const & x)"""
        return _fetpapi.Int32Vector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(Int32Vector self, std::vector< int >::size_type new_size)
        resize(Int32Vector self, std::vector< int >::size_type new_size, std::vector< int >::value_type const & x)
        """
        return _fetpapi.Int32Vector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(Int32Vector self, std::vector< int >::iterator pos, std::vector< int >::value_type const & x) -> std::vector< int >::iterator
        insert(Int32Vector self, std::vector< int >::iterator pos, std::vector< int >::size_type n, std::vector< int >::value_type const & x)
        """
        return _fetpapi.Int32Vector_insert(self, *args)

    def reserve(self, n: "std::vector< int >::size_type") -> "void":
        r"""reserve(Int32Vector self, std::vector< int >::size_type n)"""
        return _fetpapi.Int32Vector_reserve(self, n)

    def capacity(self) -> "std::vector< int >::size_type":
        r"""capacity(Int32Vector self) -> std::vector< int >::size_type"""
        return _fetpapi.Int32Vector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_Int32Vector

# Register Int32Vector in _fetpapi:
_fetpapi.Int32Vector_swigregister(Int32Vector)
class UInt32Vector(object):
    r"""Proxy of C++ std::vector< uint32_t > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(UInt32Vector self) -> SwigPyIterator"""
        return _fetpapi.UInt32Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(UInt32Vector self) -> bool"""
        return _fetpapi.UInt32Vector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(UInt32Vector self) -> bool"""
        return _fetpapi.UInt32Vector___bool__(self)

    def __len__(self) -> "std::vector< unsigned int >::size_type":
        r"""__len__(UInt32Vector self) -> std::vector< unsigned int >::size_type"""
        return _fetpapi.UInt32Vector___len__(self)

    def __getslice__(self, i: "std::vector< unsigned int >::difference_type", j: "std::vector< unsigned int >::difference_type") -> "std::vector< unsigned int,std::allocator< unsigned int > > *":
        r"""__getslice__(UInt32Vector self, std::vector< unsigned int >::difference_type i, std::vector< unsigned int >::difference_type j) -> UInt32Vector"""
        return _fetpapi.UInt32Vector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(UInt32Vector self, std::vector< unsigned int >::difference_type i, std::vector< unsigned int >::difference_type j)
        __setslice__(UInt32Vector self, std::vector< unsigned int >::difference_type i, std::vector< unsigned int >::difference_type j, UInt32Vector v)
        """
        return _fetpapi.UInt32Vector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< unsigned int >::difference_type", j: "std::vector< unsigned int >::difference_type") -> "void":
        r"""__delslice__(UInt32Vector self, std::vector< unsigned int >::difference_type i, std::vector< unsigned int >::difference_type j)"""
        return _fetpapi.UInt32Vector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(UInt32Vector self, std::vector< unsigned int >::difference_type i)
        __delitem__(UInt32Vector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.UInt32Vector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< unsigned int >::value_type const &":
        r"""
        __getitem__(UInt32Vector self, SWIGPY_SLICEOBJECT * slice) -> UInt32Vector
        __getitem__(UInt32Vector self, std::vector< unsigned int >::difference_type i) -> std::vector< unsigned int >::value_type const &
        """
        return _fetpapi.UInt32Vector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(UInt32Vector self, SWIGPY_SLICEOBJECT * slice, UInt32Vector v)
        __setitem__(UInt32Vector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(UInt32Vector self, std::vector< unsigned int >::difference_type i, std::vector< unsigned int >::value_type const & x)
        """
        return _fetpapi.UInt32Vector___setitem__(self, *args)

    def pop(self) -> "std::vector< unsigned int >::value_type":
        r"""pop(UInt32Vector self) -> std::vector< unsigned int >::value_type"""
        return _fetpapi.UInt32Vector_pop(self)

    def append(self, x: "std::vector< unsigned int >::value_type const &") -> "void":
        r"""append(UInt32Vector self, std::vector< unsigned int >::value_type const & x)"""
        return _fetpapi.UInt32Vector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(UInt32Vector self) -> bool"""
        return _fetpapi.UInt32Vector_empty(self)

    def size(self) -> "std::vector< unsigned int >::size_type":
        r"""size(UInt32Vector self) -> std::vector< unsigned int >::size_type"""
        return _fetpapi.UInt32Vector_size(self)

    def swap(self, v: "UInt32Vector") -> "void":
        r"""swap(UInt32Vector self, UInt32Vector v)"""
        return _fetpapi.UInt32Vector_swap(self, v)

    def begin(self) -> "std::vector< unsigned int >::iterator":
        r"""begin(UInt32Vector self) -> std::vector< unsigned int >::iterator"""
        return _fetpapi.UInt32Vector_begin(self)

    def end(self) -> "std::vector< unsigned int >::iterator":
        r"""end(UInt32Vector self) -> std::vector< unsigned int >::iterator"""
        return _fetpapi.UInt32Vector_end(self)

    def rbegin(self) -> "std::vector< unsigned int >::reverse_iterator":
        r"""rbegin(UInt32Vector self) -> std::vector< unsigned int >::reverse_iterator"""
        return _fetpapi.UInt32Vector_rbegin(self)

    def rend(self) -> "std::vector< unsigned int >::reverse_iterator":
        r"""rend(UInt32Vector self) -> std::vector< unsigned int >::reverse_iterator"""
        return _fetpapi.UInt32Vector_rend(self)

    def clear(self) -> "void":
        r"""clear(UInt32Vector self)"""
        return _fetpapi.UInt32Vector_clear(self)

    def get_allocator(self) -> "std::vector< unsigned int >::allocator_type":
        r"""get_allocator(UInt32Vector self) -> std::vector< unsigned int >::allocator_type"""
        return _fetpapi.UInt32Vector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(UInt32Vector self)"""
        return _fetpapi.UInt32Vector_pop_back(self)

    def erase(self, *args) -> "std::vector< unsigned int >::iterator":
        r"""
        erase(UInt32Vector self, std::vector< unsigned int >::iterator pos) -> std::vector< unsigned int >::iterator
        erase(UInt32Vector self, std::vector< unsigned int >::iterator first, std::vector< unsigned int >::iterator last) -> std::vector< unsigned int >::iterator
        """
        return _fetpapi.UInt32Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(UInt32Vector self) -> UInt32Vector
        __init__(UInt32Vector self, UInt32Vector other) -> UInt32Vector
        __init__(UInt32Vector self, std::vector< unsigned int >::size_type size) -> UInt32Vector
        __init__(UInt32Vector self, std::vector< unsigned int >::size_type size, std::vector< unsigned int >::value_type const & value) -> UInt32Vector
        """
        _fetpapi.UInt32Vector_swiginit(self, _fetpapi.new_UInt32Vector(*args))

    def push_back(self, x: "std::vector< unsigned int >::value_type const &") -> "void":
        r"""push_back(UInt32Vector self, std::vector< unsigned int >::value_type const & x)"""
        return _fetpapi.UInt32Vector_push_back(self, x)

    def front(self) -> "std::vector< unsigned int >::value_type const &":
        r"""front(UInt32Vector self) -> std::vector< unsigned int >::value_type const &"""
        return _fetpapi.UInt32Vector_front(self)

    def back(self) -> "std::vector< unsigned int >::value_type const &":
        r"""back(UInt32Vector self) -> std::vector< unsigned int >::value_type const &"""
        return _fetpapi.UInt32Vector_back(self)

    def assign(self, n: "std::vector< unsigned int >::size_type", x: "std::vector< unsigned int >::value_type const &") -> "void":
        r"""assign(UInt32Vector self, std::vector< unsigned int >::size_type n, std::vector< unsigned int >::value_type const & x)"""
        return _fetpapi.UInt32Vector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(UInt32Vector self, std::vector< unsigned int >::size_type new_size)
        resize(UInt32Vector self, std::vector< unsigned int >::size_type new_size, std::vector< unsigned int >::value_type const & x)
        """
        return _fetpapi.UInt32Vector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(UInt32Vector self, std::vector< unsigned int >::iterator pos, std::vector< unsigned int >::value_type const & x) -> std::vector< unsigned int >::iterator
        insert(UInt32Vector self, std::vector< unsigned int >::iterator pos, std::vector< unsigned int >::size_type n, std::vector< unsigned int >::value_type const & x)
        """
        return _fetpapi.UInt32Vector_insert(self, *args)

    def reserve(self, n: "std::vector< unsigned int >::size_type") -> "void":
        r"""reserve(UInt32Vector self, std::vector< unsigned int >::size_type n)"""
        return _fetpapi.UInt32Vector_reserve(self, n)

    def capacity(self) -> "std::vector< unsigned int >::size_type":
        r"""capacity(UInt32Vector self) -> std::vector< unsigned int >::size_type"""
        return _fetpapi.UInt32Vector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_UInt32Vector

# Register UInt32Vector in _fetpapi:
_fetpapi.UInt32Vector_swigregister(UInt32Vector)
class FloatVector(object):
    r"""Proxy of C++ std::vector< float > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(FloatVector self) -> SwigPyIterator"""
        return _fetpapi.FloatVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(FloatVector self) -> bool"""
        return _fetpapi.FloatVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(FloatVector self) -> bool"""
        return _fetpapi.FloatVector___bool__(self)

    def __len__(self) -> "std::vector< float >::size_type":
        r"""__len__(FloatVector self) -> std::vector< float >::size_type"""
        return _fetpapi.FloatVector___len__(self)

    def __getslice__(self, i: "std::vector< float >::difference_type", j: "std::vector< float >::difference_type") -> "std::vector< float,std::allocator< float > > *":
        r"""__getslice__(FloatVector self, std::vector< float >::difference_type i, std::vector< float >::difference_type j) -> FloatVector"""
        return _fetpapi.FloatVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(FloatVector self, std::vector< float >::difference_type i, std::vector< float >::difference_type j)
        __setslice__(FloatVector self, std::vector< float >::difference_type i, std::vector< float >::difference_type j, FloatVector v)
        """
        return _fetpapi.FloatVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< float >::difference_type", j: "std::vector< float >::difference_type") -> "void":
        r"""__delslice__(FloatVector self, std::vector< float >::difference_type i, std::vector< float >::difference_type j)"""
        return _fetpapi.FloatVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(FloatVector self, std::vector< float >::difference_type i)
        __delitem__(FloatVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.FloatVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< float >::value_type const &":
        r"""
        __getitem__(FloatVector self, SWIGPY_SLICEOBJECT * slice) -> FloatVector
        __getitem__(FloatVector self, std::vector< float >::difference_type i) -> std::vector< float >::value_type const &
        """
        return _fetpapi.FloatVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(FloatVector self, SWIGPY_SLICEOBJECT * slice, FloatVector v)
        __setitem__(FloatVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(FloatVector self, std::vector< float >::difference_type i, std::vector< float >::value_type const & x)
        """
        return _fetpapi.FloatVector___setitem__(self, *args)

    def pop(self) -> "std::vector< float >::value_type":
        r"""pop(FloatVector self) -> std::vector< float >::value_type"""
        return _fetpapi.FloatVector_pop(self)

    def append(self, x: "std::vector< float >::value_type const &") -> "void":
        r"""append(FloatVector self, std::vector< float >::value_type const & x)"""
        return _fetpapi.FloatVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(FloatVector self) -> bool"""
        return _fetpapi.FloatVector_empty(self)

    def size(self) -> "std::vector< float >::size_type":
        r"""size(FloatVector self) -> std::vector< float >::size_type"""
        return _fetpapi.FloatVector_size(self)

    def swap(self, v: "FloatVector") -> "void":
        r"""swap(FloatVector self, FloatVector v)"""
        return _fetpapi.FloatVector_swap(self, v)

    def begin(self) -> "std::vector< float >::iterator":
        r"""begin(FloatVector self) -> std::vector< float >::iterator"""
        return _fetpapi.FloatVector_begin(self)

    def end(self) -> "std::vector< float >::iterator":
        r"""end(FloatVector self) -> std::vector< float >::iterator"""
        return _fetpapi.FloatVector_end(self)

    def rbegin(self) -> "std::vector< float >::reverse_iterator":
        r"""rbegin(FloatVector self) -> std::vector< float >::reverse_iterator"""
        return _fetpapi.FloatVector_rbegin(self)

    def rend(self) -> "std::vector< float >::reverse_iterator":
        r"""rend(FloatVector self) -> std::vector< float >::reverse_iterator"""
        return _fetpapi.FloatVector_rend(self)

    def clear(self) -> "void":
        r"""clear(FloatVector self)"""
        return _fetpapi.FloatVector_clear(self)

    def get_allocator(self) -> "std::vector< float >::allocator_type":
        r"""get_allocator(FloatVector self) -> std::vector< float >::allocator_type"""
        return _fetpapi.FloatVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(FloatVector self)"""
        return _fetpapi.FloatVector_pop_back(self)

    def erase(self, *args) -> "std::vector< float >::iterator":
        r"""
        erase(FloatVector self, std::vector< float >::iterator pos) -> std::vector< float >::iterator
        erase(FloatVector self, std::vector< float >::iterator first, std::vector< float >::iterator last) -> std::vector< float >::iterator
        """
        return _fetpapi.FloatVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(FloatVector self) -> FloatVector
        __init__(FloatVector self, FloatVector other) -> FloatVector
        __init__(FloatVector self, std::vector< float >::size_type size) -> FloatVector
        __init__(FloatVector self, std::vector< float >::size_type size, std::vector< float >::value_type const & value) -> FloatVector
        """
        _fetpapi.FloatVector_swiginit(self, _fetpapi.new_FloatVector(*args))

    def push_back(self, x: "std::vector< float >::value_type const &") -> "void":
        r"""push_back(FloatVector self, std::vector< float >::value_type const & x)"""
        return _fetpapi.FloatVector_push_back(self, x)

    def front(self) -> "std::vector< float >::value_type const &":
        r"""front(FloatVector self) -> std::vector< float >::value_type const &"""
        return _fetpapi.FloatVector_front(self)

    def back(self) -> "std::vector< float >::value_type const &":
        r"""back(FloatVector self) -> std::vector< float >::value_type const &"""
        return _fetpapi.FloatVector_back(self)

    def assign(self, n: "std::vector< float >::size_type", x: "std::vector< float >::value_type const &") -> "void":
        r"""assign(FloatVector self, std::vector< float >::size_type n, std::vector< float >::value_type const & x)"""
        return _fetpapi.FloatVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(FloatVector self, std::vector< float >::size_type new_size)
        resize(FloatVector self, std::vector< float >::size_type new_size, std::vector< float >::value_type const & x)
        """
        return _fetpapi.FloatVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(FloatVector self, std::vector< float >::iterator pos, std::vector< float >::value_type const & x) -> std::vector< float >::iterator
        insert(FloatVector self, std::vector< float >::iterator pos, std::vector< float >::size_type n, std::vector< float >::value_type const & x)
        """
        return _fetpapi.FloatVector_insert(self, *args)

    def reserve(self, n: "std::vector< float >::size_type") -> "void":
        r"""reserve(FloatVector self, std::vector< float >::size_type n)"""
        return _fetpapi.FloatVector_reserve(self, n)

    def capacity(self) -> "std::vector< float >::size_type":
        r"""capacity(FloatVector self) -> std::vector< float >::size_type"""
        return _fetpapi.FloatVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_FloatVector

# Register FloatVector in _fetpapi:
_fetpapi.FloatVector_swigregister(FloatVector)
class DoubleVector(object):
    r"""Proxy of C++ std::vector< double > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(DoubleVector self) -> SwigPyIterator"""
        return _fetpapi.DoubleVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(DoubleVector self) -> bool"""
        return _fetpapi.DoubleVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(DoubleVector self) -> bool"""
        return _fetpapi.DoubleVector___bool__(self)

    def __len__(self) -> "std::vector< double >::size_type":
        r"""__len__(DoubleVector self) -> std::vector< double >::size_type"""
        return _fetpapi.DoubleVector___len__(self)

    def __getslice__(self, i: "std::vector< double >::difference_type", j: "std::vector< double >::difference_type") -> "std::vector< double,std::allocator< double > > *":
        r"""__getslice__(DoubleVector self, std::vector< double >::difference_type i, std::vector< double >::difference_type j) -> DoubleVector"""
        return _fetpapi.DoubleVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(DoubleVector self, std::vector< double >::difference_type i, std::vector< double >::difference_type j)
        __setslice__(DoubleVector self, std::vector< double >::difference_type i, std::vector< double >::difference_type j, DoubleVector v)
        """
        return _fetpapi.DoubleVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< double >::difference_type", j: "std::vector< double >::difference_type") -> "void":
        r"""__delslice__(DoubleVector self, std::vector< double >::difference_type i, std::vector< double >::difference_type j)"""
        return _fetpapi.DoubleVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(DoubleVector self, std::vector< double >::difference_type i)
        __delitem__(DoubleVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.DoubleVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< double >::value_type const &":
        r"""
        __getitem__(DoubleVector self, SWIGPY_SLICEOBJECT * slice) -> DoubleVector
        __getitem__(DoubleVector self, std::vector< double >::difference_type i) -> std::vector< double >::value_type const &
        """
        return _fetpapi.DoubleVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(DoubleVector self, SWIGPY_SLICEOBJECT * slice, DoubleVector v)
        __setitem__(DoubleVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(DoubleVector self, std::vector< double >::difference_type i, std::vector< double >::value_type const & x)
        """
        return _fetpapi.DoubleVector___setitem__(self, *args)

    def pop(self) -> "std::vector< double >::value_type":
        r"""pop(DoubleVector self) -> std::vector< double >::value_type"""
        return _fetpapi.DoubleVector_pop(self)

    def append(self, x: "std::vector< double >::value_type const &") -> "void":
        r"""append(DoubleVector self, std::vector< double >::value_type const & x)"""
        return _fetpapi.DoubleVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(DoubleVector self) -> bool"""
        return _fetpapi.DoubleVector_empty(self)

    def size(self) -> "std::vector< double >::size_type":
        r"""size(DoubleVector self) -> std::vector< double >::size_type"""
        return _fetpapi.DoubleVector_size(self)

    def swap(self, v: "DoubleVector") -> "void":
        r"""swap(DoubleVector self, DoubleVector v)"""
        return _fetpapi.DoubleVector_swap(self, v)

    def begin(self) -> "std::vector< double >::iterator":
        r"""begin(DoubleVector self) -> std::vector< double >::iterator"""
        return _fetpapi.DoubleVector_begin(self)

    def end(self) -> "std::vector< double >::iterator":
        r"""end(DoubleVector self) -> std::vector< double >::iterator"""
        return _fetpapi.DoubleVector_end(self)

    def rbegin(self) -> "std::vector< double >::reverse_iterator":
        r"""rbegin(DoubleVector self) -> std::vector< double >::reverse_iterator"""
        return _fetpapi.DoubleVector_rbegin(self)

    def rend(self) -> "std::vector< double >::reverse_iterator":
        r"""rend(DoubleVector self) -> std::vector< double >::reverse_iterator"""
        return _fetpapi.DoubleVector_rend(self)

    def clear(self) -> "void":
        r"""clear(DoubleVector self)"""
        return _fetpapi.DoubleVector_clear(self)

    def get_allocator(self) -> "std::vector< double >::allocator_type":
        r"""get_allocator(DoubleVector self) -> std::vector< double >::allocator_type"""
        return _fetpapi.DoubleVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(DoubleVector self)"""
        return _fetpapi.DoubleVector_pop_back(self)

    def erase(self, *args) -> "std::vector< double >::iterator":
        r"""
        erase(DoubleVector self, std::vector< double >::iterator pos) -> std::vector< double >::iterator
        erase(DoubleVector self, std::vector< double >::iterator first, std::vector< double >::iterator last) -> std::vector< double >::iterator
        """
        return _fetpapi.DoubleVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(DoubleVector self) -> DoubleVector
        __init__(DoubleVector self, DoubleVector other) -> DoubleVector
        __init__(DoubleVector self, std::vector< double >::size_type size) -> DoubleVector
        __init__(DoubleVector self, std::vector< double >::size_type size, std::vector< double >::value_type const & value) -> DoubleVector
        """
        _fetpapi.DoubleVector_swiginit(self, _fetpapi.new_DoubleVector(*args))

    def push_back(self, x: "std::vector< double >::value_type const &") -> "void":
        r"""push_back(DoubleVector self, std::vector< double >::value_type const & x)"""
        return _fetpapi.DoubleVector_push_back(self, x)

    def front(self) -> "std::vector< double >::value_type const &":
        r"""front(DoubleVector self) -> std::vector< double >::value_type const &"""
        return _fetpapi.DoubleVector_front(self)

    def back(self) -> "std::vector< double >::value_type const &":
        r"""back(DoubleVector self) -> std::vector< double >::value_type const &"""
        return _fetpapi.DoubleVector_back(self)

    def assign(self, n: "std::vector< double >::size_type", x: "std::vector< double >::value_type const &") -> "void":
        r"""assign(DoubleVector self, std::vector< double >::size_type n, std::vector< double >::value_type const & x)"""
        return _fetpapi.DoubleVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(DoubleVector self, std::vector< double >::size_type new_size)
        resize(DoubleVector self, std::vector< double >::size_type new_size, std::vector< double >::value_type const & x)
        """
        return _fetpapi.DoubleVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(DoubleVector self, std::vector< double >::iterator pos, std::vector< double >::value_type const & x) -> std::vector< double >::iterator
        insert(DoubleVector self, std::vector< double >::iterator pos, std::vector< double >::size_type n, std::vector< double >::value_type const & x)
        """
        return _fetpapi.DoubleVector_insert(self, *args)

    def reserve(self, n: "std::vector< double >::size_type") -> "void":
        r"""reserve(DoubleVector self, std::vector< double >::size_type n)"""
        return _fetpapi.DoubleVector_reserve(self, n)

    def capacity(self) -> "std::vector< double >::size_type":
        r"""capacity(DoubleVector self) -> std::vector< double >::size_type"""
        return _fetpapi.DoubleVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_DoubleVector

# Register DoubleVector in _fetpapi:
_fetpapi.DoubleVector_swigregister(DoubleVector)
class BoolVector(object):
    r"""Proxy of C++ std::vector< bool > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(BoolVector self) -> SwigPyIterator"""
        return _fetpapi.BoolVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(BoolVector self) -> bool"""
        return _fetpapi.BoolVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(BoolVector self) -> bool"""
        return _fetpapi.BoolVector___bool__(self)

    def __len__(self) -> "std::vector< bool >::size_type":
        r"""__len__(BoolVector self) -> std::vector< bool >::size_type"""
        return _fetpapi.BoolVector___len__(self)

    def __getslice__(self, i: "std::vector< bool >::difference_type", j: "std::vector< bool >::difference_type") -> "std::vector< bool,std::allocator< bool > > *":
        r"""__getslice__(BoolVector self, std::vector< bool >::difference_type i, std::vector< bool >::difference_type j) -> BoolVector"""
        return _fetpapi.BoolVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(BoolVector self, std::vector< bool >::difference_type i, std::vector< bool >::difference_type j)
        __setslice__(BoolVector self, std::vector< bool >::difference_type i, std::vector< bool >::difference_type j, BoolVector v)
        """
        return _fetpapi.BoolVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< bool >::difference_type", j: "std::vector< bool >::difference_type") -> "void":
        r"""__delslice__(BoolVector self, std::vector< bool >::difference_type i, std::vector< bool >::difference_type j)"""
        return _fetpapi.BoolVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(BoolVector self, std::vector< bool >::difference_type i)
        __delitem__(BoolVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.BoolVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< bool >::value_type":
        r"""
        __getitem__(BoolVector self, SWIGPY_SLICEOBJECT * slice) -> BoolVector
        __getitem__(BoolVector self, std::vector< bool >::difference_type i) -> std::vector< bool >::value_type
        """
        return _fetpapi.BoolVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(BoolVector self, SWIGPY_SLICEOBJECT * slice, BoolVector v)
        __setitem__(BoolVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(BoolVector self, std::vector< bool >::difference_type i, std::vector< bool >::value_type x)
        """
        return _fetpapi.BoolVector___setitem__(self, *args)

    def pop(self) -> "std::vector< bool >::value_type":
        r"""pop(BoolVector self) -> std::vector< bool >::value_type"""
        return _fetpapi.BoolVector_pop(self)

    def append(self, x: "std::vector< bool >::value_type") -> "void":
        r"""append(BoolVector self, std::vector< bool >::value_type x)"""
        return _fetpapi.BoolVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(BoolVector self) -> bool"""
        return _fetpapi.BoolVector_empty(self)

    def size(self) -> "std::vector< bool >::size_type":
        r"""size(BoolVector self) -> std::vector< bool >::size_type"""
        return _fetpapi.BoolVector_size(self)

    def swap(self, v: "BoolVector") -> "void":
        r"""swap(BoolVector self, BoolVector v)"""
        return _fetpapi.BoolVector_swap(self, v)

    def begin(self) -> "std::vector< bool >::iterator":
        r"""begin(BoolVector self) -> std::vector< bool >::iterator"""
        return _fetpapi.BoolVector_begin(self)

    def end(self) -> "std::vector< bool >::iterator":
        r"""end(BoolVector self) -> std::vector< bool >::iterator"""
        return _fetpapi.BoolVector_end(self)

    def rbegin(self) -> "std::vector< bool >::reverse_iterator":
        r"""rbegin(BoolVector self) -> std::vector< bool >::reverse_iterator"""
        return _fetpapi.BoolVector_rbegin(self)

    def rend(self) -> "std::vector< bool >::reverse_iterator":
        r"""rend(BoolVector self) -> std::vector< bool >::reverse_iterator"""
        return _fetpapi.BoolVector_rend(self)

    def clear(self) -> "void":
        r"""clear(BoolVector self)"""
        return _fetpapi.BoolVector_clear(self)

    def get_allocator(self) -> "std::vector< bool >::allocator_type":
        r"""get_allocator(BoolVector self) -> std::vector< bool >::allocator_type"""
        return _fetpapi.BoolVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(BoolVector self)"""
        return _fetpapi.BoolVector_pop_back(self)

    def erase(self, *args) -> "std::vector< bool >::iterator":
        r"""
        erase(BoolVector self, std::vector< bool >::iterator pos) -> std::vector< bool >::iterator
        erase(BoolVector self, std::vector< bool >::iterator first, std::vector< bool >::iterator last) -> std::vector< bool >::iterator
        """
        return _fetpapi.BoolVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(BoolVector self) -> BoolVector
        __init__(BoolVector self, BoolVector other) -> BoolVector
        __init__(BoolVector self, std::vector< bool >::size_type size) -> BoolVector
        __init__(BoolVector self, std::vector< bool >::size_type size, std::vector< bool >::value_type value) -> BoolVector
        """
        _fetpapi.BoolVector_swiginit(self, _fetpapi.new_BoolVector(*args))

    def push_back(self, x: "std::vector< bool >::value_type") -> "void":
        r"""push_back(BoolVector self, std::vector< bool >::value_type x)"""
        return _fetpapi.BoolVector_push_back(self, x)

    def front(self) -> "std::vector< bool >::value_type":
        r"""front(BoolVector self) -> std::vector< bool >::value_type"""
        return _fetpapi.BoolVector_front(self)

    def back(self) -> "std::vector< bool >::value_type":
        r"""back(BoolVector self) -> std::vector< bool >::value_type"""
        return _fetpapi.BoolVector_back(self)

    def assign(self, n: "std::vector< bool >::size_type", x: "std::vector< bool >::value_type") -> "void":
        r"""assign(BoolVector self, std::vector< bool >::size_type n, std::vector< bool >::value_type x)"""
        return _fetpapi.BoolVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(BoolVector self, std::vector< bool >::size_type new_size)
        resize(BoolVector self, std::vector< bool >::size_type new_size, std::vector< bool >::value_type x)
        """
        return _fetpapi.BoolVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(BoolVector self, std::vector< bool >::iterator pos, std::vector< bool >::value_type x) -> std::vector< bool >::iterator
        insert(BoolVector self, std::vector< bool >::iterator pos, std::vector< bool >::size_type n, std::vector< bool >::value_type x)
        """
        return _fetpapi.BoolVector_insert(self, *args)

    def reserve(self, n: "std::vector< bool >::size_type") -> "void":
        r"""reserve(BoolVector self, std::vector< bool >::size_type n)"""
        return _fetpapi.BoolVector_reserve(self, n)

    def capacity(self) -> "std::vector< bool >::size_type":
        r"""capacity(BoolVector self) -> std::vector< bool >::size_type"""
        return _fetpapi.BoolVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_BoolVector

# Register BoolVector in _fetpapi:
_fetpapi.BoolVector_swigregister(BoolVector)
class MapStringString(object):
    r"""Proxy of C++ std::map< std::string,std::string > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringString self) -> SwigPyIterator"""
        return _fetpapi.MapStringString_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringString self) -> bool"""
        return _fetpapi.MapStringString___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringString self) -> bool"""
        return _fetpapi.MapStringString___bool__(self)

    def __len__(self) -> "std::map< std::string,std::string >::size_type":
        r"""__len__(MapStringString self) -> std::map< std::string,std::string >::size_type"""
        return _fetpapi.MapStringString___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,std::string >::key_type const &") -> "std::map< std::string,std::string >::mapped_type const &":
        r"""__getitem__(MapStringString self, std::map< std::string,std::string >::key_type const & key) -> std::map< std::string,std::string >::mapped_type const &"""
        return _fetpapi.MapStringString___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,std::string >::key_type const &") -> "void":
        r"""__delitem__(MapStringString self, std::map< std::string,std::string >::key_type const & key)"""
        return _fetpapi.MapStringString___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,std::string >::key_type const &") -> "bool":
        r"""has_key(MapStringString self, std::map< std::string,std::string >::key_type const & key) -> bool"""
        return _fetpapi.MapStringString_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringString self) -> PyObject *"""
        return _fetpapi.MapStringString_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringString self) -> PyObject *"""
        return _fetpapi.MapStringString_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringString self) -> PyObject *"""
        return _fetpapi.MapStringString_items(self)

    def __contains__(self, key: "std::map< std::string,std::string >::key_type const &") -> "bool":
        r"""__contains__(MapStringString self, std::map< std::string,std::string >::key_type const & key) -> bool"""
        return _fetpapi.MapStringString___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringString self) -> SwigPyIterator"""
        return _fetpapi.MapStringString_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringString self) -> SwigPyIterator"""
        return _fetpapi.MapStringString_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringString self, std::map< std::string,std::string >::key_type const & key)
        __setitem__(MapStringString self, std::map< std::string,std::string >::key_type const & key, std::map< std::string,std::string >::mapped_type const & x)
        """
        return _fetpapi.MapStringString___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringString self) -> PyObject *"""
        return _fetpapi.MapStringString_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringString self, std::less< std::string > const & other) -> MapStringString
        __init__(MapStringString self) -> MapStringString
        __init__(MapStringString self, MapStringString other) -> MapStringString
        """
        _fetpapi.MapStringString_swiginit(self, _fetpapi.new_MapStringString(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringString self) -> bool"""
        return _fetpapi.MapStringString_empty(self)

    def size(self) -> "std::map< std::string,std::string >::size_type":
        r"""size(MapStringString self) -> std::map< std::string,std::string >::size_type"""
        return _fetpapi.MapStringString_size(self)

    def swap(self, v: "MapStringString") -> "void":
        r"""swap(MapStringString self, MapStringString v)"""
        return _fetpapi.MapStringString_swap(self, v)

    def begin(self) -> "std::map< std::string,std::string >::iterator":
        r"""begin(MapStringString self) -> std::map< std::string,std::string >::iterator"""
        return _fetpapi.MapStringString_begin(self)

    def end(self) -> "std::map< std::string,std::string >::iterator":
        r"""end(MapStringString self) -> std::map< std::string,std::string >::iterator"""
        return _fetpapi.MapStringString_end(self)

    def rbegin(self) -> "std::map< std::string,std::string >::reverse_iterator":
        r"""rbegin(MapStringString self) -> std::map< std::string,std::string >::reverse_iterator"""
        return _fetpapi.MapStringString_rbegin(self)

    def rend(self) -> "std::map< std::string,std::string >::reverse_iterator":
        r"""rend(MapStringString self) -> std::map< std::string,std::string >::reverse_iterator"""
        return _fetpapi.MapStringString_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringString self)"""
        return _fetpapi.MapStringString_clear(self)

    def get_allocator(self) -> "std::map< std::string,std::string >::allocator_type":
        r"""get_allocator(MapStringString self) -> std::map< std::string,std::string >::allocator_type"""
        return _fetpapi.MapStringString_get_allocator(self)

    def count(self, x: "std::map< std::string,std::string >::key_type const &") -> "std::map< std::string,std::string >::size_type":
        r"""count(MapStringString self, std::map< std::string,std::string >::key_type const & x) -> std::map< std::string,std::string >::size_type"""
        return _fetpapi.MapStringString_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringString self, std::map< std::string,std::string >::key_type const & x) -> std::map< std::string,std::string >::size_type
        erase(MapStringString self, std::map< std::string,std::string >::iterator position)
        erase(MapStringString self, std::map< std::string,std::string >::iterator first, std::map< std::string,std::string >::iterator last)
        """
        return _fetpapi.MapStringString_erase(self, *args)

    def find(self, x: "std::map< std::string,std::string >::key_type const &") -> "std::map< std::string,std::string >::iterator":
        r"""find(MapStringString self, std::map< std::string,std::string >::key_type const & x) -> std::map< std::string,std::string >::iterator"""
        return _fetpapi.MapStringString_find(self, x)

    def lower_bound(self, x: "std::map< std::string,std::string >::key_type const &") -> "std::map< std::string,std::string >::iterator":
        r"""lower_bound(MapStringString self, std::map< std::string,std::string >::key_type const & x) -> std::map< std::string,std::string >::iterator"""
        return _fetpapi.MapStringString_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,std::string >::key_type const &") -> "std::map< std::string,std::string >::iterator":
        r"""upper_bound(MapStringString self, std::map< std::string,std::string >::key_type const & x) -> std::map< std::string,std::string >::iterator"""
        return _fetpapi.MapStringString_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringString

# Register MapStringString in _fetpapi:
_fetpapi.MapStringString_swigregister(MapStringString)
class SupportedDataObject(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::SupportedDataObject class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    qualifiedType: "std::string" = property(_fetpapi.SupportedDataObject_qualifiedType_get, _fetpapi.SupportedDataObject_qualifiedType_set, doc=r"""qualifiedType : std::string""")
    dataObjectCapabilities: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataValue > > >" = property(_fetpapi.SupportedDataObject_dataObjectCapabilities_get, _fetpapi.SupportedDataObject_dataObjectCapabilities_set, doc=r"""dataObjectCapabilities : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataValue)>)>)>""")

    def __init__(self):
        r"""__init__(SupportedDataObject self) -> SupportedDataObject"""
        _fetpapi.SupportedDataObject_swiginit(self, _fetpapi.new_SupportedDataObject())
    __swig_destroy__ = _fetpapi.delete_SupportedDataObject

# Register SupportedDataObject in _fetpapi:
_fetpapi.SupportedDataObject_swigregister(SupportedDataObject)
class Uuid(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Uuid class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    array: "std::array< uint8_t,16 >" = property(_fetpapi.Uuid_array_get, _fetpapi.Uuid_array_set, doc=r"""array : std::array<(uint8_t,16)>""")

    def __init__(self):
        r"""__init__(Uuid self) -> Uuid"""
        _fetpapi.Uuid_swiginit(self, _fetpapi.new_Uuid())
    __swig_destroy__ = _fetpapi.delete_Uuid

# Register Uuid in _fetpapi:
_fetpapi.Uuid_swigregister(Uuid)
class Version(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Version class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    major: "int32_t" = property(_fetpapi.Version_major_get, _fetpapi.Version_major_set, doc=r"""major : int32_t""")
    minor: "int32_t" = property(_fetpapi.Version_minor_get, _fetpapi.Version_minor_set, doc=r"""minor : int32_t""")
    revision: "int32_t" = property(_fetpapi.Version_revision_get, _fetpapi.Version_revision_set, doc=r"""revision : int32_t""")
    patch: "int32_t" = property(_fetpapi.Version_patch_get, _fetpapi.Version_patch_set, doc=r"""patch : int32_t""")

    def __init__(self):
        r"""__init__(Version self) -> Version"""
        _fetpapi.Version_swiginit(self, _fetpapi.new_Version())
    __swig_destroy__ = _fetpapi.delete_Version

# Register Version in _fetpapi:
_fetpapi.Version_swigregister(Version)
class SupportedProtocol(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::SupportedProtocol class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    protocol: "int32_t" = property(_fetpapi.SupportedProtocol_protocol_get, _fetpapi.SupportedProtocol_protocol_set, doc=r"""protocol : int32_t""")
    protocolVersion: "Energistics::Etp::v12::Datatypes::Version" = property(_fetpapi.SupportedProtocol_protocolVersion_get, _fetpapi.SupportedProtocol_protocolVersion_set, doc=r"""protocolVersion : Energistics::Etp::v12::Datatypes::Version""")
    role: "std::string" = property(_fetpapi.SupportedProtocol_role_get, _fetpapi.SupportedProtocol_role_set, doc=r"""role : std::string""")

    def __init__(self):
        r"""__init__(SupportedProtocol self) -> SupportedProtocol"""
        _fetpapi.SupportedProtocol_swiginit(self, _fetpapi.new_SupportedProtocol())
    __swig_destroy__ = _fetpapi.delete_SupportedProtocol

# Register SupportedProtocol in _fetpapi:
_fetpapi.SupportedProtocol_swigregister(SupportedProtocol)
class ArrayOfBoolean(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::ArrayOfBoolean class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    values: "std::vector< bool,std::allocator< bool > >" = property(_fetpapi.ArrayOfBoolean_values_get, _fetpapi.ArrayOfBoolean_values_set, doc=r"""values : std::vector<(bool,std::allocator<(bool)>)>""")

    def __init__(self):
        r"""__init__(ArrayOfBoolean self) -> ArrayOfBoolean"""
        _fetpapi.ArrayOfBoolean_swiginit(self, _fetpapi.new_ArrayOfBoolean())
    __swig_destroy__ = _fetpapi.delete_ArrayOfBoolean

# Register ArrayOfBoolean in _fetpapi:
_fetpapi.ArrayOfBoolean_swigregister(ArrayOfBoolean)
class ArrayOfInt(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::ArrayOfInt class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    values: "std::vector< int32_t,std::allocator< int32_t > >" = property(_fetpapi.ArrayOfInt_values_get, _fetpapi.ArrayOfInt_values_set, doc=r"""values : std::vector<(int32_t,std::allocator<(int32_t)>)>""")

    def __init__(self):
        r"""__init__(ArrayOfInt self) -> ArrayOfInt"""
        _fetpapi.ArrayOfInt_swiginit(self, _fetpapi.new_ArrayOfInt())
    __swig_destroy__ = _fetpapi.delete_ArrayOfInt

# Register ArrayOfInt in _fetpapi:
_fetpapi.ArrayOfInt_swigregister(ArrayOfInt)
class ArrayOfLong(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::ArrayOfLong class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    values: "std::vector< int64_t,std::allocator< int64_t > >" = property(_fetpapi.ArrayOfLong_values_get, _fetpapi.ArrayOfLong_values_set, doc=r"""values : std::vector<(int64_t,std::allocator<(int64_t)>)>""")

    def __init__(self):
        r"""__init__(ArrayOfLong self) -> ArrayOfLong"""
        _fetpapi.ArrayOfLong_swiginit(self, _fetpapi.new_ArrayOfLong())
    __swig_destroy__ = _fetpapi.delete_ArrayOfLong

# Register ArrayOfLong in _fetpapi:
_fetpapi.ArrayOfLong_swigregister(ArrayOfLong)
class ArrayOfFloat(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::ArrayOfFloat class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    values: "std::vector< float,std::allocator< float > >" = property(_fetpapi.ArrayOfFloat_values_get, _fetpapi.ArrayOfFloat_values_set, doc=r"""values : std::vector<(float,std::allocator<(float)>)>""")

    def __init__(self):
        r"""__init__(ArrayOfFloat self) -> ArrayOfFloat"""
        _fetpapi.ArrayOfFloat_swiginit(self, _fetpapi.new_ArrayOfFloat())
    __swig_destroy__ = _fetpapi.delete_ArrayOfFloat

# Register ArrayOfFloat in _fetpapi:
_fetpapi.ArrayOfFloat_swigregister(ArrayOfFloat)
class ArrayOfDouble(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::ArrayOfDouble class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    values: "std::vector< double,std::allocator< double > >" = property(_fetpapi.ArrayOfDouble_values_get, _fetpapi.ArrayOfDouble_values_set, doc=r"""values : std::vector<(double,std::allocator<(double)>)>""")

    def __init__(self):
        r"""__init__(ArrayOfDouble self) -> ArrayOfDouble"""
        _fetpapi.ArrayOfDouble_swiginit(self, _fetpapi.new_ArrayOfDouble())
    __swig_destroy__ = _fetpapi.delete_ArrayOfDouble

# Register ArrayOfDouble in _fetpapi:
_fetpapi.ArrayOfDouble_swigregister(ArrayOfDouble)
class ArrayOfString(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::ArrayOfString class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    values: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.ArrayOfString_values_get, _fetpapi.ArrayOfString_values_set, doc=r"""values : std::vector<(std::string,std::allocator<(std::string)>)>""")

    def __init__(self):
        r"""__init__(ArrayOfString self) -> ArrayOfString"""
        _fetpapi.ArrayOfString_swiginit(self, _fetpapi.new_ArrayOfString())
    __swig_destroy__ = _fetpapi.delete_ArrayOfString

# Register ArrayOfString in _fetpapi:
_fetpapi.ArrayOfString_swigregister(ArrayOfString)
class DataValueitem_t(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataValueitem_t class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def idx(self) -> "size_t":
        r"""idx(DataValueitem_t self) -> size_t"""
        return _fetpapi.DataValueitem_t_idx(self)

    def is_null(self) -> "bool":
        r"""is_null(DataValueitem_t self) -> bool"""
        return _fetpapi.DataValueitem_t_is_null(self)

    def set_null(self) -> "void":
        r"""set_null(DataValueitem_t self)"""
        return _fetpapi.DataValueitem_t_set_null(self)

    def get_boolean(self) -> "bool":
        r"""get_boolean(DataValueitem_t self) -> bool"""
        return _fetpapi.DataValueitem_t_get_boolean(self)

    def set_boolean(self, v: "bool const &") -> "void":
        r"""set_boolean(DataValueitem_t self, bool const & v)"""
        return _fetpapi.DataValueitem_t_set_boolean(self, v)

    def get_int(self) -> "int32_t":
        r"""get_int(DataValueitem_t self) -> int32_t"""
        return _fetpapi.DataValueitem_t_get_int(self)

    def set_int(self, v: "int32_t const &") -> "void":
        r"""set_int(DataValueitem_t self, int32_t const & v)"""
        return _fetpapi.DataValueitem_t_set_int(self, v)

    def get_long(self) -> "int64_t":
        r"""get_long(DataValueitem_t self) -> int64_t"""
        return _fetpapi.DataValueitem_t_get_long(self)

    def set_long(self, v: "int64_t const &") -> "void":
        r"""set_long(DataValueitem_t self, int64_t const & v)"""
        return _fetpapi.DataValueitem_t_set_long(self, v)

    def get_float(self) -> "float":
        r"""get_float(DataValueitem_t self) -> float"""
        return _fetpapi.DataValueitem_t_get_float(self)

    def set_float(self, v: "float const &") -> "void":
        r"""set_float(DataValueitem_t self, float const & v)"""
        return _fetpapi.DataValueitem_t_set_float(self, v)

    def get_double(self) -> "double":
        r"""get_double(DataValueitem_t self) -> double"""
        return _fetpapi.DataValueitem_t_get_double(self)

    def set_double(self, v: "double const &") -> "void":
        r"""set_double(DataValueitem_t self, double const & v)"""
        return _fetpapi.DataValueitem_t_set_double(self, v)

    def get_string(self) -> "std::string":
        r"""get_string(DataValueitem_t self) -> std::string"""
        return _fetpapi.DataValueitem_t_get_string(self)

    def set_string(self, v: "std::string const &") -> "void":
        r"""set_string(DataValueitem_t self, std::string const & v)"""
        return _fetpapi.DataValueitem_t_set_string(self, v)

    def get_ArrayOfBoolean(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfBoolean":
        r"""get_ArrayOfBoolean(DataValueitem_t self) -> ArrayOfBoolean"""
        return _fetpapi.DataValueitem_t_get_ArrayOfBoolean(self)

    def set_ArrayOfBoolean(self, v: "ArrayOfBoolean") -> "void":
        r"""set_ArrayOfBoolean(DataValueitem_t self, ArrayOfBoolean v)"""
        return _fetpapi.DataValueitem_t_set_ArrayOfBoolean(self, v)

    def get_ArrayOfInt(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfInt":
        r"""get_ArrayOfInt(DataValueitem_t self) -> ArrayOfInt"""
        return _fetpapi.DataValueitem_t_get_ArrayOfInt(self)

    def set_ArrayOfInt(self, v: "ArrayOfInt") -> "void":
        r"""set_ArrayOfInt(DataValueitem_t self, ArrayOfInt v)"""
        return _fetpapi.DataValueitem_t_set_ArrayOfInt(self, v)

    def get_ArrayOfLong(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfLong":
        r"""get_ArrayOfLong(DataValueitem_t self) -> ArrayOfLong"""
        return _fetpapi.DataValueitem_t_get_ArrayOfLong(self)

    def set_ArrayOfLong(self, v: "ArrayOfLong") -> "void":
        r"""set_ArrayOfLong(DataValueitem_t self, ArrayOfLong v)"""
        return _fetpapi.DataValueitem_t_set_ArrayOfLong(self, v)

    def get_ArrayOfFloat(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfFloat":
        r"""get_ArrayOfFloat(DataValueitem_t self) -> ArrayOfFloat"""
        return _fetpapi.DataValueitem_t_get_ArrayOfFloat(self)

    def set_ArrayOfFloat(self, v: "ArrayOfFloat") -> "void":
        r"""set_ArrayOfFloat(DataValueitem_t self, ArrayOfFloat v)"""
        return _fetpapi.DataValueitem_t_set_ArrayOfFloat(self, v)

    def get_ArrayOfDouble(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfDouble":
        r"""get_ArrayOfDouble(DataValueitem_t self) -> ArrayOfDouble"""
        return _fetpapi.DataValueitem_t_get_ArrayOfDouble(self)

    def set_ArrayOfDouble(self, v: "ArrayOfDouble") -> "void":
        r"""set_ArrayOfDouble(DataValueitem_t self, ArrayOfDouble v)"""
        return _fetpapi.DataValueitem_t_set_ArrayOfDouble(self, v)

    def get_ArrayOfString(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfString":
        r"""get_ArrayOfString(DataValueitem_t self) -> ArrayOfString"""
        return _fetpapi.DataValueitem_t_get_ArrayOfString(self)

    def set_ArrayOfString(self, v: "ArrayOfString") -> "void":
        r"""set_ArrayOfString(DataValueitem_t self, ArrayOfString v)"""
        return _fetpapi.DataValueitem_t_set_ArrayOfString(self, v)

    def get_bytes(self) -> "std::string":
        r"""get_bytes(DataValueitem_t self) -> std::string"""
        return _fetpapi.DataValueitem_t_get_bytes(self)

    def set_bytes(self, v: "std::string const &") -> "void":
        r"""set_bytes(DataValueitem_t self, std::string const & v)"""
        return _fetpapi.DataValueitem_t_set_bytes(self, v)

    def __init__(self):
        r"""__init__(DataValueitem_t self) -> DataValueitem_t"""
        _fetpapi.DataValueitem_t_swiginit(self, _fetpapi.new_DataValueitem_t())
    __swig_destroy__ = _fetpapi.delete_DataValueitem_t

# Register DataValueitem_t in _fetpapi:
_fetpapi.DataValueitem_t_swigregister(DataValueitem_t)
class DataValue(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataValue class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    item: "Energistics::Etp::v12::Datatypes::DataValueitem_t" = property(_fetpapi.DataValue_item_get, _fetpapi.DataValue_item_set, doc=r"""item : Energistics::Etp::v12::Datatypes::DataValueitem_t""")

    def __init__(self):
        r"""__init__(DataValue self) -> DataValue"""
        _fetpapi.DataValue_swiginit(self, _fetpapi.new_DataValue())
    __swig_destroy__ = _fetpapi.delete_DataValue

# Register DataValue in _fetpapi:
_fetpapi.DataValue_swigregister(DataValue)
class ErrorInfo(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::ErrorInfo class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    message: "std::string" = property(_fetpapi.ErrorInfo_message_get, _fetpapi.ErrorInfo_message_set, doc=r"""message : std::string""")
    code: "int32_t" = property(_fetpapi.ErrorInfo_code_get, _fetpapi.ErrorInfo_code_set, doc=r"""code : int32_t""")

    def __init__(self):
        r"""__init__(ErrorInfo self) -> ErrorInfo"""
        _fetpapi.ErrorInfo_swiginit(self, _fetpapi.new_ErrorInfo())
    __swig_destroy__ = _fetpapi.delete_ErrorInfo

# Register ErrorInfo in _fetpapi:
_fetpapi.ErrorInfo_swigregister(ErrorInfo)
class AnyArrayitem_t(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::AnyArrayitem_t class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def idx(self) -> "size_t":
        r"""idx(AnyArrayitem_t self) -> size_t"""
        return _fetpapi.AnyArrayitem_t_idx(self)

    def get_ArrayOfBoolean(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfBoolean":
        r"""get_ArrayOfBoolean(AnyArrayitem_t self) -> ArrayOfBoolean"""
        return _fetpapi.AnyArrayitem_t_get_ArrayOfBoolean(self)

    def set_ArrayOfBoolean(self, v: "ArrayOfBoolean") -> "void":
        r"""set_ArrayOfBoolean(AnyArrayitem_t self, ArrayOfBoolean v)"""
        return _fetpapi.AnyArrayitem_t_set_ArrayOfBoolean(self, v)

    def get_ArrayOfInt(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfInt":
        r"""get_ArrayOfInt(AnyArrayitem_t self) -> ArrayOfInt"""
        return _fetpapi.AnyArrayitem_t_get_ArrayOfInt(self)

    def set_ArrayOfInt(self, v: "ArrayOfInt") -> "void":
        r"""set_ArrayOfInt(AnyArrayitem_t self, ArrayOfInt v)"""
        return _fetpapi.AnyArrayitem_t_set_ArrayOfInt(self, v)

    def get_ArrayOfLong(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfLong":
        r"""get_ArrayOfLong(AnyArrayitem_t self) -> ArrayOfLong"""
        return _fetpapi.AnyArrayitem_t_get_ArrayOfLong(self)

    def set_ArrayOfLong(self, v: "ArrayOfLong") -> "void":
        r"""set_ArrayOfLong(AnyArrayitem_t self, ArrayOfLong v)"""
        return _fetpapi.AnyArrayitem_t_set_ArrayOfLong(self, v)

    def get_ArrayOfFloat(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfFloat":
        r"""get_ArrayOfFloat(AnyArrayitem_t self) -> ArrayOfFloat"""
        return _fetpapi.AnyArrayitem_t_get_ArrayOfFloat(self)

    def set_ArrayOfFloat(self, v: "ArrayOfFloat") -> "void":
        r"""set_ArrayOfFloat(AnyArrayitem_t self, ArrayOfFloat v)"""
        return _fetpapi.AnyArrayitem_t_set_ArrayOfFloat(self, v)

    def get_ArrayOfDouble(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfDouble":
        r"""get_ArrayOfDouble(AnyArrayitem_t self) -> ArrayOfDouble"""
        return _fetpapi.AnyArrayitem_t_get_ArrayOfDouble(self)

    def set_ArrayOfDouble(self, v: "ArrayOfDouble") -> "void":
        r"""set_ArrayOfDouble(AnyArrayitem_t self, ArrayOfDouble v)"""
        return _fetpapi.AnyArrayitem_t_set_ArrayOfDouble(self, v)

    def get_ArrayOfString(self) -> "Energistics::Etp::v12::Datatypes::ArrayOfString":
        r"""get_ArrayOfString(AnyArrayitem_t self) -> ArrayOfString"""
        return _fetpapi.AnyArrayitem_t_get_ArrayOfString(self)

    def set_ArrayOfString(self, v: "ArrayOfString") -> "void":
        r"""set_ArrayOfString(AnyArrayitem_t self, ArrayOfString v)"""
        return _fetpapi.AnyArrayitem_t_set_ArrayOfString(self, v)

    def get_bytes(self) -> "std::string":
        r"""get_bytes(AnyArrayitem_t self) -> std::string"""
        return _fetpapi.AnyArrayitem_t_get_bytes(self)

    def set_bytes(self, v: "std::string const &") -> "void":
        r"""set_bytes(AnyArrayitem_t self, std::string const & v)"""
        return _fetpapi.AnyArrayitem_t_set_bytes(self, v)

    def __init__(self):
        r"""__init__(AnyArrayitem_t self) -> AnyArrayitem_t"""
        _fetpapi.AnyArrayitem_t_swiginit(self, _fetpapi.new_AnyArrayitem_t())
    __swig_destroy__ = _fetpapi.delete_AnyArrayitem_t

# Register AnyArrayitem_t in _fetpapi:
_fetpapi.AnyArrayitem_t_swigregister(AnyArrayitem_t)
class AnyArray(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::AnyArray class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    item: "Energistics::Etp::v12::Datatypes::AnyArrayitem_t" = property(_fetpapi.AnyArray_item_get, _fetpapi.AnyArray_item_set, doc=r"""item : Energistics::Etp::v12::Datatypes::AnyArrayitem_t""")

    def __init__(self):
        r"""__init__(AnyArray self) -> AnyArray"""
        _fetpapi.AnyArray_swiginit(self, _fetpapi.new_AnyArray())
    __swig_destroy__ = _fetpapi.delete_AnyArray

# Register AnyArray in _fetpapi:
_fetpapi.AnyArray_swigregister(AnyArray)
AnyArrayType_arrayOfBoolean = _fetpapi.AnyArrayType_arrayOfBoolean

AnyArrayType_arrayOfInt = _fetpapi.AnyArrayType_arrayOfInt

AnyArrayType_arrayOfLong = _fetpapi.AnyArrayType_arrayOfLong

AnyArrayType_arrayOfFloat = _fetpapi.AnyArrayType_arrayOfFloat

AnyArrayType_arrayOfDouble = _fetpapi.AnyArrayType_arrayOfDouble

AnyArrayType_arrayOfString = _fetpapi.AnyArrayType_arrayOfString

AnyArrayType_bytes = _fetpapi.AnyArrayType_bytes

AnyLogicalArrayType_arrayOfBoolean = _fetpapi.AnyLogicalArrayType_arrayOfBoolean

AnyLogicalArrayType_arrayOfInt8 = _fetpapi.AnyLogicalArrayType_arrayOfInt8

AnyLogicalArrayType_arrayOfUInt8 = _fetpapi.AnyLogicalArrayType_arrayOfUInt8

AnyLogicalArrayType_arrayOfInt16LE = _fetpapi.AnyLogicalArrayType_arrayOfInt16LE

AnyLogicalArrayType_arrayOfInt32LE = _fetpapi.AnyLogicalArrayType_arrayOfInt32LE

AnyLogicalArrayType_arrayOfInt64LE = _fetpapi.AnyLogicalArrayType_arrayOfInt64LE

AnyLogicalArrayType_arrayOfUInt16LE = _fetpapi.AnyLogicalArrayType_arrayOfUInt16LE

AnyLogicalArrayType_arrayOfUInt32LE = _fetpapi.AnyLogicalArrayType_arrayOfUInt32LE

AnyLogicalArrayType_arrayOfUInt64LE = _fetpapi.AnyLogicalArrayType_arrayOfUInt64LE

AnyLogicalArrayType_arrayOfFloat32LE = _fetpapi.AnyLogicalArrayType_arrayOfFloat32LE

AnyLogicalArrayType_arrayOfDouble64LE = _fetpapi.AnyLogicalArrayType_arrayOfDouble64LE

AnyLogicalArrayType_arrayOfInt16BE = _fetpapi.AnyLogicalArrayType_arrayOfInt16BE

AnyLogicalArrayType_arrayOfInt32BE = _fetpapi.AnyLogicalArrayType_arrayOfInt32BE

AnyLogicalArrayType_arrayOfInt64BE = _fetpapi.AnyLogicalArrayType_arrayOfInt64BE

AnyLogicalArrayType_arrayOfUInt16BE = _fetpapi.AnyLogicalArrayType_arrayOfUInt16BE

AnyLogicalArrayType_arrayOfUInt32BE = _fetpapi.AnyLogicalArrayType_arrayOfUInt32BE

AnyLogicalArrayType_arrayOfUInt64BE = _fetpapi.AnyLogicalArrayType_arrayOfUInt64BE

AnyLogicalArrayType_arrayOfFloat32BE = _fetpapi.AnyLogicalArrayType_arrayOfFloat32BE

AnyLogicalArrayType_arrayOfDouble64BE = _fetpapi.AnyLogicalArrayType_arrayOfDouble64BE

AnyLogicalArrayType_arrayOfString = _fetpapi.AnyLogicalArrayType_arrayOfString

AnyLogicalArrayType_arrayOfCustom = _fetpapi.AnyLogicalArrayType_arrayOfCustom

class SupportedDataObjectVector(object):
    r"""Proxy of C++ std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(SupportedDataObjectVector self) -> SwigPyIterator"""
        return _fetpapi.SupportedDataObjectVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(SupportedDataObjectVector self) -> bool"""
        return _fetpapi.SupportedDataObjectVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(SupportedDataObjectVector self) -> bool"""
        return _fetpapi.SupportedDataObjectVector___bool__(self)

    def __len__(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type":
        r"""__len__(SupportedDataObjectVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type"""
        return _fetpapi.SupportedDataObjectVector___len__(self)

    def __getslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type") -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject,std::allocator< Energistics::Etp::v12::Datatypes::SupportedDataObject > > *":
        r"""__getslice__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type j) -> SupportedDataObjectVector"""
        return _fetpapi.SupportedDataObjectVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type j)
        __setslice__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type j, SupportedDataObjectVector v)
        """
        return _fetpapi.SupportedDataObjectVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type") -> "void":
        r"""__delslice__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type j)"""
        return _fetpapi.SupportedDataObjectVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type i)
        __delitem__(SupportedDataObjectVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.SupportedDataObjectVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::value_type const &":
        r"""
        __getitem__(SupportedDataObjectVector self, SWIGPY_SLICEOBJECT * slice) -> SupportedDataObjectVector
        __getitem__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type i) -> SupportedDataObject
        """
        return _fetpapi.SupportedDataObjectVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(SupportedDataObjectVector self, SWIGPY_SLICEOBJECT * slice, SupportedDataObjectVector v)
        __setitem__(SupportedDataObjectVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::difference_type i, SupportedDataObject x)
        """
        return _fetpapi.SupportedDataObjectVector___setitem__(self, *args)

    def pop(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::value_type":
        r"""pop(SupportedDataObjectVector self) -> SupportedDataObject"""
        return _fetpapi.SupportedDataObjectVector_pop(self)

    def append(self, x: "SupportedDataObject") -> "void":
        r"""append(SupportedDataObjectVector self, SupportedDataObject x)"""
        return _fetpapi.SupportedDataObjectVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(SupportedDataObjectVector self) -> bool"""
        return _fetpapi.SupportedDataObjectVector_empty(self)

    def size(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type":
        r"""size(SupportedDataObjectVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type"""
        return _fetpapi.SupportedDataObjectVector_size(self)

    def swap(self, v: "SupportedDataObjectVector") -> "void":
        r"""swap(SupportedDataObjectVector self, SupportedDataObjectVector v)"""
        return _fetpapi.SupportedDataObjectVector_swap(self, v)

    def begin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator":
        r"""begin(SupportedDataObjectVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator"""
        return _fetpapi.SupportedDataObjectVector_begin(self)

    def end(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator":
        r"""end(SupportedDataObjectVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator"""
        return _fetpapi.SupportedDataObjectVector_end(self)

    def rbegin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::reverse_iterator":
        r"""rbegin(SupportedDataObjectVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::reverse_iterator"""
        return _fetpapi.SupportedDataObjectVector_rbegin(self)

    def rend(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::reverse_iterator":
        r"""rend(SupportedDataObjectVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::reverse_iterator"""
        return _fetpapi.SupportedDataObjectVector_rend(self)

    def clear(self) -> "void":
        r"""clear(SupportedDataObjectVector self)"""
        return _fetpapi.SupportedDataObjectVector_clear(self)

    def get_allocator(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::allocator_type":
        r"""get_allocator(SupportedDataObjectVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::allocator_type"""
        return _fetpapi.SupportedDataObjectVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(SupportedDataObjectVector self)"""
        return _fetpapi.SupportedDataObjectVector_pop_back(self)

    def erase(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator":
        r"""
        erase(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator pos) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator
        erase(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator first, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator last) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator
        """
        return _fetpapi.SupportedDataObjectVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(SupportedDataObjectVector self) -> SupportedDataObjectVector
        __init__(SupportedDataObjectVector self, SupportedDataObjectVector other) -> SupportedDataObjectVector
        __init__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type size) -> SupportedDataObjectVector
        __init__(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type size, SupportedDataObject value) -> SupportedDataObjectVector
        """
        _fetpapi.SupportedDataObjectVector_swiginit(self, _fetpapi.new_SupportedDataObjectVector(*args))

    def push_back(self, x: "SupportedDataObject") -> "void":
        r"""push_back(SupportedDataObjectVector self, SupportedDataObject x)"""
        return _fetpapi.SupportedDataObjectVector_push_back(self, x)

    def front(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::value_type const &":
        r"""front(SupportedDataObjectVector self) -> SupportedDataObject"""
        return _fetpapi.SupportedDataObjectVector_front(self)

    def back(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::value_type const &":
        r"""back(SupportedDataObjectVector self) -> SupportedDataObject"""
        return _fetpapi.SupportedDataObjectVector_back(self)

    def assign(self, n: "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type", x: "SupportedDataObject") -> "void":
        r"""assign(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type n, SupportedDataObject x)"""
        return _fetpapi.SupportedDataObjectVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type new_size)
        resize(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type new_size, SupportedDataObject x)
        """
        return _fetpapi.SupportedDataObjectVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator pos, SupportedDataObject x) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator
        insert(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::iterator pos, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type n, SupportedDataObject x)
        """
        return _fetpapi.SupportedDataObjectVector_insert(self, *args)

    def reserve(self, n: "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type") -> "void":
        r"""reserve(SupportedDataObjectVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type n)"""
        return _fetpapi.SupportedDataObjectVector_reserve(self, n)

    def capacity(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type":
        r"""capacity(SupportedDataObjectVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject >::size_type"""
        return _fetpapi.SupportedDataObjectVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_SupportedDataObjectVector

# Register SupportedDataObjectVector in _fetpapi:
_fetpapi.SupportedDataObjectVector_swigregister(SupportedDataObjectVector)
class uint8_t16Array(object):
    r"""Proxy of C++ std::array< uint8_t,16 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(uint8_t16Array self) -> SwigPyIterator"""
        return _fetpapi.uint8_t16Array_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(uint8_t16Array self) -> bool"""
        return _fetpapi.uint8_t16Array___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(uint8_t16Array self) -> bool"""
        return _fetpapi.uint8_t16Array___bool__(self)

    def __len__(self) -> "std::array< unsigned char,16 >::size_type":
        r"""__len__(uint8_t16Array self) -> std::array< unsigned char,16 >::size_type"""
        return _fetpapi.uint8_t16Array___len__(self)

    def __getslice__(self, i: "std::array< unsigned char,16 >::difference_type", j: "std::array< unsigned char,16 >::difference_type") -> "std::array< unsigned char,16 > *":
        r"""__getslice__(uint8_t16Array self, std::array< unsigned char,16 >::difference_type i, std::array< unsigned char,16 >::difference_type j) -> uint8_t16Array"""
        return _fetpapi.uint8_t16Array___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(uint8_t16Array self, std::array< unsigned char,16 >::difference_type i, std::array< unsigned char,16 >::difference_type j)
        __setslice__(uint8_t16Array self, std::array< unsigned char,16 >::difference_type i, std::array< unsigned char,16 >::difference_type j, uint8_t16Array v)
        """
        return _fetpapi.uint8_t16Array___setslice__(self, *args)

    def __delslice__(self, i: "std::array< unsigned char,16 >::difference_type", j: "std::array< unsigned char,16 >::difference_type") -> "void":
        r"""__delslice__(uint8_t16Array self, std::array< unsigned char,16 >::difference_type i, std::array< unsigned char,16 >::difference_type j)"""
        return _fetpapi.uint8_t16Array___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(uint8_t16Array self, std::array< unsigned char,16 >::difference_type i)
        __delitem__(uint8_t16Array self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.uint8_t16Array___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::array< unsigned char,16 >::value_type const &":
        r"""
        __getitem__(uint8_t16Array self, SWIGPY_SLICEOBJECT * slice) -> uint8_t16Array
        __getitem__(uint8_t16Array self, std::array< unsigned char,16 >::difference_type i) -> std::array< unsigned char,16 >::value_type const &
        """
        return _fetpapi.uint8_t16Array___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(uint8_t16Array self, SWIGPY_SLICEOBJECT * slice, uint8_t16Array v)
        __setitem__(uint8_t16Array self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(uint8_t16Array self, std::array< unsigned char,16 >::difference_type i, std::array< unsigned char,16 >::value_type const & x)
        """
        return _fetpapi.uint8_t16Array___setitem__(self, *args)

    def __init__(self, *args):
        r"""
        __init__(uint8_t16Array self) -> uint8_t16Array
        __init__(uint8_t16Array self, uint8_t16Array other) -> uint8_t16Array
        """
        _fetpapi.uint8_t16Array_swiginit(self, _fetpapi.new_uint8_t16Array(*args))

    def empty(self) -> "bool":
        r"""empty(uint8_t16Array self) -> bool"""
        return _fetpapi.uint8_t16Array_empty(self)

    def size(self) -> "std::array< unsigned char,16 >::size_type":
        r"""size(uint8_t16Array self) -> std::array< unsigned char,16 >::size_type"""
        return _fetpapi.uint8_t16Array_size(self)

    def swap(self, v: "uint8_t16Array") -> "void":
        r"""swap(uint8_t16Array self, uint8_t16Array v)"""
        return _fetpapi.uint8_t16Array_swap(self, v)

    def begin(self) -> "std::array< unsigned char,16 >::iterator":
        r"""begin(uint8_t16Array self) -> std::array< unsigned char,16 >::iterator"""
        return _fetpapi.uint8_t16Array_begin(self)

    def end(self) -> "std::array< unsigned char,16 >::iterator":
        r"""end(uint8_t16Array self) -> std::array< unsigned char,16 >::iterator"""
        return _fetpapi.uint8_t16Array_end(self)

    def rbegin(self) -> "std::array< unsigned char,16 >::reverse_iterator":
        r"""rbegin(uint8_t16Array self) -> std::array< unsigned char,16 >::reverse_iterator"""
        return _fetpapi.uint8_t16Array_rbegin(self)

    def rend(self) -> "std::array< unsigned char,16 >::reverse_iterator":
        r"""rend(uint8_t16Array self) -> std::array< unsigned char,16 >::reverse_iterator"""
        return _fetpapi.uint8_t16Array_rend(self)

    def front(self) -> "std::array< unsigned char,16 >::value_type const &":
        r"""front(uint8_t16Array self) -> std::array< unsigned char,16 >::value_type const &"""
        return _fetpapi.uint8_t16Array_front(self)

    def back(self) -> "std::array< unsigned char,16 >::value_type const &":
        r"""back(uint8_t16Array self) -> std::array< unsigned char,16 >::value_type const &"""
        return _fetpapi.uint8_t16Array_back(self)

    def fill(self, u: "std::array< unsigned char,16 >::value_type const &") -> "void":
        r"""fill(uint8_t16Array self, std::array< unsigned char,16 >::value_type const & u)"""
        return _fetpapi.uint8_t16Array_fill(self, u)
    __swig_destroy__ = _fetpapi.delete_uint8_t16Array

# Register uint8_t16Array in _fetpapi:
_fetpapi.uint8_t16Array_swigregister(uint8_t16Array)
class SupportedProtocolVector(object):
    r"""Proxy of C++ std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(SupportedProtocolVector self) -> SwigPyIterator"""
        return _fetpapi.SupportedProtocolVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(SupportedProtocolVector self) -> bool"""
        return _fetpapi.SupportedProtocolVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(SupportedProtocolVector self) -> bool"""
        return _fetpapi.SupportedProtocolVector___bool__(self)

    def __len__(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type":
        r"""__len__(SupportedProtocolVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type"""
        return _fetpapi.SupportedProtocolVector___len__(self)

    def __getslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type") -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol,std::allocator< Energistics::Etp::v12::Datatypes::SupportedProtocol > > *":
        r"""__getslice__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type j) -> SupportedProtocolVector"""
        return _fetpapi.SupportedProtocolVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type j)
        __setslice__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type j, SupportedProtocolVector v)
        """
        return _fetpapi.SupportedProtocolVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type") -> "void":
        r"""__delslice__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type j)"""
        return _fetpapi.SupportedProtocolVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type i)
        __delitem__(SupportedProtocolVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.SupportedProtocolVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::value_type const &":
        r"""
        __getitem__(SupportedProtocolVector self, SWIGPY_SLICEOBJECT * slice) -> SupportedProtocolVector
        __getitem__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type i) -> SupportedProtocol
        """
        return _fetpapi.SupportedProtocolVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(SupportedProtocolVector self, SWIGPY_SLICEOBJECT * slice, SupportedProtocolVector v)
        __setitem__(SupportedProtocolVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::difference_type i, SupportedProtocol x)
        """
        return _fetpapi.SupportedProtocolVector___setitem__(self, *args)

    def pop(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::value_type":
        r"""pop(SupportedProtocolVector self) -> SupportedProtocol"""
        return _fetpapi.SupportedProtocolVector_pop(self)

    def append(self, x: "SupportedProtocol") -> "void":
        r"""append(SupportedProtocolVector self, SupportedProtocol x)"""
        return _fetpapi.SupportedProtocolVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(SupportedProtocolVector self) -> bool"""
        return _fetpapi.SupportedProtocolVector_empty(self)

    def size(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type":
        r"""size(SupportedProtocolVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type"""
        return _fetpapi.SupportedProtocolVector_size(self)

    def swap(self, v: "SupportedProtocolVector") -> "void":
        r"""swap(SupportedProtocolVector self, SupportedProtocolVector v)"""
        return _fetpapi.SupportedProtocolVector_swap(self, v)

    def begin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator":
        r"""begin(SupportedProtocolVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator"""
        return _fetpapi.SupportedProtocolVector_begin(self)

    def end(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator":
        r"""end(SupportedProtocolVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator"""
        return _fetpapi.SupportedProtocolVector_end(self)

    def rbegin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::reverse_iterator":
        r"""rbegin(SupportedProtocolVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::reverse_iterator"""
        return _fetpapi.SupportedProtocolVector_rbegin(self)

    def rend(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::reverse_iterator":
        r"""rend(SupportedProtocolVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::reverse_iterator"""
        return _fetpapi.SupportedProtocolVector_rend(self)

    def clear(self) -> "void":
        r"""clear(SupportedProtocolVector self)"""
        return _fetpapi.SupportedProtocolVector_clear(self)

    def get_allocator(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::allocator_type":
        r"""get_allocator(SupportedProtocolVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::allocator_type"""
        return _fetpapi.SupportedProtocolVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(SupportedProtocolVector self)"""
        return _fetpapi.SupportedProtocolVector_pop_back(self)

    def erase(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator":
        r"""
        erase(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator pos) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator
        erase(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator first, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator last) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator
        """
        return _fetpapi.SupportedProtocolVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(SupportedProtocolVector self) -> SupportedProtocolVector
        __init__(SupportedProtocolVector self, SupportedProtocolVector other) -> SupportedProtocolVector
        __init__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type size) -> SupportedProtocolVector
        __init__(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type size, SupportedProtocol value) -> SupportedProtocolVector
        """
        _fetpapi.SupportedProtocolVector_swiginit(self, _fetpapi.new_SupportedProtocolVector(*args))

    def push_back(self, x: "SupportedProtocol") -> "void":
        r"""push_back(SupportedProtocolVector self, SupportedProtocol x)"""
        return _fetpapi.SupportedProtocolVector_push_back(self, x)

    def front(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::value_type const &":
        r"""front(SupportedProtocolVector self) -> SupportedProtocol"""
        return _fetpapi.SupportedProtocolVector_front(self)

    def back(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::value_type const &":
        r"""back(SupportedProtocolVector self) -> SupportedProtocol"""
        return _fetpapi.SupportedProtocolVector_back(self)

    def assign(self, n: "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type", x: "SupportedProtocol") -> "void":
        r"""assign(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type n, SupportedProtocol x)"""
        return _fetpapi.SupportedProtocolVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type new_size)
        resize(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type new_size, SupportedProtocol x)
        """
        return _fetpapi.SupportedProtocolVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator pos, SupportedProtocol x) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator
        insert(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::iterator pos, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type n, SupportedProtocol x)
        """
        return _fetpapi.SupportedProtocolVector_insert(self, *args)

    def reserve(self, n: "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type") -> "void":
        r"""reserve(SupportedProtocolVector self, std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type n)"""
        return _fetpapi.SupportedProtocolVector_reserve(self, n)

    def capacity(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type":
        r"""capacity(SupportedProtocolVector self) -> std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol >::size_type"""
        return _fetpapi.SupportedProtocolVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_SupportedProtocolVector

# Register SupportedProtocolVector in _fetpapi:
_fetpapi.SupportedProtocolVector_swigregister(SupportedProtocolVector)
class MapStringDataValue(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringDataValue self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataValue_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringDataValue self) -> bool"""
        return _fetpapi.MapStringDataValue___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringDataValue self) -> bool"""
        return _fetpapi.MapStringDataValue___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::size_type":
        r"""__len__(MapStringDataValue self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::size_type"""
        return _fetpapi.MapStringDataValue___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::mapped_type const &":
        r"""__getitem__(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & key) -> DataValue"""
        return _fetpapi.MapStringDataValue___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const &") -> "void":
        r"""__delitem__(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & key)"""
        return _fetpapi.MapStringDataValue___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const &") -> "bool":
        r"""has_key(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataValue_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringDataValue self) -> PyObject *"""
        return _fetpapi.MapStringDataValue_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringDataValue self) -> PyObject *"""
        return _fetpapi.MapStringDataValue_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringDataValue self) -> PyObject *"""
        return _fetpapi.MapStringDataValue_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const &") -> "bool":
        r"""__contains__(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataValue___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringDataValue self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataValue_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringDataValue self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataValue_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & key)
        __setitem__(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & key, DataValue x)
        """
        return _fetpapi.MapStringDataValue___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringDataValue self) -> PyObject *"""
        return _fetpapi.MapStringDataValue_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringDataValue self, std::less< std::string > const & other) -> MapStringDataValue
        __init__(MapStringDataValue self) -> MapStringDataValue
        __init__(MapStringDataValue self, MapStringDataValue other) -> MapStringDataValue
        """
        _fetpapi.MapStringDataValue_swiginit(self, _fetpapi.new_MapStringDataValue(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringDataValue self) -> bool"""
        return _fetpapi.MapStringDataValue_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::size_type":
        r"""size(MapStringDataValue self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::size_type"""
        return _fetpapi.MapStringDataValue_size(self)

    def swap(self, v: "MapStringDataValue") -> "void":
        r"""swap(MapStringDataValue self, MapStringDataValue v)"""
        return _fetpapi.MapStringDataValue_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator":
        r"""begin(MapStringDataValue self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator"""
        return _fetpapi.MapStringDataValue_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator":
        r"""end(MapStringDataValue self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator"""
        return _fetpapi.MapStringDataValue_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::reverse_iterator":
        r"""rbegin(MapStringDataValue self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::reverse_iterator"""
        return _fetpapi.MapStringDataValue_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::reverse_iterator":
        r"""rend(MapStringDataValue self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::reverse_iterator"""
        return _fetpapi.MapStringDataValue_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringDataValue self)"""
        return _fetpapi.MapStringDataValue_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::allocator_type":
        r"""get_allocator(MapStringDataValue self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::allocator_type"""
        return _fetpapi.MapStringDataValue_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::size_type":
        r"""count(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::size_type"""
        return _fetpapi.MapStringDataValue_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::size_type
        erase(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator position)
        erase(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator last)
        """
        return _fetpapi.MapStringDataValue_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator":
        r"""find(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator"""
        return _fetpapi.MapStringDataValue_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator":
        r"""lower_bound(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator"""
        return _fetpapi.MapStringDataValue_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator":
        r"""upper_bound(MapStringDataValue self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue >::iterator"""
        return _fetpapi.MapStringDataValue_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringDataValue

# Register MapStringDataValue in _fetpapi:
_fetpapi.MapStringDataValue_swigregister(MapStringDataValue)
class MapStringErrorInfo(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringErrorInfo self) -> SwigPyIterator"""
        return _fetpapi.MapStringErrorInfo_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringErrorInfo self) -> bool"""
        return _fetpapi.MapStringErrorInfo___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringErrorInfo self) -> bool"""
        return _fetpapi.MapStringErrorInfo___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::size_type":
        r"""__len__(MapStringErrorInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::size_type"""
        return _fetpapi.MapStringErrorInfo___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::mapped_type const &":
        r"""__getitem__(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & key) -> ErrorInfo"""
        return _fetpapi.MapStringErrorInfo___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const &") -> "void":
        r"""__delitem__(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & key)"""
        return _fetpapi.MapStringErrorInfo___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const &") -> "bool":
        r"""has_key(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & key) -> bool"""
        return _fetpapi.MapStringErrorInfo_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringErrorInfo self) -> PyObject *"""
        return _fetpapi.MapStringErrorInfo_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringErrorInfo self) -> PyObject *"""
        return _fetpapi.MapStringErrorInfo_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringErrorInfo self) -> PyObject *"""
        return _fetpapi.MapStringErrorInfo_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const &") -> "bool":
        r"""__contains__(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & key) -> bool"""
        return _fetpapi.MapStringErrorInfo___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringErrorInfo self) -> SwigPyIterator"""
        return _fetpapi.MapStringErrorInfo_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringErrorInfo self) -> SwigPyIterator"""
        return _fetpapi.MapStringErrorInfo_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & key)
        __setitem__(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & key, ErrorInfo x)
        """
        return _fetpapi.MapStringErrorInfo___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringErrorInfo self) -> PyObject *"""
        return _fetpapi.MapStringErrorInfo_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringErrorInfo self, std::less< std::string > const & other) -> MapStringErrorInfo
        __init__(MapStringErrorInfo self) -> MapStringErrorInfo
        __init__(MapStringErrorInfo self, MapStringErrorInfo other) -> MapStringErrorInfo
        """
        _fetpapi.MapStringErrorInfo_swiginit(self, _fetpapi.new_MapStringErrorInfo(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringErrorInfo self) -> bool"""
        return _fetpapi.MapStringErrorInfo_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::size_type":
        r"""size(MapStringErrorInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::size_type"""
        return _fetpapi.MapStringErrorInfo_size(self)

    def swap(self, v: "MapStringErrorInfo") -> "void":
        r"""swap(MapStringErrorInfo self, MapStringErrorInfo v)"""
        return _fetpapi.MapStringErrorInfo_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator":
        r"""begin(MapStringErrorInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator"""
        return _fetpapi.MapStringErrorInfo_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator":
        r"""end(MapStringErrorInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator"""
        return _fetpapi.MapStringErrorInfo_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::reverse_iterator":
        r"""rbegin(MapStringErrorInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::reverse_iterator"""
        return _fetpapi.MapStringErrorInfo_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::reverse_iterator":
        r"""rend(MapStringErrorInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::reverse_iterator"""
        return _fetpapi.MapStringErrorInfo_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringErrorInfo self)"""
        return _fetpapi.MapStringErrorInfo_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::allocator_type":
        r"""get_allocator(MapStringErrorInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::allocator_type"""
        return _fetpapi.MapStringErrorInfo_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::size_type":
        r"""count(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::size_type"""
        return _fetpapi.MapStringErrorInfo_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::size_type
        erase(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator position)
        erase(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator last)
        """
        return _fetpapi.MapStringErrorInfo_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator":
        r"""find(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator"""
        return _fetpapi.MapStringErrorInfo_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator":
        r"""lower_bound(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator"""
        return _fetpapi.MapStringErrorInfo_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator":
        r"""upper_bound(MapStringErrorInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo >::iterator"""
        return _fetpapi.MapStringErrorInfo_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringErrorInfo

# Register MapStringErrorInfo in _fetpapi:
_fetpapi.MapStringErrorInfo_swigregister(MapStringErrorInfo)
class MapStringArrayOfString(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringArrayOfString self) -> SwigPyIterator"""
        return _fetpapi.MapStringArrayOfString_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringArrayOfString self) -> bool"""
        return _fetpapi.MapStringArrayOfString___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringArrayOfString self) -> bool"""
        return _fetpapi.MapStringArrayOfString___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::size_type":
        r"""__len__(MapStringArrayOfString self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::size_type"""
        return _fetpapi.MapStringArrayOfString___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::mapped_type const &":
        r"""__getitem__(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & key) -> ArrayOfString"""
        return _fetpapi.MapStringArrayOfString___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const &") -> "void":
        r"""__delitem__(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & key)"""
        return _fetpapi.MapStringArrayOfString___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const &") -> "bool":
        r"""has_key(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & key) -> bool"""
        return _fetpapi.MapStringArrayOfString_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringArrayOfString self) -> PyObject *"""
        return _fetpapi.MapStringArrayOfString_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringArrayOfString self) -> PyObject *"""
        return _fetpapi.MapStringArrayOfString_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringArrayOfString self) -> PyObject *"""
        return _fetpapi.MapStringArrayOfString_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const &") -> "bool":
        r"""__contains__(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & key) -> bool"""
        return _fetpapi.MapStringArrayOfString___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringArrayOfString self) -> SwigPyIterator"""
        return _fetpapi.MapStringArrayOfString_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringArrayOfString self) -> SwigPyIterator"""
        return _fetpapi.MapStringArrayOfString_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & key)
        __setitem__(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & key, ArrayOfString x)
        """
        return _fetpapi.MapStringArrayOfString___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringArrayOfString self) -> PyObject *"""
        return _fetpapi.MapStringArrayOfString_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringArrayOfString self, std::less< std::string > const & other) -> MapStringArrayOfString
        __init__(MapStringArrayOfString self) -> MapStringArrayOfString
        __init__(MapStringArrayOfString self, MapStringArrayOfString other) -> MapStringArrayOfString
        """
        _fetpapi.MapStringArrayOfString_swiginit(self, _fetpapi.new_MapStringArrayOfString(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringArrayOfString self) -> bool"""
        return _fetpapi.MapStringArrayOfString_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::size_type":
        r"""size(MapStringArrayOfString self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::size_type"""
        return _fetpapi.MapStringArrayOfString_size(self)

    def swap(self, v: "MapStringArrayOfString") -> "void":
        r"""swap(MapStringArrayOfString self, MapStringArrayOfString v)"""
        return _fetpapi.MapStringArrayOfString_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator":
        r"""begin(MapStringArrayOfString self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator"""
        return _fetpapi.MapStringArrayOfString_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator":
        r"""end(MapStringArrayOfString self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator"""
        return _fetpapi.MapStringArrayOfString_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::reverse_iterator":
        r"""rbegin(MapStringArrayOfString self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::reverse_iterator"""
        return _fetpapi.MapStringArrayOfString_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::reverse_iterator":
        r"""rend(MapStringArrayOfString self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::reverse_iterator"""
        return _fetpapi.MapStringArrayOfString_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringArrayOfString self)"""
        return _fetpapi.MapStringArrayOfString_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::allocator_type":
        r"""get_allocator(MapStringArrayOfString self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::allocator_type"""
        return _fetpapi.MapStringArrayOfString_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::size_type":
        r"""count(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::size_type"""
        return _fetpapi.MapStringArrayOfString_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::size_type
        erase(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator position)
        erase(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator last)
        """
        return _fetpapi.MapStringArrayOfString_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator":
        r"""find(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator"""
        return _fetpapi.MapStringArrayOfString_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator":
        r"""lower_bound(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator"""
        return _fetpapi.MapStringArrayOfString_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator":
        r"""upper_bound(MapStringArrayOfString self, std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString >::iterator"""
        return _fetpapi.MapStringArrayOfString_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringArrayOfString

# Register MapStringArrayOfString in _fetpapi:
_fetpapi.MapStringArrayOfString_swigregister(MapStringArrayOfString)
ActiveStatusKind_Active = _fetpapi.ActiveStatusKind_Active

ActiveStatusKind_Inactive = _fetpapi.ActiveStatusKind_Inactive

class ContextInfo(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::ContextInfo class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uri: "std::string" = property(_fetpapi.ContextInfo_uri_get, _fetpapi.ContextInfo_uri_set, doc=r"""uri : std::string""")
    depth: "int32_t" = property(_fetpapi.ContextInfo_depth_get, _fetpapi.ContextInfo_depth_set, doc=r"""depth : int32_t""")
    dataObjectTypes: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.ContextInfo_dataObjectTypes_get, _fetpapi.ContextInfo_dataObjectTypes_set, doc=r"""dataObjectTypes : std::vector<(std::string,std::allocator<(std::string)>)>""")

    def __init__(self):
        r"""__init__(ContextInfo self) -> ContextInfo"""
        _fetpapi.ContextInfo_swiginit(self, _fetpapi.new_ContextInfo())
    __swig_destroy__ = _fetpapi.delete_ContextInfo

# Register ContextInfo in _fetpapi:
_fetpapi.ContextInfo_swigregister(ContextInfo)
ContextScopeKind__self = _fetpapi.ContextScopeKind__self

ContextScopeKind_sources = _fetpapi.ContextScopeKind_sources

ContextScopeKind_targets = _fetpapi.ContextScopeKind_targets

ContextScopeKind_sourcesOrSelf = _fetpapi.ContextScopeKind_sourcesOrSelf

ContextScopeKind_targetsOrSelf = _fetpapi.ContextScopeKind_targetsOrSelf

class Resource(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::Resource class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uri: "std::string" = property(_fetpapi.Resource_uri_get, _fetpapi.Resource_uri_set, doc=r"""uri : std::string""")
    alternateUris: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.Resource_alternateUris_get, _fetpapi.Resource_alternateUris_set, doc=r"""alternateUris : std::vector<(std::string,std::allocator<(std::string)>)>""")
    name: "std::string" = property(_fetpapi.Resource_name_get, _fetpapi.Resource_name_set, doc=r"""name : std::string""")

    def has_sourceCount(self) -> "bool":
        r"""has_sourceCount(Resource self) -> bool"""
        return _fetpapi.Resource_has_sourceCount(self)

    def get_sourceCount(self) -> "int32_t":
        r"""get_sourceCount(Resource self) -> int32_t"""
        return _fetpapi.Resource_get_sourceCount(self)

    def has_targetCount(self) -> "bool":
        r"""has_targetCount(Resource self) -> bool"""
        return _fetpapi.Resource_has_targetCount(self)

    def get_targetCount(self) -> "int32_t":
        r"""get_targetCount(Resource self) -> int32_t"""
        return _fetpapi.Resource_get_targetCount(self)
    lastChanged: "int64_t" = property(_fetpapi.Resource_lastChanged_get, _fetpapi.Resource_lastChanged_set, doc=r"""lastChanged : int64_t""")
    storeLastWrite: "int64_t" = property(_fetpapi.Resource_storeLastWrite_get, _fetpapi.Resource_storeLastWrite_set, doc=r"""storeLastWrite : int64_t""")
    storeCreated: "int64_t" = property(_fetpapi.Resource_storeCreated_get, _fetpapi.Resource_storeCreated_set, doc=r"""storeCreated : int64_t""")
    customData: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataValue > > >" = property(_fetpapi.Resource_customData_get, _fetpapi.Resource_customData_set, doc=r"""customData : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataValue)>)>)>""")

    def __init__(self):
        r"""__init__(Resource self) -> Resource"""
        _fetpapi.Resource_swiginit(self, _fetpapi.new_Resource())
    __swig_destroy__ = _fetpapi.delete_Resource

# Register Resource in _fetpapi:
_fetpapi.Resource_swigregister(Resource)
class DeletedResource(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::DeletedResource class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uri: "std::string" = property(_fetpapi.DeletedResource_uri_get, _fetpapi.DeletedResource_uri_set, doc=r"""uri : std::string""")
    deletedTime: "int64_t" = property(_fetpapi.DeletedResource_deletedTime_get, _fetpapi.DeletedResource_deletedTime_set, doc=r"""deletedTime : int64_t""")
    customData: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataValue > > >" = property(_fetpapi.DeletedResource_customData_get, _fetpapi.DeletedResource_customData_set, doc=r"""customData : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataValue)>)>)>""")

    def __init__(self):
        r"""__init__(DeletedResource self) -> DeletedResource"""
        _fetpapi.DeletedResource_swiginit(self, _fetpapi.new_DeletedResource())
    __swig_destroy__ = _fetpapi.delete_DeletedResource

# Register DeletedResource in _fetpapi:
_fetpapi.DeletedResource_swigregister(DeletedResource)
class DataObject(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::DataObject class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    resource: "Energistics::Etp::v12::Datatypes::Object::Resource" = property(_fetpapi.DataObject_resource_get, _fetpapi.DataObject_resource_set, doc=r"""resource : Energistics::Etp::v12::Datatypes::Object::Resource""")
    format: "std::string" = property(_fetpapi.DataObject_format_get, _fetpapi.DataObject_format_set, doc=r"""format : std::string""")

    def has_blobId(self) -> "bool":
        r"""has_blobId(DataObject self) -> bool"""
        return _fetpapi.DataObject_has_blobId(self)

    def get_blobId(self) -> "Energistics::Etp::v12::Datatypes::Uuid":
        r"""get_blobId(DataObject self) -> Uuid"""
        return _fetpapi.DataObject_get_blobId(self)
    data: "std::string" = property(_fetpapi.DataObject_data_get, _fetpapi.DataObject_data_set, doc=r"""data : std::string""")

    def __init__(self):
        r"""__init__(DataObject self) -> DataObject"""
        _fetpapi.DataObject_swiginit(self, _fetpapi.new_DataObject())
    __swig_destroy__ = _fetpapi.delete_DataObject

# Register DataObject in _fetpapi:
_fetpapi.DataObject_swigregister(DataObject)
class Dataspace(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::Dataspace class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uri: "std::string" = property(_fetpapi.Dataspace_uri_get, _fetpapi.Dataspace_uri_set, doc=r"""uri : std::string""")
    path: "std::string" = property(_fetpapi.Dataspace_path_get, _fetpapi.Dataspace_path_set, doc=r"""path : std::string""")
    storeLastWrite: "int64_t" = property(_fetpapi.Dataspace_storeLastWrite_get, _fetpapi.Dataspace_storeLastWrite_set, doc=r"""storeLastWrite : int64_t""")
    storeCreated: "int64_t" = property(_fetpapi.Dataspace_storeCreated_get, _fetpapi.Dataspace_storeCreated_set, doc=r"""storeCreated : int64_t""")
    customData: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataValue > > >" = property(_fetpapi.Dataspace_customData_get, _fetpapi.Dataspace_customData_set, doc=r"""customData : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataValue)>)>)>""")

    def __init__(self):
        r"""__init__(Dataspace self) -> Dataspace"""
        _fetpapi.Dataspace_swiginit(self, _fetpapi.new_Dataspace())
    __swig_destroy__ = _fetpapi.delete_Dataspace

# Register Dataspace in _fetpapi:
_fetpapi.Dataspace_swigregister(Dataspace)
class Edge(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::Edge class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    sourceUri: "std::string" = property(_fetpapi.Edge_sourceUri_get, _fetpapi.Edge_sourceUri_set, doc=r"""sourceUri : std::string""")
    targetUri: "std::string" = property(_fetpapi.Edge_targetUri_get, _fetpapi.Edge_targetUri_set, doc=r"""targetUri : std::string""")
    relationshipKind: "Energistics::Etp::v12::Datatypes::Object::RelationshipKind" = property(_fetpapi.Edge_relationshipKind_get, _fetpapi.Edge_relationshipKind_set, doc=r"""relationshipKind : Energistics::Etp::v12::Datatypes::Object::RelationshipKind""")
    customData: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataValue > > >" = property(_fetpapi.Edge_customData_get, _fetpapi.Edge_customData_set, doc=r"""customData : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataValue)>)>)>""")

    def __init__(self):
        r"""__init__(Edge self) -> Edge"""
        _fetpapi.Edge_swiginit(self, _fetpapi.new_Edge())
    __swig_destroy__ = _fetpapi.delete_Edge

# Register Edge in _fetpapi:
_fetpapi.Edge_swigregister(Edge)
RelationshipKind_Primary = _fetpapi.RelationshipKind_Primary

RelationshipKind_Secondary = _fetpapi.RelationshipKind_Secondary

RelationshipKind_Both = _fetpapi.RelationshipKind_Both

ObjectChangeKind_insert = _fetpapi.ObjectChangeKind_insert

ObjectChangeKind_update = _fetpapi.ObjectChangeKind_update

ObjectChangeKind_authorized = _fetpapi.ObjectChangeKind_authorized

ObjectChangeKind_joined = _fetpapi.ObjectChangeKind_joined

ObjectChangeKind_unjoined = _fetpapi.ObjectChangeKind_unjoined

ObjectChangeKind_joinedSubscription = _fetpapi.ObjectChangeKind_joinedSubscription

ObjectChangeKind_unjoinedSubscription = _fetpapi.ObjectChangeKind_unjoinedSubscription

class ObjectChange(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::ObjectChange class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    changeKind: "Energistics::Etp::v12::Datatypes::Object::ObjectChangeKind" = property(_fetpapi.ObjectChange_changeKind_get, _fetpapi.ObjectChange_changeKind_set, doc=r"""changeKind : Energistics::Etp::v12::Datatypes::Object::ObjectChangeKind""")
    changeTime: "int64_t" = property(_fetpapi.ObjectChange_changeTime_get, _fetpapi.ObjectChange_changeTime_set, doc=r"""changeTime : int64_t""")
    dataObject: "Energistics::Etp::v12::Datatypes::Object::DataObject" = property(_fetpapi.ObjectChange_dataObject_get, _fetpapi.ObjectChange_dataObject_set, doc=r"""dataObject : Energistics::Etp::v12::Datatypes::Object::DataObject""")

    def __init__(self):
        r"""__init__(ObjectChange self) -> ObjectChange"""
        _fetpapi.ObjectChange_swiginit(self, _fetpapi.new_ObjectChange())
    __swig_destroy__ = _fetpapi.delete_ObjectChange

# Register ObjectChange in _fetpapi:
_fetpapi.ObjectChange_swigregister(ObjectChange)
class PutResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::PutResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    createdContainedObjectUris: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.PutResponse_createdContainedObjectUris_get, _fetpapi.PutResponse_createdContainedObjectUris_set, doc=r"""createdContainedObjectUris : std::vector<(std::string,std::allocator<(std::string)>)>""")
    deletedContainedObjectUris: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.PutResponse_deletedContainedObjectUris_get, _fetpapi.PutResponse_deletedContainedObjectUris_set, doc=r"""deletedContainedObjectUris : std::vector<(std::string,std::allocator<(std::string)>)>""")
    joinedContainedObjectUris: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.PutResponse_joinedContainedObjectUris_get, _fetpapi.PutResponse_joinedContainedObjectUris_set, doc=r"""joinedContainedObjectUris : std::vector<(std::string,std::allocator<(std::string)>)>""")
    unjoinedContainedObjectUris: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.PutResponse_unjoinedContainedObjectUris_get, _fetpapi.PutResponse_unjoinedContainedObjectUris_set, doc=r"""unjoinedContainedObjectUris : std::vector<(std::string,std::allocator<(std::string)>)>""")

    def __init__(self):
        r"""__init__(PutResponse self) -> PutResponse"""
        _fetpapi.PutResponse_swiginit(self, _fetpapi.new_PutResponse())
    __swig_destroy__ = _fetpapi.delete_PutResponse

# Register PutResponse in _fetpapi:
_fetpapi.PutResponse_swigregister(PutResponse)
class SubscriptionInfo(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    context: "Energistics::Etp::v12::Datatypes::Object::ContextInfo" = property(_fetpapi.SubscriptionInfo_context_get, _fetpapi.SubscriptionInfo_context_set, doc=r"""context : Energistics::Etp::v12::Datatypes::Object::ContextInfo""")
    scope: "Energistics::Etp::v12::Datatypes::Object::ContextScopeKind" = property(_fetpapi.SubscriptionInfo_scope_get, _fetpapi.SubscriptionInfo_scope_set, doc=r"""scope : Energistics::Etp::v12::Datatypes::Object::ContextScopeKind""")
    requestUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.SubscriptionInfo_requestUuid_get, _fetpapi.SubscriptionInfo_requestUuid_set, doc=r"""requestUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    includeObjectData: "bool" = property(_fetpapi.SubscriptionInfo_includeObjectData_get, _fetpapi.SubscriptionInfo_includeObjectData_set, doc=r"""includeObjectData : bool""")
    format: "std::string" = property(_fetpapi.SubscriptionInfo_format_get, _fetpapi.SubscriptionInfo_format_set, doc=r"""format : std::string""")

    def __init__(self):
        r"""__init__(SubscriptionInfo self) -> SubscriptionInfo"""
        _fetpapi.SubscriptionInfo_swiginit(self, _fetpapi.new_SubscriptionInfo())
    __swig_destroy__ = _fetpapi.delete_SubscriptionInfo

# Register SubscriptionInfo in _fetpapi:
_fetpapi.SubscriptionInfo_swigregister(SubscriptionInfo)
class ResourceVector(object):
    r"""Proxy of C++ std::vector< Energistics::Etp::v12::Datatypes::Object::Resource > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(ResourceVector self) -> SwigPyIterator"""
        return _fetpapi.ResourceVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(ResourceVector self) -> bool"""
        return _fetpapi.ResourceVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(ResourceVector self) -> bool"""
        return _fetpapi.ResourceVector___bool__(self)

    def __len__(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type":
        r"""__len__(ResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type"""
        return _fetpapi.ResourceVector___len__(self)

    def __getslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type") -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource,std::allocator< Energistics::Etp::v12::Datatypes::Object::Resource > > *":
        r"""__getslice__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type j) -> ResourceVector"""
        return _fetpapi.ResourceVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type j)
        __setslice__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type j, ResourceVector v)
        """
        return _fetpapi.ResourceVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type") -> "void":
        r"""__delslice__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type j)"""
        return _fetpapi.ResourceVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type i)
        __delitem__(ResourceVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.ResourceVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::value_type const &":
        r"""
        __getitem__(ResourceVector self, SWIGPY_SLICEOBJECT * slice) -> ResourceVector
        __getitem__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type i) -> Resource
        """
        return _fetpapi.ResourceVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(ResourceVector self, SWIGPY_SLICEOBJECT * slice, ResourceVector v)
        __setitem__(ResourceVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::difference_type i, Resource x)
        """
        return _fetpapi.ResourceVector___setitem__(self, *args)

    def pop(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::value_type":
        r"""pop(ResourceVector self) -> Resource"""
        return _fetpapi.ResourceVector_pop(self)

    def append(self, x: "Resource") -> "void":
        r"""append(ResourceVector self, Resource x)"""
        return _fetpapi.ResourceVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(ResourceVector self) -> bool"""
        return _fetpapi.ResourceVector_empty(self)

    def size(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type":
        r"""size(ResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type"""
        return _fetpapi.ResourceVector_size(self)

    def swap(self, v: "ResourceVector") -> "void":
        r"""swap(ResourceVector self, ResourceVector v)"""
        return _fetpapi.ResourceVector_swap(self, v)

    def begin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator":
        r"""begin(ResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator"""
        return _fetpapi.ResourceVector_begin(self)

    def end(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator":
        r"""end(ResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator"""
        return _fetpapi.ResourceVector_end(self)

    def rbegin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::reverse_iterator":
        r"""rbegin(ResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::reverse_iterator"""
        return _fetpapi.ResourceVector_rbegin(self)

    def rend(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::reverse_iterator":
        r"""rend(ResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::reverse_iterator"""
        return _fetpapi.ResourceVector_rend(self)

    def clear(self) -> "void":
        r"""clear(ResourceVector self)"""
        return _fetpapi.ResourceVector_clear(self)

    def get_allocator(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::allocator_type":
        r"""get_allocator(ResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::allocator_type"""
        return _fetpapi.ResourceVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(ResourceVector self)"""
        return _fetpapi.ResourceVector_pop_back(self)

    def erase(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator":
        r"""
        erase(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator pos) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator
        erase(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator first, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator last) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator
        """
        return _fetpapi.ResourceVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(ResourceVector self) -> ResourceVector
        __init__(ResourceVector self, ResourceVector other) -> ResourceVector
        __init__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type size) -> ResourceVector
        __init__(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type size, Resource value) -> ResourceVector
        """
        _fetpapi.ResourceVector_swiginit(self, _fetpapi.new_ResourceVector(*args))

    def push_back(self, x: "Resource") -> "void":
        r"""push_back(ResourceVector self, Resource x)"""
        return _fetpapi.ResourceVector_push_back(self, x)

    def front(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::value_type const &":
        r"""front(ResourceVector self) -> Resource"""
        return _fetpapi.ResourceVector_front(self)

    def back(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::value_type const &":
        r"""back(ResourceVector self) -> Resource"""
        return _fetpapi.ResourceVector_back(self)

    def assign(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type", x: "Resource") -> "void":
        r"""assign(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type n, Resource x)"""
        return _fetpapi.ResourceVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type new_size)
        resize(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type new_size, Resource x)
        """
        return _fetpapi.ResourceVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator pos, Resource x) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator
        insert(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::iterator pos, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type n, Resource x)
        """
        return _fetpapi.ResourceVector_insert(self, *args)

    def reserve(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type") -> "void":
        r"""reserve(ResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type n)"""
        return _fetpapi.ResourceVector_reserve(self, n)

    def capacity(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type":
        r"""capacity(ResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Resource >::size_type"""
        return _fetpapi.ResourceVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_ResourceVector

# Register ResourceVector in _fetpapi:
_fetpapi.ResourceVector_swigregister(ResourceVector)
class DeletedResourceVector(object):
    r"""Proxy of C++ std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(DeletedResourceVector self) -> SwigPyIterator"""
        return _fetpapi.DeletedResourceVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(DeletedResourceVector self) -> bool"""
        return _fetpapi.DeletedResourceVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(DeletedResourceVector self) -> bool"""
        return _fetpapi.DeletedResourceVector___bool__(self)

    def __len__(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type":
        r"""__len__(DeletedResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type"""
        return _fetpapi.DeletedResourceVector___len__(self)

    def __getslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type") -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource,std::allocator< Energistics::Etp::v12::Datatypes::Object::DeletedResource > > *":
        r"""__getslice__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type j) -> DeletedResourceVector"""
        return _fetpapi.DeletedResourceVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type j)
        __setslice__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type j, DeletedResourceVector v)
        """
        return _fetpapi.DeletedResourceVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type") -> "void":
        r"""__delslice__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type j)"""
        return _fetpapi.DeletedResourceVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type i)
        __delitem__(DeletedResourceVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.DeletedResourceVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::value_type const &":
        r"""
        __getitem__(DeletedResourceVector self, SWIGPY_SLICEOBJECT * slice) -> DeletedResourceVector
        __getitem__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type i) -> DeletedResource
        """
        return _fetpapi.DeletedResourceVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(DeletedResourceVector self, SWIGPY_SLICEOBJECT * slice, DeletedResourceVector v)
        __setitem__(DeletedResourceVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::difference_type i, DeletedResource x)
        """
        return _fetpapi.DeletedResourceVector___setitem__(self, *args)

    def pop(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::value_type":
        r"""pop(DeletedResourceVector self) -> DeletedResource"""
        return _fetpapi.DeletedResourceVector_pop(self)

    def append(self, x: "DeletedResource") -> "void":
        r"""append(DeletedResourceVector self, DeletedResource x)"""
        return _fetpapi.DeletedResourceVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(DeletedResourceVector self) -> bool"""
        return _fetpapi.DeletedResourceVector_empty(self)

    def size(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type":
        r"""size(DeletedResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type"""
        return _fetpapi.DeletedResourceVector_size(self)

    def swap(self, v: "DeletedResourceVector") -> "void":
        r"""swap(DeletedResourceVector self, DeletedResourceVector v)"""
        return _fetpapi.DeletedResourceVector_swap(self, v)

    def begin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator":
        r"""begin(DeletedResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator"""
        return _fetpapi.DeletedResourceVector_begin(self)

    def end(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator":
        r"""end(DeletedResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator"""
        return _fetpapi.DeletedResourceVector_end(self)

    def rbegin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::reverse_iterator":
        r"""rbegin(DeletedResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::reverse_iterator"""
        return _fetpapi.DeletedResourceVector_rbegin(self)

    def rend(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::reverse_iterator":
        r"""rend(DeletedResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::reverse_iterator"""
        return _fetpapi.DeletedResourceVector_rend(self)

    def clear(self) -> "void":
        r"""clear(DeletedResourceVector self)"""
        return _fetpapi.DeletedResourceVector_clear(self)

    def get_allocator(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::allocator_type":
        r"""get_allocator(DeletedResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::allocator_type"""
        return _fetpapi.DeletedResourceVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(DeletedResourceVector self)"""
        return _fetpapi.DeletedResourceVector_pop_back(self)

    def erase(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator":
        r"""
        erase(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator pos) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator
        erase(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator first, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator last) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator
        """
        return _fetpapi.DeletedResourceVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(DeletedResourceVector self) -> DeletedResourceVector
        __init__(DeletedResourceVector self, DeletedResourceVector other) -> DeletedResourceVector
        __init__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type size) -> DeletedResourceVector
        __init__(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type size, DeletedResource value) -> DeletedResourceVector
        """
        _fetpapi.DeletedResourceVector_swiginit(self, _fetpapi.new_DeletedResourceVector(*args))

    def push_back(self, x: "DeletedResource") -> "void":
        r"""push_back(DeletedResourceVector self, DeletedResource x)"""
        return _fetpapi.DeletedResourceVector_push_back(self, x)

    def front(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::value_type const &":
        r"""front(DeletedResourceVector self) -> DeletedResource"""
        return _fetpapi.DeletedResourceVector_front(self)

    def back(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::value_type const &":
        r"""back(DeletedResourceVector self) -> DeletedResource"""
        return _fetpapi.DeletedResourceVector_back(self)

    def assign(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type", x: "DeletedResource") -> "void":
        r"""assign(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type n, DeletedResource x)"""
        return _fetpapi.DeletedResourceVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type new_size)
        resize(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type new_size, DeletedResource x)
        """
        return _fetpapi.DeletedResourceVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator pos, DeletedResource x) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator
        insert(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::iterator pos, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type n, DeletedResource x)
        """
        return _fetpapi.DeletedResourceVector_insert(self, *args)

    def reserve(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type") -> "void":
        r"""reserve(DeletedResourceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type n)"""
        return _fetpapi.DeletedResourceVector_reserve(self, n)

    def capacity(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type":
        r"""capacity(DeletedResourceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource >::size_type"""
        return _fetpapi.DeletedResourceVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_DeletedResourceVector

# Register DeletedResourceVector in _fetpapi:
_fetpapi.DeletedResourceVector_swigregister(DeletedResourceVector)
class DataspaceVector(object):
    r"""Proxy of C++ std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(DataspaceVector self) -> SwigPyIterator"""
        return _fetpapi.DataspaceVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(DataspaceVector self) -> bool"""
        return _fetpapi.DataspaceVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(DataspaceVector self) -> bool"""
        return _fetpapi.DataspaceVector___bool__(self)

    def __len__(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type":
        r"""__len__(DataspaceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type"""
        return _fetpapi.DataspaceVector___len__(self)

    def __getslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type") -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace,std::allocator< Energistics::Etp::v12::Datatypes::Object::Dataspace > > *":
        r"""__getslice__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type j) -> DataspaceVector"""
        return _fetpapi.DataspaceVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type j)
        __setslice__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type j, DataspaceVector v)
        """
        return _fetpapi.DataspaceVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type") -> "void":
        r"""__delslice__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type j)"""
        return _fetpapi.DataspaceVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type i)
        __delitem__(DataspaceVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.DataspaceVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::value_type const &":
        r"""
        __getitem__(DataspaceVector self, SWIGPY_SLICEOBJECT * slice) -> DataspaceVector
        __getitem__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type i) -> Dataspace
        """
        return _fetpapi.DataspaceVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(DataspaceVector self, SWIGPY_SLICEOBJECT * slice, DataspaceVector v)
        __setitem__(DataspaceVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::difference_type i, Dataspace x)
        """
        return _fetpapi.DataspaceVector___setitem__(self, *args)

    def pop(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::value_type":
        r"""pop(DataspaceVector self) -> Dataspace"""
        return _fetpapi.DataspaceVector_pop(self)

    def append(self, x: "Dataspace") -> "void":
        r"""append(DataspaceVector self, Dataspace x)"""
        return _fetpapi.DataspaceVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(DataspaceVector self) -> bool"""
        return _fetpapi.DataspaceVector_empty(self)

    def size(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type":
        r"""size(DataspaceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type"""
        return _fetpapi.DataspaceVector_size(self)

    def swap(self, v: "DataspaceVector") -> "void":
        r"""swap(DataspaceVector self, DataspaceVector v)"""
        return _fetpapi.DataspaceVector_swap(self, v)

    def begin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator":
        r"""begin(DataspaceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator"""
        return _fetpapi.DataspaceVector_begin(self)

    def end(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator":
        r"""end(DataspaceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator"""
        return _fetpapi.DataspaceVector_end(self)

    def rbegin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::reverse_iterator":
        r"""rbegin(DataspaceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::reverse_iterator"""
        return _fetpapi.DataspaceVector_rbegin(self)

    def rend(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::reverse_iterator":
        r"""rend(DataspaceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::reverse_iterator"""
        return _fetpapi.DataspaceVector_rend(self)

    def clear(self) -> "void":
        r"""clear(DataspaceVector self)"""
        return _fetpapi.DataspaceVector_clear(self)

    def get_allocator(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::allocator_type":
        r"""get_allocator(DataspaceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::allocator_type"""
        return _fetpapi.DataspaceVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(DataspaceVector self)"""
        return _fetpapi.DataspaceVector_pop_back(self)

    def erase(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator":
        r"""
        erase(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator pos) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator
        erase(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator first, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator last) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator
        """
        return _fetpapi.DataspaceVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(DataspaceVector self) -> DataspaceVector
        __init__(DataspaceVector self, DataspaceVector other) -> DataspaceVector
        __init__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type size) -> DataspaceVector
        __init__(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type size, Dataspace value) -> DataspaceVector
        """
        _fetpapi.DataspaceVector_swiginit(self, _fetpapi.new_DataspaceVector(*args))

    def push_back(self, x: "Dataspace") -> "void":
        r"""push_back(DataspaceVector self, Dataspace x)"""
        return _fetpapi.DataspaceVector_push_back(self, x)

    def front(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::value_type const &":
        r"""front(DataspaceVector self) -> Dataspace"""
        return _fetpapi.DataspaceVector_front(self)

    def back(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::value_type const &":
        r"""back(DataspaceVector self) -> Dataspace"""
        return _fetpapi.DataspaceVector_back(self)

    def assign(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type", x: "Dataspace") -> "void":
        r"""assign(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type n, Dataspace x)"""
        return _fetpapi.DataspaceVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type new_size)
        resize(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type new_size, Dataspace x)
        """
        return _fetpapi.DataspaceVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator pos, Dataspace x) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator
        insert(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator pos, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type n, Dataspace x)
        """
        return _fetpapi.DataspaceVector_insert(self, *args)

    def reserve(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type") -> "void":
        r"""reserve(DataspaceVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type n)"""
        return _fetpapi.DataspaceVector_reserve(self, n)

    def capacity(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type":
        r"""capacity(DataspaceVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type"""
        return _fetpapi.DataspaceVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_DataspaceVector

# Register DataspaceVector in _fetpapi:
_fetpapi.DataspaceVector_swigregister(DataspaceVector)
class EdgeVector(object):
    r"""Proxy of C++ std::vector< Energistics::Etp::v12::Datatypes::Object::Edge > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(EdgeVector self) -> SwigPyIterator"""
        return _fetpapi.EdgeVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(EdgeVector self) -> bool"""
        return _fetpapi.EdgeVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(EdgeVector self) -> bool"""
        return _fetpapi.EdgeVector___bool__(self)

    def __len__(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type":
        r"""__len__(EdgeVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type"""
        return _fetpapi.EdgeVector___len__(self)

    def __getslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type") -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge,std::allocator< Energistics::Etp::v12::Datatypes::Object::Edge > > *":
        r"""__getslice__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type j) -> EdgeVector"""
        return _fetpapi.EdgeVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type j)
        __setslice__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type j, EdgeVector v)
        """
        return _fetpapi.EdgeVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type") -> "void":
        r"""__delslice__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type j)"""
        return _fetpapi.EdgeVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type i)
        __delitem__(EdgeVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.EdgeVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::value_type const &":
        r"""
        __getitem__(EdgeVector self, SWIGPY_SLICEOBJECT * slice) -> EdgeVector
        __getitem__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type i) -> Edge
        """
        return _fetpapi.EdgeVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(EdgeVector self, SWIGPY_SLICEOBJECT * slice, EdgeVector v)
        __setitem__(EdgeVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::difference_type i, Edge x)
        """
        return _fetpapi.EdgeVector___setitem__(self, *args)

    def pop(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::value_type":
        r"""pop(EdgeVector self) -> Edge"""
        return _fetpapi.EdgeVector_pop(self)

    def append(self, x: "Edge") -> "void":
        r"""append(EdgeVector self, Edge x)"""
        return _fetpapi.EdgeVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(EdgeVector self) -> bool"""
        return _fetpapi.EdgeVector_empty(self)

    def size(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type":
        r"""size(EdgeVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type"""
        return _fetpapi.EdgeVector_size(self)

    def swap(self, v: "EdgeVector") -> "void":
        r"""swap(EdgeVector self, EdgeVector v)"""
        return _fetpapi.EdgeVector_swap(self, v)

    def begin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator":
        r"""begin(EdgeVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator"""
        return _fetpapi.EdgeVector_begin(self)

    def end(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator":
        r"""end(EdgeVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator"""
        return _fetpapi.EdgeVector_end(self)

    def rbegin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::reverse_iterator":
        r"""rbegin(EdgeVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::reverse_iterator"""
        return _fetpapi.EdgeVector_rbegin(self)

    def rend(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::reverse_iterator":
        r"""rend(EdgeVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::reverse_iterator"""
        return _fetpapi.EdgeVector_rend(self)

    def clear(self) -> "void":
        r"""clear(EdgeVector self)"""
        return _fetpapi.EdgeVector_clear(self)

    def get_allocator(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::allocator_type":
        r"""get_allocator(EdgeVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::allocator_type"""
        return _fetpapi.EdgeVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(EdgeVector self)"""
        return _fetpapi.EdgeVector_pop_back(self)

    def erase(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator":
        r"""
        erase(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator pos) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator
        erase(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator first, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator last) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator
        """
        return _fetpapi.EdgeVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(EdgeVector self) -> EdgeVector
        __init__(EdgeVector self, EdgeVector other) -> EdgeVector
        __init__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type size) -> EdgeVector
        __init__(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type size, Edge value) -> EdgeVector
        """
        _fetpapi.EdgeVector_swiginit(self, _fetpapi.new_EdgeVector(*args))

    def push_back(self, x: "Edge") -> "void":
        r"""push_back(EdgeVector self, Edge x)"""
        return _fetpapi.EdgeVector_push_back(self, x)

    def front(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::value_type const &":
        r"""front(EdgeVector self) -> Edge"""
        return _fetpapi.EdgeVector_front(self)

    def back(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::value_type const &":
        r"""back(EdgeVector self) -> Edge"""
        return _fetpapi.EdgeVector_back(self)

    def assign(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type", x: "Edge") -> "void":
        r"""assign(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type n, Edge x)"""
        return _fetpapi.EdgeVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type new_size)
        resize(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type new_size, Edge x)
        """
        return _fetpapi.EdgeVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator pos, Edge x) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator
        insert(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::iterator pos, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type n, Edge x)
        """
        return _fetpapi.EdgeVector_insert(self, *args)

    def reserve(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type") -> "void":
        r"""reserve(EdgeVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type n)"""
        return _fetpapi.EdgeVector_reserve(self, n)

    def capacity(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type":
        r"""capacity(EdgeVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::Edge >::size_type"""
        return _fetpapi.EdgeVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_EdgeVector

# Register EdgeVector in _fetpapi:
_fetpapi.EdgeVector_swigregister(EdgeVector)
class MapStringDataObject(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringDataObject self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataObject_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringDataObject self) -> bool"""
        return _fetpapi.MapStringDataObject___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringDataObject self) -> bool"""
        return _fetpapi.MapStringDataObject___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::size_type":
        r"""__len__(MapStringDataObject self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::size_type"""
        return _fetpapi.MapStringDataObject___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::mapped_type const &":
        r"""__getitem__(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & key) -> DataObject"""
        return _fetpapi.MapStringDataObject___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const &") -> "void":
        r"""__delitem__(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & key)"""
        return _fetpapi.MapStringDataObject___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const &") -> "bool":
        r"""has_key(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataObject_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringDataObject self) -> PyObject *"""
        return _fetpapi.MapStringDataObject_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringDataObject self) -> PyObject *"""
        return _fetpapi.MapStringDataObject_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringDataObject self) -> PyObject *"""
        return _fetpapi.MapStringDataObject_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const &") -> "bool":
        r"""__contains__(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataObject___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringDataObject self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataObject_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringDataObject self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataObject_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & key)
        __setitem__(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & key, DataObject x)
        """
        return _fetpapi.MapStringDataObject___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringDataObject self) -> PyObject *"""
        return _fetpapi.MapStringDataObject_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringDataObject self, std::less< std::string > const & other) -> MapStringDataObject
        __init__(MapStringDataObject self) -> MapStringDataObject
        __init__(MapStringDataObject self, MapStringDataObject other) -> MapStringDataObject
        """
        _fetpapi.MapStringDataObject_swiginit(self, _fetpapi.new_MapStringDataObject(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringDataObject self) -> bool"""
        return _fetpapi.MapStringDataObject_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::size_type":
        r"""size(MapStringDataObject self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::size_type"""
        return _fetpapi.MapStringDataObject_size(self)

    def swap(self, v: "MapStringDataObject") -> "void":
        r"""swap(MapStringDataObject self, MapStringDataObject v)"""
        return _fetpapi.MapStringDataObject_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator":
        r"""begin(MapStringDataObject self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator"""
        return _fetpapi.MapStringDataObject_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator":
        r"""end(MapStringDataObject self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator"""
        return _fetpapi.MapStringDataObject_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::reverse_iterator":
        r"""rbegin(MapStringDataObject self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::reverse_iterator"""
        return _fetpapi.MapStringDataObject_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::reverse_iterator":
        r"""rend(MapStringDataObject self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::reverse_iterator"""
        return _fetpapi.MapStringDataObject_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringDataObject self)"""
        return _fetpapi.MapStringDataObject_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::allocator_type":
        r"""get_allocator(MapStringDataObject self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::allocator_type"""
        return _fetpapi.MapStringDataObject_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::size_type":
        r"""count(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::size_type"""
        return _fetpapi.MapStringDataObject_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::size_type
        erase(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator position)
        erase(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator last)
        """
        return _fetpapi.MapStringDataObject_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator":
        r"""find(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator"""
        return _fetpapi.MapStringDataObject_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator":
        r"""lower_bound(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator"""
        return _fetpapi.MapStringDataObject_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator":
        r"""upper_bound(MapStringDataObject self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject >::iterator"""
        return _fetpapi.MapStringDataObject_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringDataObject

# Register MapStringDataObject in _fetpapi:
_fetpapi.MapStringDataObject_swigregister(MapStringDataObject)
class MapStringDataspace(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringDataspace self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataspace_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringDataspace self) -> bool"""
        return _fetpapi.MapStringDataspace___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringDataspace self) -> bool"""
        return _fetpapi.MapStringDataspace___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type":
        r"""__len__(MapStringDataspace self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type"""
        return _fetpapi.MapStringDataspace___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::mapped_type const &":
        r"""__getitem__(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & key) -> Dataspace"""
        return _fetpapi.MapStringDataspace___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const &") -> "void":
        r"""__delitem__(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & key)"""
        return _fetpapi.MapStringDataspace___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const &") -> "bool":
        r"""has_key(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataspace_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringDataspace self) -> PyObject *"""
        return _fetpapi.MapStringDataspace_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringDataspace self) -> PyObject *"""
        return _fetpapi.MapStringDataspace_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringDataspace self) -> PyObject *"""
        return _fetpapi.MapStringDataspace_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const &") -> "bool":
        r"""__contains__(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataspace___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringDataspace self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataspace_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringDataspace self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataspace_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & key)
        __setitem__(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & key, Dataspace x)
        """
        return _fetpapi.MapStringDataspace___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringDataspace self) -> PyObject *"""
        return _fetpapi.MapStringDataspace_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringDataspace self, std::less< std::string > const & other) -> MapStringDataspace
        __init__(MapStringDataspace self) -> MapStringDataspace
        __init__(MapStringDataspace self, MapStringDataspace other) -> MapStringDataspace
        """
        _fetpapi.MapStringDataspace_swiginit(self, _fetpapi.new_MapStringDataspace(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringDataspace self) -> bool"""
        return _fetpapi.MapStringDataspace_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type":
        r"""size(MapStringDataspace self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type"""
        return _fetpapi.MapStringDataspace_size(self)

    def swap(self, v: "MapStringDataspace") -> "void":
        r"""swap(MapStringDataspace self, MapStringDataspace v)"""
        return _fetpapi.MapStringDataspace_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator":
        r"""begin(MapStringDataspace self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator"""
        return _fetpapi.MapStringDataspace_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator":
        r"""end(MapStringDataspace self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator"""
        return _fetpapi.MapStringDataspace_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::reverse_iterator":
        r"""rbegin(MapStringDataspace self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::reverse_iterator"""
        return _fetpapi.MapStringDataspace_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::reverse_iterator":
        r"""rend(MapStringDataspace self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::reverse_iterator"""
        return _fetpapi.MapStringDataspace_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringDataspace self)"""
        return _fetpapi.MapStringDataspace_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::allocator_type":
        r"""get_allocator(MapStringDataspace self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::allocator_type"""
        return _fetpapi.MapStringDataspace_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type":
        r"""count(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type"""
        return _fetpapi.MapStringDataspace_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::size_type
        erase(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator position)
        erase(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator last)
        """
        return _fetpapi.MapStringDataspace_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator":
        r"""find(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator"""
        return _fetpapi.MapStringDataspace_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator":
        r"""lower_bound(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator"""
        return _fetpapi.MapStringDataspace_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator":
        r"""upper_bound(MapStringDataspace self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace >::iterator"""
        return _fetpapi.MapStringDataspace_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringDataspace

# Register MapStringDataspace in _fetpapi:
_fetpapi.MapStringDataspace_swigregister(MapStringDataspace)
class MapStringPutResponse(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringPutResponse self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutResponse_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringPutResponse self) -> bool"""
        return _fetpapi.MapStringPutResponse___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringPutResponse self) -> bool"""
        return _fetpapi.MapStringPutResponse___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::size_type":
        r"""__len__(MapStringPutResponse self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::size_type"""
        return _fetpapi.MapStringPutResponse___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::mapped_type const &":
        r"""__getitem__(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & key) -> PutResponse"""
        return _fetpapi.MapStringPutResponse___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const &") -> "void":
        r"""__delitem__(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & key)"""
        return _fetpapi.MapStringPutResponse___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const &") -> "bool":
        r"""has_key(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & key) -> bool"""
        return _fetpapi.MapStringPutResponse_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringPutResponse self) -> PyObject *"""
        return _fetpapi.MapStringPutResponse_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringPutResponse self) -> PyObject *"""
        return _fetpapi.MapStringPutResponse_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringPutResponse self) -> PyObject *"""
        return _fetpapi.MapStringPutResponse_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const &") -> "bool":
        r"""__contains__(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & key) -> bool"""
        return _fetpapi.MapStringPutResponse___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringPutResponse self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutResponse_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringPutResponse self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutResponse_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & key)
        __setitem__(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & key, PutResponse x)
        """
        return _fetpapi.MapStringPutResponse___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringPutResponse self) -> PyObject *"""
        return _fetpapi.MapStringPutResponse_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringPutResponse self, std::less< std::string > const & other) -> MapStringPutResponse
        __init__(MapStringPutResponse self) -> MapStringPutResponse
        __init__(MapStringPutResponse self, MapStringPutResponse other) -> MapStringPutResponse
        """
        _fetpapi.MapStringPutResponse_swiginit(self, _fetpapi.new_MapStringPutResponse(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringPutResponse self) -> bool"""
        return _fetpapi.MapStringPutResponse_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::size_type":
        r"""size(MapStringPutResponse self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::size_type"""
        return _fetpapi.MapStringPutResponse_size(self)

    def swap(self, v: "MapStringPutResponse") -> "void":
        r"""swap(MapStringPutResponse self, MapStringPutResponse v)"""
        return _fetpapi.MapStringPutResponse_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator":
        r"""begin(MapStringPutResponse self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator"""
        return _fetpapi.MapStringPutResponse_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator":
        r"""end(MapStringPutResponse self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator"""
        return _fetpapi.MapStringPutResponse_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::reverse_iterator":
        r"""rbegin(MapStringPutResponse self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::reverse_iterator"""
        return _fetpapi.MapStringPutResponse_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::reverse_iterator":
        r"""rend(MapStringPutResponse self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::reverse_iterator"""
        return _fetpapi.MapStringPutResponse_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringPutResponse self)"""
        return _fetpapi.MapStringPutResponse_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::allocator_type":
        r"""get_allocator(MapStringPutResponse self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::allocator_type"""
        return _fetpapi.MapStringPutResponse_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::size_type":
        r"""count(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::size_type"""
        return _fetpapi.MapStringPutResponse_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::size_type
        erase(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator position)
        erase(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator last)
        """
        return _fetpapi.MapStringPutResponse_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator":
        r"""find(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator"""
        return _fetpapi.MapStringPutResponse_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator":
        r"""lower_bound(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator"""
        return _fetpapi.MapStringPutResponse_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator":
        r"""upper_bound(MapStringPutResponse self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse >::iterator"""
        return _fetpapi.MapStringPutResponse_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringPutResponse

# Register MapStringPutResponse in _fetpapi:
_fetpapi.MapStringPutResponse_swigregister(MapStringPutResponse)
class MapStringSubscriptionInfo(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringSubscriptionInfo self) -> SwigPyIterator"""
        return _fetpapi.MapStringSubscriptionInfo_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringSubscriptionInfo self) -> bool"""
        return _fetpapi.MapStringSubscriptionInfo___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringSubscriptionInfo self) -> bool"""
        return _fetpapi.MapStringSubscriptionInfo___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type":
        r"""__len__(MapStringSubscriptionInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type"""
        return _fetpapi.MapStringSubscriptionInfo___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::mapped_type const &":
        r"""__getitem__(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & key) -> SubscriptionInfo"""
        return _fetpapi.MapStringSubscriptionInfo___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const &") -> "void":
        r"""__delitem__(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & key)"""
        return _fetpapi.MapStringSubscriptionInfo___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const &") -> "bool":
        r"""has_key(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & key) -> bool"""
        return _fetpapi.MapStringSubscriptionInfo_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringSubscriptionInfo self) -> PyObject *"""
        return _fetpapi.MapStringSubscriptionInfo_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringSubscriptionInfo self) -> PyObject *"""
        return _fetpapi.MapStringSubscriptionInfo_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringSubscriptionInfo self) -> PyObject *"""
        return _fetpapi.MapStringSubscriptionInfo_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const &") -> "bool":
        r"""__contains__(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & key) -> bool"""
        return _fetpapi.MapStringSubscriptionInfo___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringSubscriptionInfo self) -> SwigPyIterator"""
        return _fetpapi.MapStringSubscriptionInfo_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringSubscriptionInfo self) -> SwigPyIterator"""
        return _fetpapi.MapStringSubscriptionInfo_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & key)
        __setitem__(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & key, SubscriptionInfo x)
        """
        return _fetpapi.MapStringSubscriptionInfo___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringSubscriptionInfo self) -> PyObject *"""
        return _fetpapi.MapStringSubscriptionInfo_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringSubscriptionInfo self, std::less< std::string > const & other) -> MapStringSubscriptionInfo
        __init__(MapStringSubscriptionInfo self) -> MapStringSubscriptionInfo
        __init__(MapStringSubscriptionInfo self, MapStringSubscriptionInfo other) -> MapStringSubscriptionInfo
        """
        _fetpapi.MapStringSubscriptionInfo_swiginit(self, _fetpapi.new_MapStringSubscriptionInfo(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringSubscriptionInfo self) -> bool"""
        return _fetpapi.MapStringSubscriptionInfo_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type":
        r"""size(MapStringSubscriptionInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type"""
        return _fetpapi.MapStringSubscriptionInfo_size(self)

    def swap(self, v: "MapStringSubscriptionInfo") -> "void":
        r"""swap(MapStringSubscriptionInfo self, MapStringSubscriptionInfo v)"""
        return _fetpapi.MapStringSubscriptionInfo_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator":
        r"""begin(MapStringSubscriptionInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator"""
        return _fetpapi.MapStringSubscriptionInfo_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator":
        r"""end(MapStringSubscriptionInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator"""
        return _fetpapi.MapStringSubscriptionInfo_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::reverse_iterator":
        r"""rbegin(MapStringSubscriptionInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::reverse_iterator"""
        return _fetpapi.MapStringSubscriptionInfo_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::reverse_iterator":
        r"""rend(MapStringSubscriptionInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::reverse_iterator"""
        return _fetpapi.MapStringSubscriptionInfo_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringSubscriptionInfo self)"""
        return _fetpapi.MapStringSubscriptionInfo_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::allocator_type":
        r"""get_allocator(MapStringSubscriptionInfo self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::allocator_type"""
        return _fetpapi.MapStringSubscriptionInfo_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type":
        r"""count(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type"""
        return _fetpapi.MapStringSubscriptionInfo_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type
        erase(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator position)
        erase(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator last)
        """
        return _fetpapi.MapStringSubscriptionInfo_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator":
        r"""find(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator"""
        return _fetpapi.MapStringSubscriptionInfo_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator":
        r"""lower_bound(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator"""
        return _fetpapi.MapStringSubscriptionInfo_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator":
        r"""upper_bound(MapStringSubscriptionInfo self, std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator"""
        return _fetpapi.MapStringSubscriptionInfo_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringSubscriptionInfo

# Register MapStringSubscriptionInfo in _fetpapi:
_fetpapi.MapStringSubscriptionInfo_swigregister(MapStringSubscriptionInfo)
class SubscriptionInfoVector(object):
    r"""Proxy of C++ std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(SubscriptionInfoVector self) -> SwigPyIterator"""
        return _fetpapi.SubscriptionInfoVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(SubscriptionInfoVector self) -> bool"""
        return _fetpapi.SubscriptionInfoVector___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(SubscriptionInfoVector self) -> bool"""
        return _fetpapi.SubscriptionInfoVector___bool__(self)

    def __len__(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type":
        r"""__len__(SubscriptionInfoVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type"""
        return _fetpapi.SubscriptionInfoVector___len__(self)

    def __getslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type") -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo,std::allocator< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo > > *":
        r"""__getslice__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type j) -> SubscriptionInfoVector"""
        return _fetpapi.SubscriptionInfoVector___getslice__(self, i, j)

    def __setslice__(self, *args) -> "void":
        r"""
        __setslice__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type j)
        __setslice__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type j, SubscriptionInfoVector v)
        """
        return _fetpapi.SubscriptionInfoVector___setslice__(self, *args)

    def __delslice__(self, i: "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type", j: "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type") -> "void":
        r"""__delslice__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type i, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type j)"""
        return _fetpapi.SubscriptionInfoVector___delslice__(self, i, j)

    def __delitem__(self, *args) -> "void":
        r"""
        __delitem__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type i)
        __delitem__(SubscriptionInfoVector self, SWIGPY_SLICEOBJECT * slice)
        """
        return _fetpapi.SubscriptionInfoVector___delitem__(self, *args)

    def __getitem__(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::value_type const &":
        r"""
        __getitem__(SubscriptionInfoVector self, SWIGPY_SLICEOBJECT * slice) -> SubscriptionInfoVector
        __getitem__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type i) -> SubscriptionInfo
        """
        return _fetpapi.SubscriptionInfoVector___getitem__(self, *args)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(SubscriptionInfoVector self, SWIGPY_SLICEOBJECT * slice, SubscriptionInfoVector v)
        __setitem__(SubscriptionInfoVector self, SWIGPY_SLICEOBJECT * slice)
        __setitem__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::difference_type i, SubscriptionInfo x)
        """
        return _fetpapi.SubscriptionInfoVector___setitem__(self, *args)

    def pop(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::value_type":
        r"""pop(SubscriptionInfoVector self) -> SubscriptionInfo"""
        return _fetpapi.SubscriptionInfoVector_pop(self)

    def append(self, x: "SubscriptionInfo") -> "void":
        r"""append(SubscriptionInfoVector self, SubscriptionInfo x)"""
        return _fetpapi.SubscriptionInfoVector_append(self, x)

    def empty(self) -> "bool":
        r"""empty(SubscriptionInfoVector self) -> bool"""
        return _fetpapi.SubscriptionInfoVector_empty(self)

    def size(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type":
        r"""size(SubscriptionInfoVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type"""
        return _fetpapi.SubscriptionInfoVector_size(self)

    def swap(self, v: "SubscriptionInfoVector") -> "void":
        r"""swap(SubscriptionInfoVector self, SubscriptionInfoVector v)"""
        return _fetpapi.SubscriptionInfoVector_swap(self, v)

    def begin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator":
        r"""begin(SubscriptionInfoVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator"""
        return _fetpapi.SubscriptionInfoVector_begin(self)

    def end(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator":
        r"""end(SubscriptionInfoVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator"""
        return _fetpapi.SubscriptionInfoVector_end(self)

    def rbegin(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::reverse_iterator":
        r"""rbegin(SubscriptionInfoVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::reverse_iterator"""
        return _fetpapi.SubscriptionInfoVector_rbegin(self)

    def rend(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::reverse_iterator":
        r"""rend(SubscriptionInfoVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::reverse_iterator"""
        return _fetpapi.SubscriptionInfoVector_rend(self)

    def clear(self) -> "void":
        r"""clear(SubscriptionInfoVector self)"""
        return _fetpapi.SubscriptionInfoVector_clear(self)

    def get_allocator(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::allocator_type":
        r"""get_allocator(SubscriptionInfoVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::allocator_type"""
        return _fetpapi.SubscriptionInfoVector_get_allocator(self)

    def pop_back(self) -> "void":
        r"""pop_back(SubscriptionInfoVector self)"""
        return _fetpapi.SubscriptionInfoVector_pop_back(self)

    def erase(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator":
        r"""
        erase(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator pos) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator
        erase(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator first, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator last) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator
        """
        return _fetpapi.SubscriptionInfoVector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(SubscriptionInfoVector self) -> SubscriptionInfoVector
        __init__(SubscriptionInfoVector self, SubscriptionInfoVector other) -> SubscriptionInfoVector
        __init__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type size) -> SubscriptionInfoVector
        __init__(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type size, SubscriptionInfo value) -> SubscriptionInfoVector
        """
        _fetpapi.SubscriptionInfoVector_swiginit(self, _fetpapi.new_SubscriptionInfoVector(*args))

    def push_back(self, x: "SubscriptionInfo") -> "void":
        r"""push_back(SubscriptionInfoVector self, SubscriptionInfo x)"""
        return _fetpapi.SubscriptionInfoVector_push_back(self, x)

    def front(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::value_type const &":
        r"""front(SubscriptionInfoVector self) -> SubscriptionInfo"""
        return _fetpapi.SubscriptionInfoVector_front(self)

    def back(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::value_type const &":
        r"""back(SubscriptionInfoVector self) -> SubscriptionInfo"""
        return _fetpapi.SubscriptionInfoVector_back(self)

    def assign(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type", x: "SubscriptionInfo") -> "void":
        r"""assign(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type n, SubscriptionInfo x)"""
        return _fetpapi.SubscriptionInfoVector_assign(self, n, x)

    def resize(self, *args) -> "void":
        r"""
        resize(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type new_size)
        resize(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type new_size, SubscriptionInfo x)
        """
        return _fetpapi.SubscriptionInfoVector_resize(self, *args)

    def insert(self, *args) -> "void":
        r"""
        insert(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator pos, SubscriptionInfo x) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator
        insert(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::iterator pos, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type n, SubscriptionInfo x)
        """
        return _fetpapi.SubscriptionInfoVector_insert(self, *args)

    def reserve(self, n: "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type") -> "void":
        r"""reserve(SubscriptionInfoVector self, std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type n)"""
        return _fetpapi.SubscriptionInfoVector_reserve(self, n)

    def capacity(self) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type":
        r"""capacity(SubscriptionInfoVector self) -> std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo >::size_type"""
        return _fetpapi.SubscriptionInfoVector_capacity(self)
    __swig_destroy__ = _fetpapi.delete_SubscriptionInfoVector

# Register SubscriptionInfoVector in _fetpapi:
_fetpapi.SubscriptionInfoVector_swigregister(SubscriptionInfoVector)
class DataArrayIdentifier(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uri: "std::string" = property(_fetpapi.DataArrayIdentifier_uri_get, _fetpapi.DataArrayIdentifier_uri_set, doc=r"""uri : std::string""")
    pathInResource: "std::string" = property(_fetpapi.DataArrayIdentifier_pathInResource_get, _fetpapi.DataArrayIdentifier_pathInResource_set, doc=r"""pathInResource : std::string""")

    def __init__(self):
        r"""__init__(DataArrayIdentifier self) -> DataArrayIdentifier"""
        _fetpapi.DataArrayIdentifier_swiginit(self, _fetpapi.new_DataArrayIdentifier())
    __swig_destroy__ = _fetpapi.delete_DataArrayIdentifier

# Register DataArrayIdentifier in _fetpapi:
_fetpapi.DataArrayIdentifier_swigregister(DataArrayIdentifier)
class DataArray(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dimensions: "std::vector< int64_t,std::allocator< int64_t > >" = property(_fetpapi.DataArray_dimensions_get, _fetpapi.DataArray_dimensions_set, doc=r"""dimensions : std::vector<(int64_t,std::allocator<(int64_t)>)>""")
    data: "Energistics::Etp::v12::Datatypes::AnyArray" = property(_fetpapi.DataArray_data_get, _fetpapi.DataArray_data_set, doc=r"""data : Energistics::Etp::v12::Datatypes::AnyArray""")

    def __init__(self):
        r"""__init__(DataArray self) -> DataArray"""
        _fetpapi.DataArray_swiginit(self, _fetpapi.new_DataArray())
    __swig_destroy__ = _fetpapi.delete_DataArray

# Register DataArray in _fetpapi:
_fetpapi.DataArray_swigregister(DataArray)
class DataArrayMetadata(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dimensions: "std::vector< int64_t,std::allocator< int64_t > >" = property(_fetpapi.DataArrayMetadata_dimensions_get, _fetpapi.DataArrayMetadata_dimensions_set, doc=r"""dimensions : std::vector<(int64_t,std::allocator<(int64_t)>)>""")
    preferredSubarrayDimensions: "std::vector< int64_t,std::allocator< int64_t > >" = property(_fetpapi.DataArrayMetadata_preferredSubarrayDimensions_get, _fetpapi.DataArrayMetadata_preferredSubarrayDimensions_set, doc=r"""preferredSubarrayDimensions : std::vector<(int64_t,std::allocator<(int64_t)>)>""")
    transportArrayType: "Energistics::Etp::v12::Datatypes::AnyArrayType" = property(_fetpapi.DataArrayMetadata_transportArrayType_get, _fetpapi.DataArrayMetadata_transportArrayType_set, doc=r"""transportArrayType : Energistics::Etp::v12::Datatypes::AnyArrayType""")
    logicalArrayType: "Energistics::Etp::v12::Datatypes::AnyLogicalArrayType" = property(_fetpapi.DataArrayMetadata_logicalArrayType_get, _fetpapi.DataArrayMetadata_logicalArrayType_set, doc=r"""logicalArrayType : Energistics::Etp::v12::Datatypes::AnyLogicalArrayType""")
    storeLastWrite: "int64_t" = property(_fetpapi.DataArrayMetadata_storeLastWrite_get, _fetpapi.DataArrayMetadata_storeLastWrite_set, doc=r"""storeLastWrite : int64_t""")
    storeCreated: "int64_t" = property(_fetpapi.DataArrayMetadata_storeCreated_get, _fetpapi.DataArrayMetadata_storeCreated_set, doc=r"""storeCreated : int64_t""")
    customData: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataValue > > >" = property(_fetpapi.DataArrayMetadata_customData_get, _fetpapi.DataArrayMetadata_customData_set, doc=r"""customData : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataValue)>)>)>""")

    def __init__(self):
        r"""__init__(DataArrayMetadata self) -> DataArrayMetadata"""
        _fetpapi.DataArrayMetadata_swiginit(self, _fetpapi.new_DataArrayMetadata())
    __swig_destroy__ = _fetpapi.delete_DataArrayMetadata

# Register DataArrayMetadata in _fetpapi:
_fetpapi.DataArrayMetadata_swigregister(DataArrayMetadata)
class PutDataArraysType(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uid: "Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier" = property(_fetpapi.PutDataArraysType_uid_get, _fetpapi.PutDataArraysType_uid_set, doc=r"""uid : Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier""")
    array: "Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray" = property(_fetpapi.PutDataArraysType_array_get, _fetpapi.PutDataArraysType_array_set, doc=r"""array : Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray""")

    def __init__(self):
        r"""__init__(PutDataArraysType self) -> PutDataArraysType"""
        _fetpapi.PutDataArraysType_swiginit(self, _fetpapi.new_PutDataArraysType())
    __swig_destroy__ = _fetpapi.delete_PutDataArraysType

# Register PutDataArraysType in _fetpapi:
_fetpapi.PutDataArraysType_swigregister(PutDataArraysType)
class GetDataSubarraysType(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uid: "Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier" = property(_fetpapi.GetDataSubarraysType_uid_get, _fetpapi.GetDataSubarraysType_uid_set, doc=r"""uid : Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier""")
    starts: "std::vector< int64_t,std::allocator< int64_t > >" = property(_fetpapi.GetDataSubarraysType_starts_get, _fetpapi.GetDataSubarraysType_starts_set, doc=r"""starts : std::vector<(int64_t,std::allocator<(int64_t)>)>""")
    counts: "std::vector< int64_t,std::allocator< int64_t > >" = property(_fetpapi.GetDataSubarraysType_counts_get, _fetpapi.GetDataSubarraysType_counts_set, doc=r"""counts : std::vector<(int64_t,std::allocator<(int64_t)>)>""")

    def __init__(self):
        r"""__init__(GetDataSubarraysType self) -> GetDataSubarraysType"""
        _fetpapi.GetDataSubarraysType_swiginit(self, _fetpapi.new_GetDataSubarraysType())
    __swig_destroy__ = _fetpapi.delete_GetDataSubarraysType

# Register GetDataSubarraysType in _fetpapi:
_fetpapi.GetDataSubarraysType_swigregister(GetDataSubarraysType)
class PutDataSubarraysType(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uid: "Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier" = property(_fetpapi.PutDataSubarraysType_uid_get, _fetpapi.PutDataSubarraysType_uid_set, doc=r"""uid : Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier""")
    data: "Energistics::Etp::v12::Datatypes::AnyArray" = property(_fetpapi.PutDataSubarraysType_data_get, _fetpapi.PutDataSubarraysType_data_set, doc=r"""data : Energistics::Etp::v12::Datatypes::AnyArray""")
    starts: "std::vector< int64_t,std::allocator< int64_t > >" = property(_fetpapi.PutDataSubarraysType_starts_get, _fetpapi.PutDataSubarraysType_starts_set, doc=r"""starts : std::vector<(int64_t,std::allocator<(int64_t)>)>""")
    counts: "std::vector< int64_t,std::allocator< int64_t > >" = property(_fetpapi.PutDataSubarraysType_counts_get, _fetpapi.PutDataSubarraysType_counts_set, doc=r"""counts : std::vector<(int64_t,std::allocator<(int64_t)>)>""")

    def __init__(self):
        r"""__init__(PutDataSubarraysType self) -> PutDataSubarraysType"""
        _fetpapi.PutDataSubarraysType_swiginit(self, _fetpapi.new_PutDataSubarraysType())
    __swig_destroy__ = _fetpapi.delete_PutDataSubarraysType

# Register PutDataSubarraysType in _fetpapi:
_fetpapi.PutDataSubarraysType_swigregister(PutDataSubarraysType)
class PutUninitializedDataArrayType(object):
    r"""Proxy of C++ Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uid: "Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier" = property(_fetpapi.PutUninitializedDataArrayType_uid_get, _fetpapi.PutUninitializedDataArrayType_uid_set, doc=r"""uid : Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier""")
    metadata: "Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata" = property(_fetpapi.PutUninitializedDataArrayType_metadata_get, _fetpapi.PutUninitializedDataArrayType_metadata_set, doc=r"""metadata : Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata""")

    def __init__(self):
        r"""__init__(PutUninitializedDataArrayType self) -> PutUninitializedDataArrayType"""
        _fetpapi.PutUninitializedDataArrayType_swiginit(self, _fetpapi.new_PutUninitializedDataArrayType())
    __swig_destroy__ = _fetpapi.delete_PutUninitializedDataArrayType

# Register PutUninitializedDataArrayType in _fetpapi:
_fetpapi.PutUninitializedDataArrayType_swigregister(PutUninitializedDataArrayType)
class MapStringDataArrayIdentifier(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringDataArrayIdentifier self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArrayIdentifier_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringDataArrayIdentifier self) -> bool"""
        return _fetpapi.MapStringDataArrayIdentifier___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringDataArrayIdentifier self) -> bool"""
        return _fetpapi.MapStringDataArrayIdentifier___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::size_type":
        r"""__len__(MapStringDataArrayIdentifier self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::size_type"""
        return _fetpapi.MapStringDataArrayIdentifier___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::mapped_type const &":
        r"""__getitem__(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & key) -> DataArrayIdentifier"""
        return _fetpapi.MapStringDataArrayIdentifier___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const &") -> "void":
        r"""__delitem__(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & key)"""
        return _fetpapi.MapStringDataArrayIdentifier___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const &") -> "bool":
        r"""has_key(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataArrayIdentifier_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringDataArrayIdentifier self) -> PyObject *"""
        return _fetpapi.MapStringDataArrayIdentifier_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringDataArrayIdentifier self) -> PyObject *"""
        return _fetpapi.MapStringDataArrayIdentifier_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringDataArrayIdentifier self) -> PyObject *"""
        return _fetpapi.MapStringDataArrayIdentifier_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const &") -> "bool":
        r"""__contains__(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataArrayIdentifier___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringDataArrayIdentifier self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArrayIdentifier_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringDataArrayIdentifier self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArrayIdentifier_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & key)
        __setitem__(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & key, DataArrayIdentifier x)
        """
        return _fetpapi.MapStringDataArrayIdentifier___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringDataArrayIdentifier self) -> PyObject *"""
        return _fetpapi.MapStringDataArrayIdentifier_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringDataArrayIdentifier self, std::less< std::string > const & other) -> MapStringDataArrayIdentifier
        __init__(MapStringDataArrayIdentifier self) -> MapStringDataArrayIdentifier
        __init__(MapStringDataArrayIdentifier self, MapStringDataArrayIdentifier other) -> MapStringDataArrayIdentifier
        """
        _fetpapi.MapStringDataArrayIdentifier_swiginit(self, _fetpapi.new_MapStringDataArrayIdentifier(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringDataArrayIdentifier self) -> bool"""
        return _fetpapi.MapStringDataArrayIdentifier_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::size_type":
        r"""size(MapStringDataArrayIdentifier self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::size_type"""
        return _fetpapi.MapStringDataArrayIdentifier_size(self)

    def swap(self, v: "MapStringDataArrayIdentifier") -> "void":
        r"""swap(MapStringDataArrayIdentifier self, MapStringDataArrayIdentifier v)"""
        return _fetpapi.MapStringDataArrayIdentifier_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator":
        r"""begin(MapStringDataArrayIdentifier self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator"""
        return _fetpapi.MapStringDataArrayIdentifier_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator":
        r"""end(MapStringDataArrayIdentifier self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator"""
        return _fetpapi.MapStringDataArrayIdentifier_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::reverse_iterator":
        r"""rbegin(MapStringDataArrayIdentifier self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::reverse_iterator"""
        return _fetpapi.MapStringDataArrayIdentifier_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::reverse_iterator":
        r"""rend(MapStringDataArrayIdentifier self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::reverse_iterator"""
        return _fetpapi.MapStringDataArrayIdentifier_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringDataArrayIdentifier self)"""
        return _fetpapi.MapStringDataArrayIdentifier_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::allocator_type":
        r"""get_allocator(MapStringDataArrayIdentifier self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::allocator_type"""
        return _fetpapi.MapStringDataArrayIdentifier_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::size_type":
        r"""count(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::size_type"""
        return _fetpapi.MapStringDataArrayIdentifier_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::size_type
        erase(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator position)
        erase(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator last)
        """
        return _fetpapi.MapStringDataArrayIdentifier_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator":
        r"""find(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator"""
        return _fetpapi.MapStringDataArrayIdentifier_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator":
        r"""lower_bound(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator"""
        return _fetpapi.MapStringDataArrayIdentifier_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator":
        r"""upper_bound(MapStringDataArrayIdentifier self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier >::iterator"""
        return _fetpapi.MapStringDataArrayIdentifier_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringDataArrayIdentifier

# Register MapStringDataArrayIdentifier in _fetpapi:
_fetpapi.MapStringDataArrayIdentifier_swigregister(MapStringDataArrayIdentifier)
class MapStringDataArray(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringDataArray self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArray_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringDataArray self) -> bool"""
        return _fetpapi.MapStringDataArray___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringDataArray self) -> bool"""
        return _fetpapi.MapStringDataArray___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::size_type":
        r"""__len__(MapStringDataArray self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::size_type"""
        return _fetpapi.MapStringDataArray___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::mapped_type const &":
        r"""__getitem__(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & key) -> DataArray"""
        return _fetpapi.MapStringDataArray___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const &") -> "void":
        r"""__delitem__(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & key)"""
        return _fetpapi.MapStringDataArray___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const &") -> "bool":
        r"""has_key(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataArray_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringDataArray self) -> PyObject *"""
        return _fetpapi.MapStringDataArray_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringDataArray self) -> PyObject *"""
        return _fetpapi.MapStringDataArray_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringDataArray self) -> PyObject *"""
        return _fetpapi.MapStringDataArray_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const &") -> "bool":
        r"""__contains__(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataArray___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringDataArray self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArray_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringDataArray self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArray_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & key)
        __setitem__(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & key, DataArray x)
        """
        return _fetpapi.MapStringDataArray___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringDataArray self) -> PyObject *"""
        return _fetpapi.MapStringDataArray_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringDataArray self, std::less< std::string > const & other) -> MapStringDataArray
        __init__(MapStringDataArray self) -> MapStringDataArray
        __init__(MapStringDataArray self, MapStringDataArray other) -> MapStringDataArray
        """
        _fetpapi.MapStringDataArray_swiginit(self, _fetpapi.new_MapStringDataArray(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringDataArray self) -> bool"""
        return _fetpapi.MapStringDataArray_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::size_type":
        r"""size(MapStringDataArray self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::size_type"""
        return _fetpapi.MapStringDataArray_size(self)

    def swap(self, v: "MapStringDataArray") -> "void":
        r"""swap(MapStringDataArray self, MapStringDataArray v)"""
        return _fetpapi.MapStringDataArray_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator":
        r"""begin(MapStringDataArray self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator"""
        return _fetpapi.MapStringDataArray_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator":
        r"""end(MapStringDataArray self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator"""
        return _fetpapi.MapStringDataArray_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::reverse_iterator":
        r"""rbegin(MapStringDataArray self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::reverse_iterator"""
        return _fetpapi.MapStringDataArray_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::reverse_iterator":
        r"""rend(MapStringDataArray self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::reverse_iterator"""
        return _fetpapi.MapStringDataArray_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringDataArray self)"""
        return _fetpapi.MapStringDataArray_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::allocator_type":
        r"""get_allocator(MapStringDataArray self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::allocator_type"""
        return _fetpapi.MapStringDataArray_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::size_type":
        r"""count(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::size_type"""
        return _fetpapi.MapStringDataArray_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::size_type
        erase(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator position)
        erase(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator last)
        """
        return _fetpapi.MapStringDataArray_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator":
        r"""find(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator"""
        return _fetpapi.MapStringDataArray_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator":
        r"""lower_bound(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator"""
        return _fetpapi.MapStringDataArray_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator":
        r"""upper_bound(MapStringDataArray self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray >::iterator"""
        return _fetpapi.MapStringDataArray_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringDataArray

# Register MapStringDataArray in _fetpapi:
_fetpapi.MapStringDataArray_swigregister(MapStringDataArray)
class MapStringDataArrayMetadata(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringDataArrayMetadata self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArrayMetadata_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringDataArrayMetadata self) -> bool"""
        return _fetpapi.MapStringDataArrayMetadata___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringDataArrayMetadata self) -> bool"""
        return _fetpapi.MapStringDataArrayMetadata___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::size_type":
        r"""__len__(MapStringDataArrayMetadata self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::size_type"""
        return _fetpapi.MapStringDataArrayMetadata___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::mapped_type const &":
        r"""__getitem__(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & key) -> DataArrayMetadata"""
        return _fetpapi.MapStringDataArrayMetadata___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const &") -> "void":
        r"""__delitem__(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & key)"""
        return _fetpapi.MapStringDataArrayMetadata___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const &") -> "bool":
        r"""has_key(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataArrayMetadata_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringDataArrayMetadata self) -> PyObject *"""
        return _fetpapi.MapStringDataArrayMetadata_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringDataArrayMetadata self) -> PyObject *"""
        return _fetpapi.MapStringDataArrayMetadata_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringDataArrayMetadata self) -> PyObject *"""
        return _fetpapi.MapStringDataArrayMetadata_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const &") -> "bool":
        r"""__contains__(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & key) -> bool"""
        return _fetpapi.MapStringDataArrayMetadata___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringDataArrayMetadata self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArrayMetadata_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringDataArrayMetadata self) -> SwigPyIterator"""
        return _fetpapi.MapStringDataArrayMetadata_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & key)
        __setitem__(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & key, DataArrayMetadata x)
        """
        return _fetpapi.MapStringDataArrayMetadata___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringDataArrayMetadata self) -> PyObject *"""
        return _fetpapi.MapStringDataArrayMetadata_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringDataArrayMetadata self, std::less< std::string > const & other) -> MapStringDataArrayMetadata
        __init__(MapStringDataArrayMetadata self) -> MapStringDataArrayMetadata
        __init__(MapStringDataArrayMetadata self, MapStringDataArrayMetadata other) -> MapStringDataArrayMetadata
        """
        _fetpapi.MapStringDataArrayMetadata_swiginit(self, _fetpapi.new_MapStringDataArrayMetadata(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringDataArrayMetadata self) -> bool"""
        return _fetpapi.MapStringDataArrayMetadata_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::size_type":
        r"""size(MapStringDataArrayMetadata self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::size_type"""
        return _fetpapi.MapStringDataArrayMetadata_size(self)

    def swap(self, v: "MapStringDataArrayMetadata") -> "void":
        r"""swap(MapStringDataArrayMetadata self, MapStringDataArrayMetadata v)"""
        return _fetpapi.MapStringDataArrayMetadata_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator":
        r"""begin(MapStringDataArrayMetadata self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator"""
        return _fetpapi.MapStringDataArrayMetadata_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator":
        r"""end(MapStringDataArrayMetadata self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator"""
        return _fetpapi.MapStringDataArrayMetadata_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::reverse_iterator":
        r"""rbegin(MapStringDataArrayMetadata self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::reverse_iterator"""
        return _fetpapi.MapStringDataArrayMetadata_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::reverse_iterator":
        r"""rend(MapStringDataArrayMetadata self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::reverse_iterator"""
        return _fetpapi.MapStringDataArrayMetadata_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringDataArrayMetadata self)"""
        return _fetpapi.MapStringDataArrayMetadata_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::allocator_type":
        r"""get_allocator(MapStringDataArrayMetadata self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::allocator_type"""
        return _fetpapi.MapStringDataArrayMetadata_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::size_type":
        r"""count(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::size_type"""
        return _fetpapi.MapStringDataArrayMetadata_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::size_type
        erase(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator position)
        erase(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator last)
        """
        return _fetpapi.MapStringDataArrayMetadata_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator":
        r"""find(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator"""
        return _fetpapi.MapStringDataArrayMetadata_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator":
        r"""lower_bound(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator"""
        return _fetpapi.MapStringDataArrayMetadata_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator":
        r"""upper_bound(MapStringDataArrayMetadata self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata >::iterator"""
        return _fetpapi.MapStringDataArrayMetadata_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringDataArrayMetadata

# Register MapStringDataArrayMetadata in _fetpapi:
_fetpapi.MapStringDataArrayMetadata_swigregister(MapStringDataArrayMetadata)
class MapStringPutDataArraysType(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringPutDataArraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutDataArraysType_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringPutDataArraysType self) -> bool"""
        return _fetpapi.MapStringPutDataArraysType___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringPutDataArraysType self) -> bool"""
        return _fetpapi.MapStringPutDataArraysType___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::size_type":
        r"""__len__(MapStringPutDataArraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::size_type"""
        return _fetpapi.MapStringPutDataArraysType___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::mapped_type const &":
        r"""__getitem__(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & key) -> PutDataArraysType"""
        return _fetpapi.MapStringPutDataArraysType___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const &") -> "void":
        r"""__delitem__(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & key)"""
        return _fetpapi.MapStringPutDataArraysType___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const &") -> "bool":
        r"""has_key(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & key) -> bool"""
        return _fetpapi.MapStringPutDataArraysType_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringPutDataArraysType self) -> PyObject *"""
        return _fetpapi.MapStringPutDataArraysType_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringPutDataArraysType self) -> PyObject *"""
        return _fetpapi.MapStringPutDataArraysType_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringPutDataArraysType self) -> PyObject *"""
        return _fetpapi.MapStringPutDataArraysType_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const &") -> "bool":
        r"""__contains__(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & key) -> bool"""
        return _fetpapi.MapStringPutDataArraysType___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringPutDataArraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutDataArraysType_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringPutDataArraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutDataArraysType_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & key)
        __setitem__(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & key, PutDataArraysType x)
        """
        return _fetpapi.MapStringPutDataArraysType___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringPutDataArraysType self) -> PyObject *"""
        return _fetpapi.MapStringPutDataArraysType_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringPutDataArraysType self, std::less< std::string > const & other) -> MapStringPutDataArraysType
        __init__(MapStringPutDataArraysType self) -> MapStringPutDataArraysType
        __init__(MapStringPutDataArraysType self, MapStringPutDataArraysType other) -> MapStringPutDataArraysType
        """
        _fetpapi.MapStringPutDataArraysType_swiginit(self, _fetpapi.new_MapStringPutDataArraysType(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringPutDataArraysType self) -> bool"""
        return _fetpapi.MapStringPutDataArraysType_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::size_type":
        r"""size(MapStringPutDataArraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::size_type"""
        return _fetpapi.MapStringPutDataArraysType_size(self)

    def swap(self, v: "MapStringPutDataArraysType") -> "void":
        r"""swap(MapStringPutDataArraysType self, MapStringPutDataArraysType v)"""
        return _fetpapi.MapStringPutDataArraysType_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator":
        r"""begin(MapStringPutDataArraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator"""
        return _fetpapi.MapStringPutDataArraysType_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator":
        r"""end(MapStringPutDataArraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator"""
        return _fetpapi.MapStringPutDataArraysType_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::reverse_iterator":
        r"""rbegin(MapStringPutDataArraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::reverse_iterator"""
        return _fetpapi.MapStringPutDataArraysType_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::reverse_iterator":
        r"""rend(MapStringPutDataArraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::reverse_iterator"""
        return _fetpapi.MapStringPutDataArraysType_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringPutDataArraysType self)"""
        return _fetpapi.MapStringPutDataArraysType_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::allocator_type":
        r"""get_allocator(MapStringPutDataArraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::allocator_type"""
        return _fetpapi.MapStringPutDataArraysType_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::size_type":
        r"""count(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::size_type"""
        return _fetpapi.MapStringPutDataArraysType_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::size_type
        erase(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator position)
        erase(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator last)
        """
        return _fetpapi.MapStringPutDataArraysType_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator":
        r"""find(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator"""
        return _fetpapi.MapStringPutDataArraysType_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator":
        r"""lower_bound(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator"""
        return _fetpapi.MapStringPutDataArraysType_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator":
        r"""upper_bound(MapStringPutDataArraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType >::iterator"""
        return _fetpapi.MapStringPutDataArraysType_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringPutDataArraysType

# Register MapStringPutDataArraysType in _fetpapi:
_fetpapi.MapStringPutDataArraysType_swigregister(MapStringPutDataArraysType)
class MapStringGetDataSubarraysType(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringGetDataSubarraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringGetDataSubarraysType_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringGetDataSubarraysType self) -> bool"""
        return _fetpapi.MapStringGetDataSubarraysType___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringGetDataSubarraysType self) -> bool"""
        return _fetpapi.MapStringGetDataSubarraysType___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::size_type":
        r"""__len__(MapStringGetDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::size_type"""
        return _fetpapi.MapStringGetDataSubarraysType___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::mapped_type const &":
        r"""__getitem__(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & key) -> GetDataSubarraysType"""
        return _fetpapi.MapStringGetDataSubarraysType___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const &") -> "void":
        r"""__delitem__(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & key)"""
        return _fetpapi.MapStringGetDataSubarraysType___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const &") -> "bool":
        r"""has_key(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & key) -> bool"""
        return _fetpapi.MapStringGetDataSubarraysType_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringGetDataSubarraysType self) -> PyObject *"""
        return _fetpapi.MapStringGetDataSubarraysType_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringGetDataSubarraysType self) -> PyObject *"""
        return _fetpapi.MapStringGetDataSubarraysType_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringGetDataSubarraysType self) -> PyObject *"""
        return _fetpapi.MapStringGetDataSubarraysType_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const &") -> "bool":
        r"""__contains__(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & key) -> bool"""
        return _fetpapi.MapStringGetDataSubarraysType___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringGetDataSubarraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringGetDataSubarraysType_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringGetDataSubarraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringGetDataSubarraysType_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & key)
        __setitem__(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & key, GetDataSubarraysType x)
        """
        return _fetpapi.MapStringGetDataSubarraysType___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringGetDataSubarraysType self) -> PyObject *"""
        return _fetpapi.MapStringGetDataSubarraysType_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringGetDataSubarraysType self, std::less< std::string > const & other) -> MapStringGetDataSubarraysType
        __init__(MapStringGetDataSubarraysType self) -> MapStringGetDataSubarraysType
        __init__(MapStringGetDataSubarraysType self, MapStringGetDataSubarraysType other) -> MapStringGetDataSubarraysType
        """
        _fetpapi.MapStringGetDataSubarraysType_swiginit(self, _fetpapi.new_MapStringGetDataSubarraysType(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringGetDataSubarraysType self) -> bool"""
        return _fetpapi.MapStringGetDataSubarraysType_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::size_type":
        r"""size(MapStringGetDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::size_type"""
        return _fetpapi.MapStringGetDataSubarraysType_size(self)

    def swap(self, v: "MapStringGetDataSubarraysType") -> "void":
        r"""swap(MapStringGetDataSubarraysType self, MapStringGetDataSubarraysType v)"""
        return _fetpapi.MapStringGetDataSubarraysType_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator":
        r"""begin(MapStringGetDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator"""
        return _fetpapi.MapStringGetDataSubarraysType_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator":
        r"""end(MapStringGetDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator"""
        return _fetpapi.MapStringGetDataSubarraysType_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::reverse_iterator":
        r"""rbegin(MapStringGetDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::reverse_iterator"""
        return _fetpapi.MapStringGetDataSubarraysType_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::reverse_iterator":
        r"""rend(MapStringGetDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::reverse_iterator"""
        return _fetpapi.MapStringGetDataSubarraysType_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringGetDataSubarraysType self)"""
        return _fetpapi.MapStringGetDataSubarraysType_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::allocator_type":
        r"""get_allocator(MapStringGetDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::allocator_type"""
        return _fetpapi.MapStringGetDataSubarraysType_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::size_type":
        r"""count(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::size_type"""
        return _fetpapi.MapStringGetDataSubarraysType_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::size_type
        erase(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator position)
        erase(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator last)
        """
        return _fetpapi.MapStringGetDataSubarraysType_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator":
        r"""find(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator"""
        return _fetpapi.MapStringGetDataSubarraysType_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator":
        r"""lower_bound(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator"""
        return _fetpapi.MapStringGetDataSubarraysType_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator":
        r"""upper_bound(MapStringGetDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType >::iterator"""
        return _fetpapi.MapStringGetDataSubarraysType_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringGetDataSubarraysType

# Register MapStringGetDataSubarraysType in _fetpapi:
_fetpapi.MapStringGetDataSubarraysType_swigregister(MapStringGetDataSubarraysType)
class MapStringPutDataSubarraysType(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringPutDataSubarraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutDataSubarraysType_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringPutDataSubarraysType self) -> bool"""
        return _fetpapi.MapStringPutDataSubarraysType___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringPutDataSubarraysType self) -> bool"""
        return _fetpapi.MapStringPutDataSubarraysType___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::size_type":
        r"""__len__(MapStringPutDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::size_type"""
        return _fetpapi.MapStringPutDataSubarraysType___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::mapped_type const &":
        r"""__getitem__(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & key) -> PutDataSubarraysType"""
        return _fetpapi.MapStringPutDataSubarraysType___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const &") -> "void":
        r"""__delitem__(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & key)"""
        return _fetpapi.MapStringPutDataSubarraysType___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const &") -> "bool":
        r"""has_key(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & key) -> bool"""
        return _fetpapi.MapStringPutDataSubarraysType_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringPutDataSubarraysType self) -> PyObject *"""
        return _fetpapi.MapStringPutDataSubarraysType_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringPutDataSubarraysType self) -> PyObject *"""
        return _fetpapi.MapStringPutDataSubarraysType_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringPutDataSubarraysType self) -> PyObject *"""
        return _fetpapi.MapStringPutDataSubarraysType_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const &") -> "bool":
        r"""__contains__(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & key) -> bool"""
        return _fetpapi.MapStringPutDataSubarraysType___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringPutDataSubarraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutDataSubarraysType_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringPutDataSubarraysType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutDataSubarraysType_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & key)
        __setitem__(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & key, PutDataSubarraysType x)
        """
        return _fetpapi.MapStringPutDataSubarraysType___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringPutDataSubarraysType self) -> PyObject *"""
        return _fetpapi.MapStringPutDataSubarraysType_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringPutDataSubarraysType self, std::less< std::string > const & other) -> MapStringPutDataSubarraysType
        __init__(MapStringPutDataSubarraysType self) -> MapStringPutDataSubarraysType
        __init__(MapStringPutDataSubarraysType self, MapStringPutDataSubarraysType other) -> MapStringPutDataSubarraysType
        """
        _fetpapi.MapStringPutDataSubarraysType_swiginit(self, _fetpapi.new_MapStringPutDataSubarraysType(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringPutDataSubarraysType self) -> bool"""
        return _fetpapi.MapStringPutDataSubarraysType_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::size_type":
        r"""size(MapStringPutDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::size_type"""
        return _fetpapi.MapStringPutDataSubarraysType_size(self)

    def swap(self, v: "MapStringPutDataSubarraysType") -> "void":
        r"""swap(MapStringPutDataSubarraysType self, MapStringPutDataSubarraysType v)"""
        return _fetpapi.MapStringPutDataSubarraysType_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator":
        r"""begin(MapStringPutDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator"""
        return _fetpapi.MapStringPutDataSubarraysType_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator":
        r"""end(MapStringPutDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator"""
        return _fetpapi.MapStringPutDataSubarraysType_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::reverse_iterator":
        r"""rbegin(MapStringPutDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::reverse_iterator"""
        return _fetpapi.MapStringPutDataSubarraysType_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::reverse_iterator":
        r"""rend(MapStringPutDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::reverse_iterator"""
        return _fetpapi.MapStringPutDataSubarraysType_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringPutDataSubarraysType self)"""
        return _fetpapi.MapStringPutDataSubarraysType_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::allocator_type":
        r"""get_allocator(MapStringPutDataSubarraysType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::allocator_type"""
        return _fetpapi.MapStringPutDataSubarraysType_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::size_type":
        r"""count(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::size_type"""
        return _fetpapi.MapStringPutDataSubarraysType_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::size_type
        erase(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator position)
        erase(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator last)
        """
        return _fetpapi.MapStringPutDataSubarraysType_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator":
        r"""find(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator"""
        return _fetpapi.MapStringPutDataSubarraysType_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator":
        r"""lower_bound(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator"""
        return _fetpapi.MapStringPutDataSubarraysType_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator":
        r"""upper_bound(MapStringPutDataSubarraysType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType >::iterator"""
        return _fetpapi.MapStringPutDataSubarraysType_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringPutDataSubarraysType

# Register MapStringPutDataSubarraysType in _fetpapi:
_fetpapi.MapStringPutDataSubarraysType_swigregister(MapStringPutDataSubarraysType)
class MapStringPutUninitializedDataArrayType(object):
    r"""Proxy of C++ std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self) -> "swig::SwigPyIterator *":
        r"""iterator(MapStringPutUninitializedDataArrayType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self) -> "bool":
        r"""__nonzero__(MapStringPutUninitializedDataArrayType self) -> bool"""
        return _fetpapi.MapStringPutUninitializedDataArrayType___nonzero__(self)

    def __bool__(self) -> "bool":
        r"""__bool__(MapStringPutUninitializedDataArrayType self) -> bool"""
        return _fetpapi.MapStringPutUninitializedDataArrayType___bool__(self)

    def __len__(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::size_type":
        r"""__len__(MapStringPutUninitializedDataArrayType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::size_type"""
        return _fetpapi.MapStringPutUninitializedDataArrayType___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::mapped_type const &":
        r"""__getitem__(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & key) -> PutUninitializedDataArrayType"""
        return _fetpapi.MapStringPutUninitializedDataArrayType___getitem__(self, key)

    def __delitem__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const &") -> "void":
        r"""__delitem__(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & key)"""
        return _fetpapi.MapStringPutUninitializedDataArrayType___delitem__(self, key)

    def has_key(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const &") -> "bool":
        r"""has_key(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & key) -> bool"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_has_key(self, key)

    def keys(self) -> "PyObject *":
        r"""keys(MapStringPutUninitializedDataArrayType self) -> PyObject *"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_keys(self)

    def values(self) -> "PyObject *":
        r"""values(MapStringPutUninitializedDataArrayType self) -> PyObject *"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_values(self)

    def items(self) -> "PyObject *":
        r"""items(MapStringPutUninitializedDataArrayType self) -> PyObject *"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_items(self)

    def __contains__(self, key: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const &") -> "bool":
        r"""__contains__(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & key) -> bool"""
        return _fetpapi.MapStringPutUninitializedDataArrayType___contains__(self, key)

    def key_iterator(self) -> "swig::SwigPyIterator *":
        r"""key_iterator(MapStringPutUninitializedDataArrayType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_key_iterator(self)

    def value_iterator(self) -> "swig::SwigPyIterator *":
        r"""value_iterator(MapStringPutUninitializedDataArrayType self) -> SwigPyIterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_value_iterator(self)

    def __setitem__(self, *args) -> "void":
        r"""
        __setitem__(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & key)
        __setitem__(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & key, PutUninitializedDataArrayType x)
        """
        return _fetpapi.MapStringPutUninitializedDataArrayType___setitem__(self, *args)

    def asdict(self) -> "PyObject *":
        r"""asdict(MapStringPutUninitializedDataArrayType self) -> PyObject *"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_asdict(self)

    def __init__(self, *args):
        r"""
        __init__(MapStringPutUninitializedDataArrayType self, std::less< std::string > const & other) -> MapStringPutUninitializedDataArrayType
        __init__(MapStringPutUninitializedDataArrayType self) -> MapStringPutUninitializedDataArrayType
        __init__(MapStringPutUninitializedDataArrayType self, MapStringPutUninitializedDataArrayType other) -> MapStringPutUninitializedDataArrayType
        """
        _fetpapi.MapStringPutUninitializedDataArrayType_swiginit(self, _fetpapi.new_MapStringPutUninitializedDataArrayType(*args))

    def empty(self) -> "bool":
        r"""empty(MapStringPutUninitializedDataArrayType self) -> bool"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_empty(self)

    def size(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::size_type":
        r"""size(MapStringPutUninitializedDataArrayType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::size_type"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_size(self)

    def swap(self, v: "MapStringPutUninitializedDataArrayType") -> "void":
        r"""swap(MapStringPutUninitializedDataArrayType self, MapStringPutUninitializedDataArrayType v)"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_swap(self, v)

    def begin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator":
        r"""begin(MapStringPutUninitializedDataArrayType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_begin(self)

    def end(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator":
        r"""end(MapStringPutUninitializedDataArrayType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_end(self)

    def rbegin(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::reverse_iterator":
        r"""rbegin(MapStringPutUninitializedDataArrayType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::reverse_iterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_rbegin(self)

    def rend(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::reverse_iterator":
        r"""rend(MapStringPutUninitializedDataArrayType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::reverse_iterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_rend(self)

    def clear(self) -> "void":
        r"""clear(MapStringPutUninitializedDataArrayType self)"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_clear(self)

    def get_allocator(self) -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::allocator_type":
        r"""get_allocator(MapStringPutUninitializedDataArrayType self) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::allocator_type"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_get_allocator(self)

    def count(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::size_type":
        r"""count(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::size_type"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_count(self, x)

    def erase(self, *args) -> "void":
        r"""
        erase(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::size_type
        erase(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator position)
        erase(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator first, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator last)
        """
        return _fetpapi.MapStringPutUninitializedDataArrayType_erase(self, *args)

    def find(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator":
        r"""find(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_find(self, x)

    def lower_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator":
        r"""lower_bound(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_lower_bound(self, x)

    def upper_bound(self, x: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const &") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator":
        r"""upper_bound(MapStringPutUninitializedDataArrayType self, std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::key_type const & x) -> std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType >::iterator"""
        return _fetpapi.MapStringPutUninitializedDataArrayType_upper_bound(self, x)
    __swig_destroy__ = _fetpapi.delete_MapStringPutUninitializedDataArrayType

# Register MapStringPutUninitializedDataArrayType in _fetpapi:
_fetpapi.MapStringPutUninitializedDataArrayType_swigregister(MapStringPutUninitializedDataArrayType)
class RequestSession(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::RequestSession class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    applicationName: "std::string" = property(_fetpapi.RequestSession_applicationName_get, _fetpapi.RequestSession_applicationName_set, doc=r"""applicationName : std::string""")
    applicationVersion: "std::string" = property(_fetpapi.RequestSession_applicationVersion_get, _fetpapi.RequestSession_applicationVersion_set, doc=r"""applicationVersion : std::string""")
    clientInstanceId: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.RequestSession_clientInstanceId_get, _fetpapi.RequestSession_clientInstanceId_set, doc=r"""clientInstanceId : Energistics::Etp::v12::Datatypes::Uuid""")
    requestedProtocols: "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol,std::allocator< Energistics::Etp::v12::Datatypes::SupportedProtocol > >" = property(_fetpapi.RequestSession_requestedProtocols_get, _fetpapi.RequestSession_requestedProtocols_set, doc=r"""requestedProtocols : std::vector<(Energistics::Etp::v12::Datatypes::SupportedProtocol,std::allocator<(Energistics::Etp::v12::Datatypes::SupportedProtocol)>)>""")
    supportedDataObjects: "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject,std::allocator< Energistics::Etp::v12::Datatypes::SupportedDataObject > >" = property(_fetpapi.RequestSession_supportedDataObjects_get, _fetpapi.RequestSession_supportedDataObjects_set, doc=r"""supportedDataObjects : std::vector<(Energistics::Etp::v12::Datatypes::SupportedDataObject,std::allocator<(Energistics::Etp::v12::Datatypes::SupportedDataObject)>)>""")
    supportedCompression: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.RequestSession_supportedCompression_get, _fetpapi.RequestSession_supportedCompression_set, doc=r"""supportedCompression : std::vector<(std::string,std::allocator<(std::string)>)>""")
    supportedFormats: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.RequestSession_supportedFormats_get, _fetpapi.RequestSession_supportedFormats_set, doc=r"""supportedFormats : std::vector<(std::string,std::allocator<(std::string)>)>""")
    currentDateTime: "int64_t" = property(_fetpapi.RequestSession_currentDateTime_get, _fetpapi.RequestSession_currentDateTime_set, doc=r"""currentDateTime : int64_t""")
    endpointCapabilities: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataValue > > >" = property(_fetpapi.RequestSession_endpointCapabilities_get, _fetpapi.RequestSession_endpointCapabilities_set, doc=r"""endpointCapabilities : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataValue)>)>)>""")
    messageTypeId = _fetpapi.RequestSession_messageTypeId
    

    def __init__(self):
        r"""__init__(RequestSession self) -> RequestSession"""
        _fetpapi.RequestSession_swiginit(self, _fetpapi.new_RequestSession())
    __swig_destroy__ = _fetpapi.delete_RequestSession

# Register RequestSession in _fetpapi:
_fetpapi.RequestSession_swigregister(RequestSession)
class OpenSession(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::OpenSession class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    applicationName: "std::string" = property(_fetpapi.OpenSession_applicationName_get, _fetpapi.OpenSession_applicationName_set, doc=r"""applicationName : std::string""")
    applicationVersion: "std::string" = property(_fetpapi.OpenSession_applicationVersion_get, _fetpapi.OpenSession_applicationVersion_set, doc=r"""applicationVersion : std::string""")
    serverInstanceId: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.OpenSession_serverInstanceId_get, _fetpapi.OpenSession_serverInstanceId_set, doc=r"""serverInstanceId : Energistics::Etp::v12::Datatypes::Uuid""")
    supportedProtocols: "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol,std::allocator< Energistics::Etp::v12::Datatypes::SupportedProtocol > >" = property(_fetpapi.OpenSession_supportedProtocols_get, _fetpapi.OpenSession_supportedProtocols_set, doc=r"""supportedProtocols : std::vector<(Energistics::Etp::v12::Datatypes::SupportedProtocol,std::allocator<(Energistics::Etp::v12::Datatypes::SupportedProtocol)>)>""")
    supportedDataObjects: "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject,std::allocator< Energistics::Etp::v12::Datatypes::SupportedDataObject > >" = property(_fetpapi.OpenSession_supportedDataObjects_get, _fetpapi.OpenSession_supportedDataObjects_set, doc=r"""supportedDataObjects : std::vector<(Energistics::Etp::v12::Datatypes::SupportedDataObject,std::allocator<(Energistics::Etp::v12::Datatypes::SupportedDataObject)>)>""")
    supportedCompression: "std::string" = property(_fetpapi.OpenSession_supportedCompression_get, _fetpapi.OpenSession_supportedCompression_set, doc=r"""supportedCompression : std::string""")
    supportedFormats: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.OpenSession_supportedFormats_get, _fetpapi.OpenSession_supportedFormats_set, doc=r"""supportedFormats : std::vector<(std::string,std::allocator<(std::string)>)>""")
    sessionId: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.OpenSession_sessionId_get, _fetpapi.OpenSession_sessionId_set, doc=r"""sessionId : Energistics::Etp::v12::Datatypes::Uuid""")
    currentDateTime: "int64_t" = property(_fetpapi.OpenSession_currentDateTime_get, _fetpapi.OpenSession_currentDateTime_set, doc=r"""currentDateTime : int64_t""")
    endpointCapabilities: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataValue > > >" = property(_fetpapi.OpenSession_endpointCapabilities_get, _fetpapi.OpenSession_endpointCapabilities_set, doc=r"""endpointCapabilities : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataValue,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataValue)>)>)>""")
    messageTypeId = _fetpapi.OpenSession_messageTypeId
    

    def __init__(self):
        r"""__init__(OpenSession self) -> OpenSession"""
        _fetpapi.OpenSession_swiginit(self, _fetpapi.new_OpenSession())
    __swig_destroy__ = _fetpapi.delete_OpenSession

# Register OpenSession in _fetpapi:
_fetpapi.OpenSession_swigregister(OpenSession)
class CloseSession(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::CloseSession class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reason: "std::string" = property(_fetpapi.CloseSession_reason_get, _fetpapi.CloseSession_reason_set, doc=r"""reason : std::string""")
    messageTypeId = _fetpapi.CloseSession_messageTypeId
    

    def __init__(self):
        r"""__init__(CloseSession self) -> CloseSession"""
        _fetpapi.CloseSession_swiginit(self, _fetpapi.new_CloseSession())
    __swig_destroy__ = _fetpapi.delete_CloseSession

# Register CloseSession in _fetpapi:
_fetpapi.CloseSession_swigregister(CloseSession)
class Authorize(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::Authorize class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    authorization: "std::string" = property(_fetpapi.Authorize_authorization_get, _fetpapi.Authorize_authorization_set, doc=r"""authorization : std::string""")
    supplementalAuthorization: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.Authorize_supplementalAuthorization_get, _fetpapi.Authorize_supplementalAuthorization_set, doc=r"""supplementalAuthorization : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.Authorize_messageTypeId
    

    def __init__(self):
        r"""__init__(Authorize self) -> Authorize"""
        _fetpapi.Authorize_swiginit(self, _fetpapi.new_Authorize())
    __swig_destroy__ = _fetpapi.delete_Authorize

# Register Authorize in _fetpapi:
_fetpapi.Authorize_swigregister(Authorize)
class AuthorizeResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::AuthorizeResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "bool" = property(_fetpapi.AuthorizeResponse_success_get, _fetpapi.AuthorizeResponse_success_set, doc=r"""success : bool""")
    challenges: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.AuthorizeResponse_challenges_get, _fetpapi.AuthorizeResponse_challenges_set, doc=r"""challenges : std::vector<(std::string,std::allocator<(std::string)>)>""")
    messageTypeId = _fetpapi.AuthorizeResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(AuthorizeResponse self) -> AuthorizeResponse"""
        _fetpapi.AuthorizeResponse_swiginit(self, _fetpapi.new_AuthorizeResponse())
    __swig_destroy__ = _fetpapi.delete_AuthorizeResponse

# Register AuthorizeResponse in _fetpapi:
_fetpapi.AuthorizeResponse_swigregister(AuthorizeResponse)
class Ping(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::Ping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    currentDateTime: "int64_t" = property(_fetpapi.Ping_currentDateTime_get, _fetpapi.Ping_currentDateTime_set, doc=r"""currentDateTime : int64_t""")
    messageTypeId = _fetpapi.Ping_messageTypeId
    

    def __init__(self):
        r"""__init__(Ping self) -> Ping"""
        _fetpapi.Ping_swiginit(self, _fetpapi.new_Ping())
    __swig_destroy__ = _fetpapi.delete_Ping

# Register Ping in _fetpapi:
_fetpapi.Ping_swigregister(Ping)
class Pong(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::Pong class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    currentDateTime: "int64_t" = property(_fetpapi.Pong_currentDateTime_get, _fetpapi.Pong_currentDateTime_set, doc=r"""currentDateTime : int64_t""")
    messageTypeId = _fetpapi.Pong_messageTypeId
    

    def __init__(self):
        r"""__init__(Pong self) -> Pong"""
        _fetpapi.Pong_swiginit(self, _fetpapi.new_Pong())
    __swig_destroy__ = _fetpapi.delete_Pong

# Register Pong in _fetpapi:
_fetpapi.Pong_swigregister(Pong)
class ProtocolException(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::ProtocolException class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def has_error(self) -> "bool":
        r"""has_error(ProtocolException self) -> bool"""
        return _fetpapi.ProtocolException_has_error(self)

    def get_error(self) -> "Energistics::Etp::v12::Datatypes::ErrorInfo":
        r"""get_error(ProtocolException self) -> ErrorInfo"""
        return _fetpapi.ProtocolException_get_error(self)
    errors: "std::map< std::string,Energistics::Etp::v12::Datatypes::ErrorInfo,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::ErrorInfo > > >" = property(_fetpapi.ProtocolException_errors_get, _fetpapi.ProtocolException_errors_set, doc=r"""errors : std::map<(std::string,Energistics::Etp::v12::Datatypes::ErrorInfo,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::ErrorInfo)>)>)>""")
    messageTypeId = _fetpapi.ProtocolException_messageTypeId
    

    def __init__(self):
        r"""__init__(ProtocolException self) -> ProtocolException"""
        _fetpapi.ProtocolException_swiginit(self, _fetpapi.new_ProtocolException())
    __swig_destroy__ = _fetpapi.delete_ProtocolException

# Register ProtocolException in _fetpapi:
_fetpapi.ProtocolException_swigregister(ProtocolException)
class Acknowledge(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Core::Acknowledge class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    messageTypeId = _fetpapi.Acknowledge_messageTypeId
    
    protocolId: "int" = property(_fetpapi.Acknowledge_protocolId_get, _fetpapi.Acknowledge_protocolId_set, doc=r"""protocolId : int""")

    def __init__(self):
        r"""__init__(Acknowledge self) -> Acknowledge"""
        _fetpapi.Acknowledge_swiginit(self, _fetpapi.new_Acknowledge())
    __swig_destroy__ = _fetpapi.delete_Acknowledge

# Register Acknowledge in _fetpapi:
_fetpapi.Acknowledge_swigregister(Acknowledge)
class GetResources(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Discovery::GetResources class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    context: "Energistics::Etp::v12::Datatypes::Object::ContextInfo" = property(_fetpapi.GetResources_context_get, _fetpapi.GetResources_context_set, doc=r"""context : Energistics::Etp::v12::Datatypes::Object::ContextInfo""")
    scope: "Energistics::Etp::v12::Datatypes::Object::ContextScopeKind" = property(_fetpapi.GetResources_scope_get, _fetpapi.GetResources_scope_set, doc=r"""scope : Energistics::Etp::v12::Datatypes::Object::ContextScopeKind""")
    countObjects: "bool" = property(_fetpapi.GetResources_countObjects_get, _fetpapi.GetResources_countObjects_set, doc=r"""countObjects : bool""")

    def has_storeLastWriteFilter(self) -> "bool":
        r"""has_storeLastWriteFilter(GetResources self) -> bool"""
        return _fetpapi.GetResources_has_storeLastWriteFilter(self)

    def get_storeLastWriteFilter(self) -> "int64_t":
        r"""get_storeLastWriteFilter(GetResources self) -> int64_t"""
        return _fetpapi.GetResources_get_storeLastWriteFilter(self)

    def has_activeStatusFilter(self) -> "bool":
        r"""has_activeStatusFilter(GetResources self) -> bool"""
        return _fetpapi.GetResources_has_activeStatusFilter(self)

    def get_activeStatusFilter(self) -> "Energistics::Etp::v12::Datatypes::Object::ActiveStatusKind":
        r"""get_activeStatusFilter(GetResources self) -> Energistics::Etp::v12::Datatypes::Object::ActiveStatusKind"""
        return _fetpapi.GetResources_get_activeStatusFilter(self)
    messageTypeId = _fetpapi.GetResources_messageTypeId
    

    def __init__(self):
        r"""__init__(GetResources self) -> GetResources"""
        _fetpapi.GetResources_swiginit(self, _fetpapi.new_GetResources())
    __swig_destroy__ = _fetpapi.delete_GetResources

# Register GetResources in _fetpapi:
_fetpapi.GetResources_swigregister(GetResources)
class GetResourcesResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Discovery::GetResourcesResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    resources: "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource,std::allocator< Energistics::Etp::v12::Datatypes::Object::Resource > >" = property(_fetpapi.GetResourcesResponse_resources_get, _fetpapi.GetResourcesResponse_resources_set, doc=r"""resources : std::vector<(Energistics::Etp::v12::Datatypes::Object::Resource,std::allocator<(Energistics::Etp::v12::Datatypes::Object::Resource)>)>""")
    messageTypeId = _fetpapi.GetResourcesResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetResourcesResponse self) -> GetResourcesResponse"""
        _fetpapi.GetResourcesResponse_swiginit(self, _fetpapi.new_GetResourcesResponse())
    __swig_destroy__ = _fetpapi.delete_GetResourcesResponse

# Register GetResourcesResponse in _fetpapi:
_fetpapi.GetResourcesResponse_swigregister(GetResourcesResponse)
class GetDeletedResources(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Discovery::GetDeletedResources class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataspaceUri: "std::string" = property(_fetpapi.GetDeletedResources_dataspaceUri_get, _fetpapi.GetDeletedResources_dataspaceUri_set, doc=r"""dataspaceUri : std::string""")

    def has_deleteTimeFilter(self) -> "bool":
        r"""has_deleteTimeFilter(GetDeletedResources self) -> bool"""
        return _fetpapi.GetDeletedResources_has_deleteTimeFilter(self)

    def get_deleteTimeFilter(self) -> "int64_t":
        r"""get_deleteTimeFilter(GetDeletedResources self) -> int64_t"""
        return _fetpapi.GetDeletedResources_get_deleteTimeFilter(self)
    dataObjectTypes: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.GetDeletedResources_dataObjectTypes_get, _fetpapi.GetDeletedResources_dataObjectTypes_set, doc=r"""dataObjectTypes : std::vector<(std::string,std::allocator<(std::string)>)>""")
    messageTypeId = _fetpapi.GetDeletedResources_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDeletedResources self) -> GetDeletedResources"""
        _fetpapi.GetDeletedResources_swiginit(self, _fetpapi.new_GetDeletedResources())
    __swig_destroy__ = _fetpapi.delete_GetDeletedResources

# Register GetDeletedResources in _fetpapi:
_fetpapi.GetDeletedResources_swigregister(GetDeletedResources)
class GetDeletedResourcesResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Discovery::GetDeletedResourcesResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    deletedResources: "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource,std::allocator< Energistics::Etp::v12::Datatypes::Object::DeletedResource > >" = property(_fetpapi.GetDeletedResourcesResponse_deletedResources_get, _fetpapi.GetDeletedResourcesResponse_deletedResources_set, doc=r"""deletedResources : std::vector<(Energistics::Etp::v12::Datatypes::Object::DeletedResource,std::allocator<(Energistics::Etp::v12::Datatypes::Object::DeletedResource)>)>""")
    messageTypeId = _fetpapi.GetDeletedResourcesResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDeletedResourcesResponse self) -> GetDeletedResourcesResponse"""
        _fetpapi.GetDeletedResourcesResponse_swiginit(self, _fetpapi.new_GetDeletedResourcesResponse())
    __swig_destroy__ = _fetpapi.delete_GetDeletedResourcesResponse

# Register GetDeletedResourcesResponse in _fetpapi:
_fetpapi.GetDeletedResourcesResponse_swigregister(GetDeletedResourcesResponse)
class GetResourcesEdgesResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Discovery::GetResourcesEdgesResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    edges: "std::vector< Energistics::Etp::v12::Datatypes::Object::Edge,std::allocator< Energistics::Etp::v12::Datatypes::Object::Edge > >" = property(_fetpapi.GetResourcesEdgesResponse_edges_get, _fetpapi.GetResourcesEdgesResponse_edges_set, doc=r"""edges : std::vector<(Energistics::Etp::v12::Datatypes::Object::Edge,std::allocator<(Energistics::Etp::v12::Datatypes::Object::Edge)>)>""")
    messageTypeId = _fetpapi.GetResourcesEdgesResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetResourcesEdgesResponse self) -> GetResourcesEdgesResponse"""
        _fetpapi.GetResourcesEdgesResponse_swiginit(self, _fetpapi.new_GetResourcesEdgesResponse())
    __swig_destroy__ = _fetpapi.delete_GetResourcesEdgesResponse

# Register GetResourcesEdgesResponse in _fetpapi:
_fetpapi.GetResourcesEdgesResponse_swigregister(GetResourcesEdgesResponse)
class GetDataObjects(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Store::GetDataObjects class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uris: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.GetDataObjects_uris_get, _fetpapi.GetDataObjects_uris_set, doc=r"""uris : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    format: "std::string" = property(_fetpapi.GetDataObjects_format_get, _fetpapi.GetDataObjects_format_set, doc=r"""format : std::string""")
    messageTypeId = _fetpapi.GetDataObjects_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataObjects self) -> GetDataObjects"""
        _fetpapi.GetDataObjects_swiginit(self, _fetpapi.new_GetDataObjects())
    __swig_destroy__ = _fetpapi.delete_GetDataObjects

# Register GetDataObjects in _fetpapi:
_fetpapi.GetDataObjects_swigregister(GetDataObjects)
class PutDataObjects(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Store::PutDataObjects class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataObjects: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::Object::DataObject > > >" = property(_fetpapi.PutDataObjects_dataObjects_get, _fetpapi.PutDataObjects_dataObjects_set, doc=r"""dataObjects : std::map<(std::string,Energistics::Etp::v12::Datatypes::Object::DataObject,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::Object::DataObject)>)>)>""")
    pruneContainedObjects: "bool" = property(_fetpapi.PutDataObjects_pruneContainedObjects_get, _fetpapi.PutDataObjects_pruneContainedObjects_set, doc=r"""pruneContainedObjects : bool""")
    messageTypeId = _fetpapi.PutDataObjects_messageTypeId
    

    def __init__(self):
        r"""__init__(PutDataObjects self) -> PutDataObjects"""
        _fetpapi.PutDataObjects_swiginit(self, _fetpapi.new_PutDataObjects())
    __swig_destroy__ = _fetpapi.delete_PutDataObjects

# Register PutDataObjects in _fetpapi:
_fetpapi.PutDataObjects_swigregister(PutDataObjects)
class DeleteDataObjects(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Store::DeleteDataObjects class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uris: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.DeleteDataObjects_uris_get, _fetpapi.DeleteDataObjects_uris_set, doc=r"""uris : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    pruneContainedObjects: "bool" = property(_fetpapi.DeleteDataObjects_pruneContainedObjects_get, _fetpapi.DeleteDataObjects_pruneContainedObjects_set, doc=r"""pruneContainedObjects : bool""")
    messageTypeId = _fetpapi.DeleteDataObjects_messageTypeId
    

    def __init__(self):
        r"""__init__(DeleteDataObjects self) -> DeleteDataObjects"""
        _fetpapi.DeleteDataObjects_swiginit(self, _fetpapi.new_DeleteDataObjects())
    __swig_destroy__ = _fetpapi.delete_DeleteDataObjects

# Register DeleteDataObjects in _fetpapi:
_fetpapi.DeleteDataObjects_swigregister(DeleteDataObjects)
class GetDataObjectsResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Store::GetDataObjectsResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataObjects: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::Object::DataObject > > >" = property(_fetpapi.GetDataObjectsResponse_dataObjects_get, _fetpapi.GetDataObjectsResponse_dataObjects_set, doc=r"""dataObjects : std::map<(std::string,Energistics::Etp::v12::Datatypes::Object::DataObject,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::Object::DataObject)>)>)>""")
    messageTypeId = _fetpapi.GetDataObjectsResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataObjectsResponse self) -> GetDataObjectsResponse"""
        _fetpapi.GetDataObjectsResponse_swiginit(self, _fetpapi.new_GetDataObjectsResponse())
    __swig_destroy__ = _fetpapi.delete_GetDataObjectsResponse

# Register GetDataObjectsResponse in _fetpapi:
_fetpapi.GetDataObjectsResponse_swigregister(GetDataObjectsResponse)
class Store_Chunk(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Store::Chunk class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    blobId: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.Store_Chunk_blobId_get, _fetpapi.Store_Chunk_blobId_set, doc=r"""blobId : Energistics::Etp::v12::Datatypes::Uuid""")
    data: "std::string" = property(_fetpapi.Store_Chunk_data_get, _fetpapi.Store_Chunk_data_set, doc=r"""data : std::string""")
    final: "bool" = property(_fetpapi.Store_Chunk_final_get, _fetpapi.Store_Chunk_final_set, doc=r"""final : bool""")
    messageTypeId = _fetpapi.Store_Chunk_messageTypeId
    

    def __init__(self):
        r"""__init__(Store_Chunk self) -> Store_Chunk"""
        _fetpapi.Store_Chunk_swiginit(self, _fetpapi.new_Store_Chunk())
    __swig_destroy__ = _fetpapi.delete_Store_Chunk

# Register Store_Chunk in _fetpapi:
_fetpapi.Store_Chunk_swigregister(Store_Chunk)
class PutDataObjectsResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Store::PutDataObjectsResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::Object::PutResponse > > >" = property(_fetpapi.PutDataObjectsResponse_success_get, _fetpapi.PutDataObjectsResponse_success_set, doc=r"""success : std::map<(std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::Object::PutResponse)>)>)>""")
    messageTypeId = _fetpapi.PutDataObjectsResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(PutDataObjectsResponse self) -> PutDataObjectsResponse"""
        _fetpapi.PutDataObjectsResponse_swiginit(self, _fetpapi.new_PutDataObjectsResponse())
    __swig_destroy__ = _fetpapi.delete_PutDataObjectsResponse

# Register PutDataObjectsResponse in _fetpapi:
_fetpapi.PutDataObjectsResponse_swigregister(PutDataObjectsResponse)
class DeleteDataObjectsResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Store::DeleteDataObjectsResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    deletedUris: "std::map< std::string,Energistics::Etp::v12::Datatypes::ArrayOfString,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::ArrayOfString > > >" = property(_fetpapi.DeleteDataObjectsResponse_deletedUris_get, _fetpapi.DeleteDataObjectsResponse_deletedUris_set, doc=r"""deletedUris : std::map<(std::string,Energistics::Etp::v12::Datatypes::ArrayOfString,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::ArrayOfString)>)>)>""")
    messageTypeId = _fetpapi.DeleteDataObjectsResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(DeleteDataObjectsResponse self) -> DeleteDataObjectsResponse"""
        _fetpapi.DeleteDataObjectsResponse_swiginit(self, _fetpapi.new_DeleteDataObjectsResponse())
    __swig_destroy__ = _fetpapi.delete_DeleteDataObjectsResponse

# Register DeleteDataObjectsResponse in _fetpapi:
_fetpapi.DeleteDataObjectsResponse_swigregister(DeleteDataObjectsResponse)
class CopyDataObjectsByValue(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreOSDU::CopyDataObjectsByValue class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uri: "std::string" = property(_fetpapi.CopyDataObjectsByValue_uri_get, _fetpapi.CopyDataObjectsByValue_uri_set, doc=r"""uri : std::string""")
    sourcesDepth: "int32_t" = property(_fetpapi.CopyDataObjectsByValue_sourcesDepth_get, _fetpapi.CopyDataObjectsByValue_sourcesDepth_set, doc=r"""sourcesDepth : int32_t""")
    dataObjectTypes: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.CopyDataObjectsByValue_dataObjectTypes_get, _fetpapi.CopyDataObjectsByValue_dataObjectTypes_set, doc=r"""dataObjectTypes : std::vector<(std::string,std::allocator<(std::string)>)>""")
    messageTypeId = _fetpapi.CopyDataObjectsByValue_messageTypeId
    

    def __init__(self):
        r"""__init__(CopyDataObjectsByValue self) -> CopyDataObjectsByValue"""
        _fetpapi.CopyDataObjectsByValue_swiginit(self, _fetpapi.new_CopyDataObjectsByValue())
    __swig_destroy__ = _fetpapi.delete_CopyDataObjectsByValue

# Register CopyDataObjectsByValue in _fetpapi:
_fetpapi.CopyDataObjectsByValue_swigregister(CopyDataObjectsByValue)
class CopyDataObjectsByValueResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreOSDU::CopyDataObjectsByValueResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    copiedDataObjects: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.CopyDataObjectsByValueResponse_copiedDataObjects_get, _fetpapi.CopyDataObjectsByValueResponse_copiedDataObjects_set, doc=r"""copiedDataObjects : std::vector<(std::string,std::allocator<(std::string)>)>""")
    messageTypeId = _fetpapi.CopyDataObjectsByValueResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(CopyDataObjectsByValueResponse self) -> CopyDataObjectsByValueResponse"""
        _fetpapi.CopyDataObjectsByValueResponse_swiginit(self, _fetpapi.new_CopyDataObjectsByValueResponse())
    __swig_destroy__ = _fetpapi.delete_CopyDataObjectsByValueResponse

# Register CopyDataObjectsByValueResponse in _fetpapi:
_fetpapi.CopyDataObjectsByValueResponse_swigregister(CopyDataObjectsByValueResponse)
class GetDataArrays(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::GetDataArrays class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataArrays: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier > > >" = property(_fetpapi.GetDataArrays_dataArrays_get, _fetpapi.GetDataArrays_dataArrays_set, doc=r"""dataArrays : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier)>)>)>""")
    messageTypeId = _fetpapi.GetDataArrays_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataArrays self) -> GetDataArrays"""
        _fetpapi.GetDataArrays_swiginit(self, _fetpapi.new_GetDataArrays())
    __swig_destroy__ = _fetpapi.delete_GetDataArrays

# Register GetDataArrays in _fetpapi:
_fetpapi.GetDataArrays_swigregister(GetDataArrays)
class GetDataArraysResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::GetDataArraysResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataArrays: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray > > >" = property(_fetpapi.GetDataArraysResponse_dataArrays_get, _fetpapi.GetDataArraysResponse_dataArrays_set, doc=r"""dataArrays : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray)>)>)>""")
    messageTypeId = _fetpapi.GetDataArraysResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataArraysResponse self) -> GetDataArraysResponse"""
        _fetpapi.GetDataArraysResponse_swiginit(self, _fetpapi.new_GetDataArraysResponse())
    __swig_destroy__ = _fetpapi.delete_GetDataArraysResponse

# Register GetDataArraysResponse in _fetpapi:
_fetpapi.GetDataArraysResponse_swigregister(GetDataArraysResponse)
class GetDataSubarrays(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::GetDataSubarrays class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataSubarrays: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType > > >" = property(_fetpapi.GetDataSubarrays_dataSubarrays_get, _fetpapi.GetDataSubarrays_dataSubarrays_set, doc=r"""dataSubarrays : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::GetDataSubarraysType)>)>)>""")
    messageTypeId = _fetpapi.GetDataSubarrays_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataSubarrays self) -> GetDataSubarrays"""
        _fetpapi.GetDataSubarrays_swiginit(self, _fetpapi.new_GetDataSubarrays())
    __swig_destroy__ = _fetpapi.delete_GetDataSubarrays

# Register GetDataSubarrays in _fetpapi:
_fetpapi.GetDataSubarrays_swigregister(GetDataSubarrays)
class GetDataSubarraysResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::GetDataSubarraysResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataSubarrays: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray > > >" = property(_fetpapi.GetDataSubarraysResponse_dataSubarrays_get, _fetpapi.GetDataSubarraysResponse_dataSubarrays_set, doc=r"""dataSubarrays : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArray)>)>)>""")
    messageTypeId = _fetpapi.GetDataSubarraysResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataSubarraysResponse self) -> GetDataSubarraysResponse"""
        _fetpapi.GetDataSubarraysResponse_swiginit(self, _fetpapi.new_GetDataSubarraysResponse())
    __swig_destroy__ = _fetpapi.delete_GetDataSubarraysResponse

# Register GetDataSubarraysResponse in _fetpapi:
_fetpapi.GetDataSubarraysResponse_swigregister(GetDataSubarraysResponse)
class PutDataArrays(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::PutDataArrays class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataArrays: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType > > >" = property(_fetpapi.PutDataArrays_dataArrays_get, _fetpapi.PutDataArrays_dataArrays_set, doc=r"""dataArrays : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataArraysType)>)>)>""")
    messageTypeId = _fetpapi.PutDataArrays_messageTypeId
    

    def __init__(self):
        r"""__init__(PutDataArrays self) -> PutDataArrays"""
        _fetpapi.PutDataArrays_swiginit(self, _fetpapi.new_PutDataArrays())
    __swig_destroy__ = _fetpapi.delete_PutDataArrays

# Register PutDataArrays in _fetpapi:
_fetpapi.PutDataArrays_swigregister(PutDataArrays)
class PutDataArraysResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::PutDataArraysResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.PutDataArraysResponse_success_get, _fetpapi.PutDataArraysResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.PutDataArraysResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(PutDataArraysResponse self) -> PutDataArraysResponse"""
        _fetpapi.PutDataArraysResponse_swiginit(self, _fetpapi.new_PutDataArraysResponse())
    __swig_destroy__ = _fetpapi.delete_PutDataArraysResponse

# Register PutDataArraysResponse in _fetpapi:
_fetpapi.PutDataArraysResponse_swigregister(PutDataArraysResponse)
class PutDataSubarrays(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::PutDataSubarrays class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataSubarrays: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType > > >" = property(_fetpapi.PutDataSubarrays_dataSubarrays_get, _fetpapi.PutDataSubarrays_dataSubarrays_set, doc=r"""dataSubarrays : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutDataSubarraysType)>)>)>""")
    messageTypeId = _fetpapi.PutDataSubarrays_messageTypeId
    

    def __init__(self):
        r"""__init__(PutDataSubarrays self) -> PutDataSubarrays"""
        _fetpapi.PutDataSubarrays_swiginit(self, _fetpapi.new_PutDataSubarrays())
    __swig_destroy__ = _fetpapi.delete_PutDataSubarrays

# Register PutDataSubarrays in _fetpapi:
_fetpapi.PutDataSubarrays_swigregister(PutDataSubarrays)
class PutDataSubarraysResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::PutDataSubarraysResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.PutDataSubarraysResponse_success_get, _fetpapi.PutDataSubarraysResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.PutDataSubarraysResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(PutDataSubarraysResponse self) -> PutDataSubarraysResponse"""
        _fetpapi.PutDataSubarraysResponse_swiginit(self, _fetpapi.new_PutDataSubarraysResponse())
    __swig_destroy__ = _fetpapi.delete_PutDataSubarraysResponse

# Register PutDataSubarraysResponse in _fetpapi:
_fetpapi.PutDataSubarraysResponse_swigregister(PutDataSubarraysResponse)
class PutUninitializedDataArrays(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::PutUninitializedDataArrays class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataArrays: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType > > >" = property(_fetpapi.PutUninitializedDataArrays_dataArrays_get, _fetpapi.PutUninitializedDataArrays_dataArrays_set, doc=r"""dataArrays : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::PutUninitializedDataArrayType)>)>)>""")
    messageTypeId = _fetpapi.PutUninitializedDataArrays_messageTypeId
    

    def __init__(self):
        r"""__init__(PutUninitializedDataArrays self) -> PutUninitializedDataArrays"""
        _fetpapi.PutUninitializedDataArrays_swiginit(self, _fetpapi.new_PutUninitializedDataArrays())
    __swig_destroy__ = _fetpapi.delete_PutUninitializedDataArrays

# Register PutUninitializedDataArrays in _fetpapi:
_fetpapi.PutUninitializedDataArrays_swigregister(PutUninitializedDataArrays)
class PutUninitializedDataArraysResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::PutUninitializedDataArraysResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.PutUninitializedDataArraysResponse_success_get, _fetpapi.PutUninitializedDataArraysResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.PutUninitializedDataArraysResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(PutUninitializedDataArraysResponse self) -> PutUninitializedDataArraysResponse"""
        _fetpapi.PutUninitializedDataArraysResponse_swiginit(self, _fetpapi.new_PutUninitializedDataArraysResponse())
    __swig_destroy__ = _fetpapi.delete_PutUninitializedDataArraysResponse

# Register PutUninitializedDataArraysResponse in _fetpapi:
_fetpapi.PutUninitializedDataArraysResponse_swigregister(PutUninitializedDataArraysResponse)
class GetDataArrayMetadata(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::GetDataArrayMetadata class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataArrays: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier > > >" = property(_fetpapi.GetDataArrayMetadata_dataArrays_get, _fetpapi.GetDataArrayMetadata_dataArrays_set, doc=r"""dataArrays : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayIdentifier)>)>)>""")
    messageTypeId = _fetpapi.GetDataArrayMetadata_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataArrayMetadata self) -> GetDataArrayMetadata"""
        _fetpapi.GetDataArrayMetadata_swiginit(self, _fetpapi.new_GetDataArrayMetadata())
    __swig_destroy__ = _fetpapi.delete_GetDataArrayMetadata

# Register GetDataArrayMetadata in _fetpapi:
_fetpapi.GetDataArrayMetadata_swigregister(GetDataArrayMetadata)
class GetDataArrayMetadataResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataArray::GetDataArrayMetadataResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    arrayMetadata: "std::map< std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata > > >" = property(_fetpapi.GetDataArrayMetadataResponse_arrayMetadata_get, _fetpapi.GetDataArrayMetadataResponse_arrayMetadata_set, doc=r"""arrayMetadata : std::map<(std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::DataArrayTypes::DataArrayMetadata)>)>)>""")
    messageTypeId = _fetpapi.GetDataArrayMetadataResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataArrayMetadataResponse self) -> GetDataArrayMetadataResponse"""
        _fetpapi.GetDataArrayMetadataResponse_swiginit(self, _fetpapi.new_GetDataArrayMetadataResponse())
    __swig_destroy__ = _fetpapi.delete_GetDataArrayMetadataResponse

# Register GetDataArrayMetadataResponse in _fetpapi:
_fetpapi.GetDataArrayMetadataResponse_swigregister(GetDataArrayMetadataResponse)
class StartTransaction(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Transaction::StartTransaction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    readOnly: "bool" = property(_fetpapi.StartTransaction_readOnly_get, _fetpapi.StartTransaction_readOnly_set, doc=r"""readOnly : bool""")
    message: "std::string" = property(_fetpapi.StartTransaction_message_get, _fetpapi.StartTransaction_message_set, doc=r"""message : std::string""")
    dataspaceUris: "std::vector< std::string,std::allocator< std::string > >" = property(_fetpapi.StartTransaction_dataspaceUris_get, _fetpapi.StartTransaction_dataspaceUris_set, doc=r"""dataspaceUris : std::vector<(std::string,std::allocator<(std::string)>)>""")
    messageTypeId = _fetpapi.StartTransaction_messageTypeId
    

    def __init__(self):
        r"""__init__(StartTransaction self) -> StartTransaction"""
        _fetpapi.StartTransaction_swiginit(self, _fetpapi.new_StartTransaction())
    __swig_destroy__ = _fetpapi.delete_StartTransaction

# Register StartTransaction in _fetpapi:
_fetpapi.StartTransaction_swigregister(StartTransaction)
class StartTransactionResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Transaction::StartTransactionResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    transactionUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.StartTransactionResponse_transactionUuid_get, _fetpapi.StartTransactionResponse_transactionUuid_set, doc=r"""transactionUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    successful: "bool" = property(_fetpapi.StartTransactionResponse_successful_get, _fetpapi.StartTransactionResponse_successful_set, doc=r"""successful : bool""")
    failureReason: "std::string" = property(_fetpapi.StartTransactionResponse_failureReason_get, _fetpapi.StartTransactionResponse_failureReason_set, doc=r"""failureReason : std::string""")
    messageTypeId = _fetpapi.StartTransactionResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(StartTransactionResponse self) -> StartTransactionResponse"""
        _fetpapi.StartTransactionResponse_swiginit(self, _fetpapi.new_StartTransactionResponse())
    __swig_destroy__ = _fetpapi.delete_StartTransactionResponse

# Register StartTransactionResponse in _fetpapi:
_fetpapi.StartTransactionResponse_swigregister(StartTransactionResponse)
class CommitTransaction(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Transaction::CommitTransaction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    transactionUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.CommitTransaction_transactionUuid_get, _fetpapi.CommitTransaction_transactionUuid_set, doc=r"""transactionUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    messageTypeId = _fetpapi.CommitTransaction_messageTypeId
    

    def __init__(self):
        r"""__init__(CommitTransaction self) -> CommitTransaction"""
        _fetpapi.CommitTransaction_swiginit(self, _fetpapi.new_CommitTransaction())
    __swig_destroy__ = _fetpapi.delete_CommitTransaction

# Register CommitTransaction in _fetpapi:
_fetpapi.CommitTransaction_swigregister(CommitTransaction)
class RollbackTransaction(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Transaction::RollbackTransaction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    transactionUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.RollbackTransaction_transactionUuid_get, _fetpapi.RollbackTransaction_transactionUuid_set, doc=r"""transactionUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    messageTypeId = _fetpapi.RollbackTransaction_messageTypeId
    

    def __init__(self):
        r"""__init__(RollbackTransaction self) -> RollbackTransaction"""
        _fetpapi.RollbackTransaction_swiginit(self, _fetpapi.new_RollbackTransaction())
    __swig_destroy__ = _fetpapi.delete_RollbackTransaction

# Register RollbackTransaction in _fetpapi:
_fetpapi.RollbackTransaction_swigregister(RollbackTransaction)
class CommitTransactionResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Transaction::CommitTransactionResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    transactionUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.CommitTransactionResponse_transactionUuid_get, _fetpapi.CommitTransactionResponse_transactionUuid_set, doc=r"""transactionUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    successful: "bool" = property(_fetpapi.CommitTransactionResponse_successful_get, _fetpapi.CommitTransactionResponse_successful_set, doc=r"""successful : bool""")
    failureReason: "std::string" = property(_fetpapi.CommitTransactionResponse_failureReason_get, _fetpapi.CommitTransactionResponse_failureReason_set, doc=r"""failureReason : std::string""")
    messageTypeId = _fetpapi.CommitTransactionResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(CommitTransactionResponse self) -> CommitTransactionResponse"""
        _fetpapi.CommitTransactionResponse_swiginit(self, _fetpapi.new_CommitTransactionResponse())
    __swig_destroy__ = _fetpapi.delete_CommitTransactionResponse

# Register CommitTransactionResponse in _fetpapi:
_fetpapi.CommitTransactionResponse_swigregister(CommitTransactionResponse)
class RollbackTransactionResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Transaction::RollbackTransactionResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    transactionUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.RollbackTransactionResponse_transactionUuid_get, _fetpapi.RollbackTransactionResponse_transactionUuid_set, doc=r"""transactionUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    successful: "bool" = property(_fetpapi.RollbackTransactionResponse_successful_get, _fetpapi.RollbackTransactionResponse_successful_set, doc=r"""successful : bool""")
    failureReason: "std::string" = property(_fetpapi.RollbackTransactionResponse_failureReason_get, _fetpapi.RollbackTransactionResponse_failureReason_set, doc=r"""failureReason : std::string""")
    messageTypeId = _fetpapi.RollbackTransactionResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(RollbackTransactionResponse self) -> RollbackTransactionResponse"""
        _fetpapi.RollbackTransactionResponse_swiginit(self, _fetpapi.new_RollbackTransactionResponse())
    __swig_destroy__ = _fetpapi.delete_RollbackTransactionResponse

# Register RollbackTransactionResponse in _fetpapi:
_fetpapi.RollbackTransactionResponse_swigregister(RollbackTransactionResponse)
class GetDataspaces(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Dataspace::GetDataspaces class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def has_storeLastWriteFilter(self) -> "bool":
        r"""has_storeLastWriteFilter(GetDataspaces self) -> bool"""
        return _fetpapi.GetDataspaces_has_storeLastWriteFilter(self)

    def get_storeLastWriteFilter(self) -> "int64_t":
        r"""get_storeLastWriteFilter(GetDataspaces self) -> int64_t"""
        return _fetpapi.GetDataspaces_get_storeLastWriteFilter(self)
    messageTypeId = _fetpapi.GetDataspaces_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataspaces self) -> GetDataspaces"""
        _fetpapi.GetDataspaces_swiginit(self, _fetpapi.new_GetDataspaces())
    __swig_destroy__ = _fetpapi.delete_GetDataspaces

# Register GetDataspaces in _fetpapi:
_fetpapi.GetDataspaces_swigregister(GetDataspaces)
class GetDataspacesResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Dataspace::GetDataspacesResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataspaces: "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace,std::allocator< Energistics::Etp::v12::Datatypes::Object::Dataspace > >" = property(_fetpapi.GetDataspacesResponse_dataspaces_get, _fetpapi.GetDataspacesResponse_dataspaces_set, doc=r"""dataspaces : std::vector<(Energistics::Etp::v12::Datatypes::Object::Dataspace,std::allocator<(Energistics::Etp::v12::Datatypes::Object::Dataspace)>)>""")
    messageTypeId = _fetpapi.GetDataspacesResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataspacesResponse self) -> GetDataspacesResponse"""
        _fetpapi.GetDataspacesResponse_swiginit(self, _fetpapi.new_GetDataspacesResponse())
    __swig_destroy__ = _fetpapi.delete_GetDataspacesResponse

# Register GetDataspacesResponse in _fetpapi:
_fetpapi.GetDataspacesResponse_swigregister(GetDataspacesResponse)
class PutDataspaces(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Dataspace::PutDataspaces class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataspaces: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::Object::Dataspace > > >" = property(_fetpapi.PutDataspaces_dataspaces_get, _fetpapi.PutDataspaces_dataspaces_set, doc=r"""dataspaces : std::map<(std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace)>)>)>""")
    messageTypeId = _fetpapi.PutDataspaces_messageTypeId
    

    def __init__(self):
        r"""__init__(PutDataspaces self) -> PutDataspaces"""
        _fetpapi.PutDataspaces_swiginit(self, _fetpapi.new_PutDataspaces())
    __swig_destroy__ = _fetpapi.delete_PutDataspaces

# Register PutDataspaces in _fetpapi:
_fetpapi.PutDataspaces_swigregister(PutDataspaces)
class PutDataspacesResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Dataspace::PutDataspacesResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.PutDataspacesResponse_success_get, _fetpapi.PutDataspacesResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.PutDataspacesResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(PutDataspacesResponse self) -> PutDataspacesResponse"""
        _fetpapi.PutDataspacesResponse_swiginit(self, _fetpapi.new_PutDataspacesResponse())
    __swig_destroy__ = _fetpapi.delete_PutDataspacesResponse

# Register PutDataspacesResponse in _fetpapi:
_fetpapi.PutDataspacesResponse_swigregister(PutDataspacesResponse)
class DeleteDataspaces(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Dataspace::DeleteDataspaces class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uris: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.DeleteDataspaces_uris_get, _fetpapi.DeleteDataspaces_uris_set, doc=r"""uris : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.DeleteDataspaces_messageTypeId
    

    def __init__(self):
        r"""__init__(DeleteDataspaces self) -> DeleteDataspaces"""
        _fetpapi.DeleteDataspaces_swiginit(self, _fetpapi.new_DeleteDataspaces())
    __swig_destroy__ = _fetpapi.delete_DeleteDataspaces

# Register DeleteDataspaces in _fetpapi:
_fetpapi.DeleteDataspaces_swigregister(DeleteDataspaces)
class DeleteDataspacesResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::Dataspace::DeleteDataspacesResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.DeleteDataspacesResponse_success_get, _fetpapi.DeleteDataspacesResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.DeleteDataspacesResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(DeleteDataspacesResponse self) -> DeleteDataspacesResponse"""
        _fetpapi.DeleteDataspacesResponse_swiginit(self, _fetpapi.new_DeleteDataspacesResponse())
    __swig_destroy__ = _fetpapi.delete_DeleteDataspacesResponse

# Register DeleteDataspacesResponse in _fetpapi:
_fetpapi.DeleteDataspacesResponse_swigregister(DeleteDataspacesResponse)
class GetDataspaceInfo(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataspaceOSDU::GetDataspaceInfo class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uris: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.GetDataspaceInfo_uris_get, _fetpapi.GetDataspaceInfo_uris_set, doc=r"""uris : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.GetDataspaceInfo_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataspaceInfo self) -> GetDataspaceInfo"""
        _fetpapi.GetDataspaceInfo_swiginit(self, _fetpapi.new_GetDataspaceInfo())
    __swig_destroy__ = _fetpapi.delete_GetDataspaceInfo

# Register GetDataspaceInfo in _fetpapi:
_fetpapi.GetDataspaceInfo_swigregister(GetDataspaceInfo)
class GetDataspaceInfoResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataspaceOSDU::GetDataspaceInfoResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataspaces: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::Object::Dataspace > > >" = property(_fetpapi.GetDataspaceInfoResponse_dataspaces_get, _fetpapi.GetDataspaceInfoResponse_dataspaces_set, doc=r"""dataspaces : std::map<(std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace)>)>)>""")
    messageTypeId = _fetpapi.GetDataspaceInfoResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(GetDataspaceInfoResponse self) -> GetDataspaceInfoResponse"""
        _fetpapi.GetDataspaceInfoResponse_swiginit(self, _fetpapi.new_GetDataspaceInfoResponse())
    __swig_destroy__ = _fetpapi.delete_GetDataspaceInfoResponse

# Register GetDataspaceInfoResponse in _fetpapi:
_fetpapi.GetDataspaceInfoResponse_swigregister(GetDataspaceInfoResponse)
class CopyDataspacesContent(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataspaceOSDU::CopyDataspacesContent class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dataspaces: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.CopyDataspacesContent_dataspaces_get, _fetpapi.CopyDataspacesContent_dataspaces_set, doc=r"""dataspaces : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    targetDataspace: "std::string" = property(_fetpapi.CopyDataspacesContent_targetDataspace_get, _fetpapi.CopyDataspacesContent_targetDataspace_set, doc=r"""targetDataspace : std::string""")
    messageTypeId = _fetpapi.CopyDataspacesContent_messageTypeId
    

    def __init__(self):
        r"""__init__(CopyDataspacesContent self) -> CopyDataspacesContent"""
        _fetpapi.CopyDataspacesContent_swiginit(self, _fetpapi.new_CopyDataspacesContent())
    __swig_destroy__ = _fetpapi.delete_CopyDataspacesContent

# Register CopyDataspacesContent in _fetpapi:
_fetpapi.CopyDataspacesContent_swigregister(CopyDataspacesContent)
class CopyDataspacesContentResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataspaceOSDU::CopyDataspacesContentResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.CopyDataspacesContentResponse_success_get, _fetpapi.CopyDataspacesContentResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.CopyDataspacesContentResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(CopyDataspacesContentResponse self) -> CopyDataspacesContentResponse"""
        _fetpapi.CopyDataspacesContentResponse_swiginit(self, _fetpapi.new_CopyDataspacesContentResponse())
    __swig_destroy__ = _fetpapi.delete_CopyDataspacesContentResponse

# Register CopyDataspacesContentResponse in _fetpapi:
_fetpapi.CopyDataspacesContentResponse_swigregister(CopyDataspacesContentResponse)
class LockDataspaces(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataspaceOSDU::LockDataspaces class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uris: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.LockDataspaces_uris_get, _fetpapi.LockDataspaces_uris_set, doc=r"""uris : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    lock: "bool" = property(_fetpapi.LockDataspaces_lock_get, _fetpapi.LockDataspaces_lock_set, doc=r"""lock : bool""")
    messageTypeId = _fetpapi.LockDataspaces_messageTypeId
    

    def __init__(self):
        r"""__init__(LockDataspaces self) -> LockDataspaces"""
        _fetpapi.LockDataspaces_swiginit(self, _fetpapi.new_LockDataspaces())
    __swig_destroy__ = _fetpapi.delete_LockDataspaces

# Register LockDataspaces in _fetpapi:
_fetpapi.LockDataspaces_swigregister(LockDataspaces)
class LockDataspacesResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataspaceOSDU::LockDataspacesResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.LockDataspacesResponse_success_get, _fetpapi.LockDataspacesResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.LockDataspacesResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(LockDataspacesResponse self) -> LockDataspacesResponse"""
        _fetpapi.LockDataspacesResponse_swiginit(self, _fetpapi.new_LockDataspacesResponse())
    __swig_destroy__ = _fetpapi.delete_LockDataspacesResponse

# Register LockDataspacesResponse in _fetpapi:
_fetpapi.LockDataspacesResponse_swigregister(LockDataspacesResponse)
class CopyToDataspace(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataspaceOSDU::CopyToDataspace class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uris: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.CopyToDataspace_uris_get, _fetpapi.CopyToDataspace_uris_set, doc=r"""uris : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    dataspaceUri: "std::string" = property(_fetpapi.CopyToDataspace_dataspaceUri_get, _fetpapi.CopyToDataspace_dataspaceUri_set, doc=r"""dataspaceUri : std::string""")
    messageTypeId = _fetpapi.CopyToDataspace_messageTypeId
    

    def __init__(self):
        r"""__init__(CopyToDataspace self) -> CopyToDataspace"""
        _fetpapi.CopyToDataspace_swiginit(self, _fetpapi.new_CopyToDataspace())
    __swig_destroy__ = _fetpapi.delete_CopyToDataspace

# Register CopyToDataspace in _fetpapi:
_fetpapi.CopyToDataspace_swigregister(CopyToDataspace)
class CopyToDataspaceResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::DataspaceOSDU::CopyToDataspaceResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.CopyToDataspaceResponse_success_get, _fetpapi.CopyToDataspaceResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.CopyToDataspaceResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(CopyToDataspaceResponse self) -> CopyToDataspaceResponse"""
        _fetpapi.CopyToDataspaceResponse_swiginit(self, _fetpapi.new_CopyToDataspaceResponse())
    __swig_destroy__ = _fetpapi.delete_CopyToDataspaceResponse

# Register CopyToDataspaceResponse in _fetpapi:
_fetpapi.CopyToDataspaceResponse_swigregister(CopyToDataspaceResponse)
class SubscribeNotificationsResponse(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::SubscribeNotificationsResponse class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    success: "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >" = property(_fetpapi.SubscribeNotificationsResponse_success_get, _fetpapi.SubscribeNotificationsResponse_success_set, doc=r"""success : std::map<(std::string,std::string,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,std::string)>)>)>""")
    messageTypeId = _fetpapi.SubscribeNotificationsResponse_messageTypeId
    

    def __init__(self):
        r"""__init__(SubscribeNotificationsResponse self) -> SubscribeNotificationsResponse"""
        _fetpapi.SubscribeNotificationsResponse_swiginit(self, _fetpapi.new_SubscribeNotificationsResponse())
    __swig_destroy__ = _fetpapi.delete_SubscribeNotificationsResponse

# Register SubscribeNotificationsResponse in _fetpapi:
_fetpapi.SubscribeNotificationsResponse_swigregister(SubscribeNotificationsResponse)
class StoreNotification_Chunk(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::Chunk class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    blobId: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.StoreNotification_Chunk_blobId_get, _fetpapi.StoreNotification_Chunk_blobId_set, doc=r"""blobId : Energistics::Etp::v12::Datatypes::Uuid""")
    data: "std::string" = property(_fetpapi.StoreNotification_Chunk_data_get, _fetpapi.StoreNotification_Chunk_data_set, doc=r"""data : std::string""")
    final: "bool" = property(_fetpapi.StoreNotification_Chunk_final_get, _fetpapi.StoreNotification_Chunk_final_set, doc=r"""final : bool""")
    messageTypeId = _fetpapi.StoreNotification_Chunk_messageTypeId
    

    def __init__(self):
        r"""__init__(StoreNotification_Chunk self) -> StoreNotification_Chunk"""
        _fetpapi.StoreNotification_Chunk_swiginit(self, _fetpapi.new_StoreNotification_Chunk())
    __swig_destroy__ = _fetpapi.delete_StoreNotification_Chunk

# Register StoreNotification_Chunk in _fetpapi:
_fetpapi.StoreNotification_Chunk_swigregister(StoreNotification_Chunk)
class ObjectAccessRevoked(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::ObjectAccessRevoked class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uri: "std::string" = property(_fetpapi.ObjectAccessRevoked_uri_get, _fetpapi.ObjectAccessRevoked_uri_set, doc=r"""uri : std::string""")
    changeTime: "int64_t" = property(_fetpapi.ObjectAccessRevoked_changeTime_get, _fetpapi.ObjectAccessRevoked_changeTime_set, doc=r"""changeTime : int64_t""")
    requestUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.ObjectAccessRevoked_requestUuid_get, _fetpapi.ObjectAccessRevoked_requestUuid_set, doc=r"""requestUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    messageTypeId = _fetpapi.ObjectAccessRevoked_messageTypeId
    

    def __init__(self):
        r"""__init__(ObjectAccessRevoked self) -> ObjectAccessRevoked"""
        _fetpapi.ObjectAccessRevoked_swiginit(self, _fetpapi.new_ObjectAccessRevoked())
    __swig_destroy__ = _fetpapi.delete_ObjectAccessRevoked

# Register ObjectAccessRevoked in _fetpapi:
_fetpapi.ObjectAccessRevoked_swigregister(ObjectAccessRevoked)
class ObjectDeleted(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::ObjectDeleted class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    uri: "std::string" = property(_fetpapi.ObjectDeleted_uri_get, _fetpapi.ObjectDeleted_uri_set, doc=r"""uri : std::string""")
    changeTime: "int64_t" = property(_fetpapi.ObjectDeleted_changeTime_get, _fetpapi.ObjectDeleted_changeTime_set, doc=r"""changeTime : int64_t""")
    requestUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.ObjectDeleted_requestUuid_get, _fetpapi.ObjectDeleted_requestUuid_set, doc=r"""requestUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    messageTypeId = _fetpapi.ObjectDeleted_messageTypeId
    

    def __init__(self):
        r"""__init__(ObjectDeleted self) -> ObjectDeleted"""
        _fetpapi.ObjectDeleted_swiginit(self, _fetpapi.new_ObjectDeleted())
    __swig_destroy__ = _fetpapi.delete_ObjectDeleted

# Register ObjectDeleted in _fetpapi:
_fetpapi.ObjectDeleted_swigregister(ObjectDeleted)
class SubscriptionEnded(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::SubscriptionEnded class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reason: "std::string" = property(_fetpapi.SubscriptionEnded_reason_get, _fetpapi.SubscriptionEnded_reason_set, doc=r"""reason : std::string""")
    requestUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.SubscriptionEnded_requestUuid_get, _fetpapi.SubscriptionEnded_requestUuid_set, doc=r"""requestUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    messageTypeId = _fetpapi.SubscriptionEnded_messageTypeId
    

    def __init__(self):
        r"""__init__(SubscriptionEnded self) -> SubscriptionEnded"""
        _fetpapi.SubscriptionEnded_swiginit(self, _fetpapi.new_SubscriptionEnded())
    __swig_destroy__ = _fetpapi.delete_SubscriptionEnded

# Register SubscriptionEnded in _fetpapi:
_fetpapi.SubscriptionEnded_swigregister(SubscriptionEnded)
class UnsubscribeNotifications(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::UnsubscribeNotifications class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    requestUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.UnsubscribeNotifications_requestUuid_get, _fetpapi.UnsubscribeNotifications_requestUuid_set, doc=r"""requestUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    messageTypeId = _fetpapi.UnsubscribeNotifications_messageTypeId
    

    def __init__(self):
        r"""__init__(UnsubscribeNotifications self) -> UnsubscribeNotifications"""
        _fetpapi.UnsubscribeNotifications_swiginit(self, _fetpapi.new_UnsubscribeNotifications())
    __swig_destroy__ = _fetpapi.delete_UnsubscribeNotifications

# Register UnsubscribeNotifications in _fetpapi:
_fetpapi.UnsubscribeNotifications_swigregister(UnsubscribeNotifications)
class ObjectActiveStatusChanged(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::ObjectActiveStatusChanged class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    activeStatus: "Energistics::Etp::v12::Datatypes::Object::ActiveStatusKind" = property(_fetpapi.ObjectActiveStatusChanged_activeStatus_get, _fetpapi.ObjectActiveStatusChanged_activeStatus_set, doc=r"""activeStatus : Energistics::Etp::v12::Datatypes::Object::ActiveStatusKind""")
    changeTime: "int64_t" = property(_fetpapi.ObjectActiveStatusChanged_changeTime_get, _fetpapi.ObjectActiveStatusChanged_changeTime_set, doc=r"""changeTime : int64_t""")
    resource: "Energistics::Etp::v12::Datatypes::Object::Resource" = property(_fetpapi.ObjectActiveStatusChanged_resource_get, _fetpapi.ObjectActiveStatusChanged_resource_set, doc=r"""resource : Energistics::Etp::v12::Datatypes::Object::Resource""")
    requestUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.ObjectActiveStatusChanged_requestUuid_get, _fetpapi.ObjectActiveStatusChanged_requestUuid_set, doc=r"""requestUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    messageTypeId = _fetpapi.ObjectActiveStatusChanged_messageTypeId
    

    def __init__(self):
        r"""__init__(ObjectActiveStatusChanged self) -> ObjectActiveStatusChanged"""
        _fetpapi.ObjectActiveStatusChanged_swiginit(self, _fetpapi.new_ObjectActiveStatusChanged())
    __swig_destroy__ = _fetpapi.delete_ObjectActiveStatusChanged

# Register ObjectActiveStatusChanged in _fetpapi:
_fetpapi.ObjectActiveStatusChanged_swigregister(ObjectActiveStatusChanged)
class ObjectChanged(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::ObjectChanged class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    change: "Energistics::Etp::v12::Datatypes::Object::ObjectChange" = property(_fetpapi.ObjectChanged_change_get, _fetpapi.ObjectChanged_change_set, doc=r"""change : Energistics::Etp::v12::Datatypes::Object::ObjectChange""")
    requestUuid: "Energistics::Etp::v12::Datatypes::Uuid" = property(_fetpapi.ObjectChanged_requestUuid_get, _fetpapi.ObjectChanged_requestUuid_set, doc=r"""requestUuid : Energistics::Etp::v12::Datatypes::Uuid""")
    messageTypeId = _fetpapi.ObjectChanged_messageTypeId
    

    def __init__(self):
        r"""__init__(ObjectChanged self) -> ObjectChanged"""
        _fetpapi.ObjectChanged_swiginit(self, _fetpapi.new_ObjectChanged())
    __swig_destroy__ = _fetpapi.delete_ObjectChanged

# Register ObjectChanged in _fetpapi:
_fetpapi.ObjectChanged_swigregister(ObjectChanged)
class SubscribeNotifications(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::SubscribeNotifications class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    request: "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo > > >" = property(_fetpapi.SubscribeNotifications_request_get, _fetpapi.SubscribeNotifications_request_set, doc=r"""request : std::map<(std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo,std::less<(std::string)>,std::allocator<(std::pair<(q(const).std::string,Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo)>)>)>""")
    messageTypeId = _fetpapi.SubscribeNotifications_messageTypeId
    

    def __init__(self):
        r"""__init__(SubscribeNotifications self) -> SubscribeNotifications"""
        _fetpapi.SubscribeNotifications_swiginit(self, _fetpapi.new_SubscribeNotifications())
    __swig_destroy__ = _fetpapi.delete_SubscribeNotifications

# Register SubscribeNotifications in _fetpapi:
_fetpapi.SubscribeNotifications_swigregister(SubscribeNotifications)
class UnsolicitedStoreNotifications(object):
    r"""Proxy of C++ Energistics::Etp::v12::Protocol::StoreNotification::UnsolicitedStoreNotifications class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    subscriptions: "std::vector< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo,std::allocator< Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo > >" = property(_fetpapi.UnsolicitedStoreNotifications_subscriptions_get, _fetpapi.UnsolicitedStoreNotifications_subscriptions_set, doc=r"""subscriptions : std::vector<(Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo,std::allocator<(Energistics::Etp::v12::Datatypes::Object::SubscriptionInfo)>)>""")
    messageTypeId = _fetpapi.UnsolicitedStoreNotifications_messageTypeId
    

    def __init__(self):
        r"""__init__(UnsolicitedStoreNotifications self) -> UnsolicitedStoreNotifications"""
        _fetpapi.UnsolicitedStoreNotifications_swiginit(self, _fetpapi.new_UnsolicitedStoreNotifications())
    __swig_destroy__ = _fetpapi.delete_UnsolicitedStoreNotifications

# Register UnsolicitedStoreNotifications in _fetpapi:
_fetpapi.UnsolicitedStoreNotifications_swigregister(UnsolicitedStoreNotifications)
SHARED_PTR_DISOWN = _fetpapi.SHARED_PTR_DISOWN

class ProtocolHandlers(object):
    r"""Proxy of C++ etp::ProtocolHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getSession(self) -> "etp::AbstractSession *":
        r"""getSession(ProtocolHandlers self) -> AbstractSession"""
        return _fetpapi.ProtocolHandlers_getSession(self)
    __swig_destroy__ = _fetpapi.delete_ProtocolHandlers

# Register ProtocolHandlers in _fetpapi:
_fetpapi.ProtocolHandlers_swigregister(ProtocolHandlers)
class CoreHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::CoreHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(CoreHandlers self, AbstractSession mySession) -> CoreHandlers"""
        if self.__class__ == CoreHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.CoreHandlers_swiginit(self, _fetpapi.new_CoreHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_CoreHandlers

    def on_RequestSession(self, msg: "RequestSession", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`RequestSession`
        :param msg:			The ETP message body which has been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID to use if a response is needed to this message. It corresponds to the message ID of the received ETP message.
        """
        return _fetpapi.CoreHandlers_on_RequestSession(self, msg, correlationId)

    def on_OpenSession(self, msg: "OpenSession", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`OpenSession`
        :param msg:			The ETP message body which has been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID to use if a response is needed to this message. It corresponds to the message ID of the received ETP message.
        """
        return _fetpapi.CoreHandlers_on_OpenSession(self, msg, correlationId)

    def on_CloseSession(self, msg: "CloseSession", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`CloseSession`
        :param msg:			The ETP message body whic hhas been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID to use if a response is needed to this message. It corresponds to the message ID of the received ETP message.
        """
        return _fetpapi.CoreHandlers_on_CloseSession(self, msg, correlationId)

    def on_ProtocolException(self, msg: "ProtocolException", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`ProtocolException`
        :param msg:			The ETP message body which has been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID (not message ID) of the received exception message.
        """
        return _fetpapi.CoreHandlers_on_ProtocolException(self, msg, correlationId)

    def on_Acknowledge(self, msg: "Acknowledge", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`Acknowledge`
        :param msg:			The ETP message body which has been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID (not message ID) of the received ackknowledged message.
        """
        return _fetpapi.CoreHandlers_on_Acknowledge(self, msg, correlationId)

    def on_Ping(self, msg: "Ping", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`Ping`
        :param msg:			The ETP message body which has been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID to use if a response is needed to this message. It corresponds to the message ID of the received ETP message.
        """
        return _fetpapi.CoreHandlers_on_Ping(self, msg, correlationId)

    def on_Pong(self, msg: "Pong", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`Pong`
        :param msg:			The ETP message body which has been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID to use if a response is needed to this message. It corresponds to the message ID of the received ETP message.
        """
        return _fetpapi.CoreHandlers_on_Pong(self, msg, correlationId)

    def on_Authorize(self, msg: "Authorize", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`Authorize`
        :param msg:			The ETP message body which has been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID to use if a response is needed to this message. It corresponds to the message ID of the received ETP message.
        """
        return _fetpapi.CoreHandlers_on_Authorize(self, msg, correlationId)

    def on_AuthorizeResponse(self, msg: "AuthorizeResponse", correlationId: "int64_t") -> "void":
        r"""
        :type msg: :py:class:`AuthorizeResponse`
        :param msg:			The ETP message body which has been received and which is to be processed.
        :type correlationId: int
        :param correlationId:	It is the correlation ID to use if a response is needed to this message. It corresponds to the message ID of the received ETP message.
        """
        return _fetpapi.CoreHandlers_on_AuthorizeResponse(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_CoreHandlers(self)
        return weakref.proxy(self)

# Register CoreHandlers in _fetpapi:
_fetpapi.CoreHandlers_swigregister(CoreHandlers)
class DiscoveryHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::DiscoveryHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(DiscoveryHandlers self, AbstractSession mySession) -> DiscoveryHandlers"""
        if self.__class__ == DiscoveryHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.DiscoveryHandlers_swiginit(self, _fetpapi.new_DiscoveryHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_DiscoveryHandlers

    def on_GetResources(self, msg: "GetResources", correlationId: "int64_t") -> "void":
        r"""on_GetResources(DiscoveryHandlers self, GetResources msg, int64_t correlationId)"""
        return _fetpapi.DiscoveryHandlers_on_GetResources(self, msg, correlationId)

    def on_GetResourcesResponse(self, msg: "GetResourcesResponse", correlationId: "int64_t") -> "void":
        r"""on_GetResourcesResponse(DiscoveryHandlers self, GetResourcesResponse msg, int64_t correlationId)"""
        return _fetpapi.DiscoveryHandlers_on_GetResourcesResponse(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_DiscoveryHandlers(self)
        return weakref.proxy(self)

# Register DiscoveryHandlers in _fetpapi:
_fetpapi.DiscoveryHandlers_swigregister(DiscoveryHandlers)
class StoreHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::StoreHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(StoreHandlers self, AbstractSession mySession) -> StoreHandlers"""
        if self.__class__ == StoreHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.StoreHandlers_swiginit(self, _fetpapi.new_StoreHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_StoreHandlers

    def on_GetDataObjects(self, msg: "GetDataObjects", correlationId: "int64_t") -> "void":
        r"""on_GetDataObjects(StoreHandlers self, GetDataObjects msg, int64_t correlationId)"""
        return _fetpapi.StoreHandlers_on_GetDataObjects(self, msg, correlationId)

    def on_GetDataObjectsResponse(self, msg: "GetDataObjectsResponse", correlationId: "int64_t") -> "void":
        r"""on_GetDataObjectsResponse(StoreHandlers self, GetDataObjectsResponse msg, int64_t correlationId)"""
        return _fetpapi.StoreHandlers_on_GetDataObjectsResponse(self, msg, correlationId)

    def on_PutDataObjects(self, msg: "PutDataObjects", correlationId: "int64_t") -> "void":
        r"""on_PutDataObjects(StoreHandlers self, PutDataObjects msg, int64_t correlationId)"""
        return _fetpapi.StoreHandlers_on_PutDataObjects(self, msg, correlationId)

    def on_PutDataObjectsResponse(self, msg: "PutDataObjectsResponse", correlationId: "int64_t") -> "void":
        r"""on_PutDataObjectsResponse(StoreHandlers self, PutDataObjectsResponse msg, int64_t correlationId)"""
        return _fetpapi.StoreHandlers_on_PutDataObjectsResponse(self, msg, correlationId)

    def on_DeleteDataObjects(self, msg: "DeleteDataObjects", correlationId: "int64_t") -> "void":
        r"""on_DeleteDataObjects(StoreHandlers self, DeleteDataObjects msg, int64_t correlationId)"""
        return _fetpapi.StoreHandlers_on_DeleteDataObjects(self, msg, correlationId)

    def on_DeleteDataObjectsResponse(self, msg: "DeleteDataObjectsResponse", correlationId: "int64_t") -> "void":
        r"""on_DeleteDataObjectsResponse(StoreHandlers self, DeleteDataObjectsResponse msg, int64_t correlationId)"""
        return _fetpapi.StoreHandlers_on_DeleteDataObjectsResponse(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_StoreHandlers(self)
        return weakref.proxy(self)

# Register StoreHandlers in _fetpapi:
_fetpapi.StoreHandlers_swigregister(StoreHandlers)
class StoreOSDUHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::StoreOSDUHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(StoreOSDUHandlers self, AbstractSession mySession) -> StoreOSDUHandlers"""
        if self.__class__ == StoreOSDUHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.StoreOSDUHandlers_swiginit(self, _fetpapi.new_StoreOSDUHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_StoreOSDUHandlers

    def on_CopyDataObjectsByValue(self, msg: "CopyDataObjectsByValue", correlationId: "int64_t") -> "void":
        r"""on_CopyDataObjectsByValue(StoreOSDUHandlers self, CopyDataObjectsByValue msg, int64_t correlationId)"""
        return _fetpapi.StoreOSDUHandlers_on_CopyDataObjectsByValue(self, msg, correlationId)

    def on_CopyDataObjectsByValueResponse(self, msg: "CopyDataObjectsByValueResponse", correlationId: "int64_t") -> "void":
        r"""on_CopyDataObjectsByValueResponse(StoreOSDUHandlers self, CopyDataObjectsByValueResponse msg, int64_t correlationId)"""
        return _fetpapi.StoreOSDUHandlers_on_CopyDataObjectsByValueResponse(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_StoreOSDUHandlers(self)
        return weakref.proxy(self)

# Register StoreOSDUHandlers in _fetpapi:
_fetpapi.StoreOSDUHandlers_swigregister(StoreOSDUHandlers)
class StoreNotificationHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::StoreNotificationHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(StoreNotificationHandlers self, AbstractSession mySession) -> StoreNotificationHandlers"""
        if self.__class__ == StoreNotificationHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.StoreNotificationHandlers_swiginit(self, _fetpapi.new_StoreNotificationHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_StoreNotificationHandlers

    def on_SubscribeNotifications(self, msg: "SubscribeNotifications", messageId: "int64_t") -> "void":
        r"""on_SubscribeNotifications(StoreNotificationHandlers self, SubscribeNotifications msg, int64_t messageId)"""
        return _fetpapi.StoreNotificationHandlers_on_SubscribeNotifications(self, msg, messageId)

    def on_SubscribeNotificationsResponse(self, msg: "SubscribeNotificationsResponse", messageId: "int64_t") -> "void":
        r"""on_SubscribeNotificationsResponse(StoreNotificationHandlers self, SubscribeNotificationsResponse msg, int64_t messageId)"""
        return _fetpapi.StoreNotificationHandlers_on_SubscribeNotificationsResponse(self, msg, messageId)

    def on_UnsubscribeNotifications(self, msg: "UnsubscribeNotifications", messageId: "int64_t", correlationId: "int64_t") -> "void":
        r"""on_UnsubscribeNotifications(StoreNotificationHandlers self, UnsubscribeNotifications msg, int64_t messageId, int64_t correlationId)"""
        return _fetpapi.StoreNotificationHandlers_on_UnsubscribeNotifications(self, msg, messageId, correlationId)

    def on_UnsolicitedStoreNotifications(self, msg: "UnsolicitedStoreNotifications", correlationId: "int64_t") -> "void":
        r"""on_UnsolicitedStoreNotifications(StoreNotificationHandlers self, UnsolicitedStoreNotifications msg, int64_t correlationId)"""
        return _fetpapi.StoreNotificationHandlers_on_UnsolicitedStoreNotifications(self, msg, correlationId)

    def on_SubscriptionEnded(self, msg: "SubscriptionEnded", correlationId: "int64_t") -> "void":
        r"""on_SubscriptionEnded(StoreNotificationHandlers self, SubscriptionEnded msg, int64_t correlationId)"""
        return _fetpapi.StoreNotificationHandlers_on_SubscriptionEnded(self, msg, correlationId)

    def on_ObjectChanged(self, msg: "ObjectChanged", correlationId: "int64_t") -> "void":
        r"""on_ObjectChanged(StoreNotificationHandlers self, ObjectChanged msg, int64_t correlationId)"""
        return _fetpapi.StoreNotificationHandlers_on_ObjectChanged(self, msg, correlationId)

    def on_ObjectDeleted(self, msg: "ObjectDeleted", correlationId: "int64_t") -> "void":
        r"""on_ObjectDeleted(StoreNotificationHandlers self, ObjectDeleted msg, int64_t correlationId)"""
        return _fetpapi.StoreNotificationHandlers_on_ObjectDeleted(self, msg, correlationId)

    def on_ObjectAccessRevoked(self, msg: "ObjectAccessRevoked", correlationId: "int64_t") -> "void":
        r"""on_ObjectAccessRevoked(StoreNotificationHandlers self, ObjectAccessRevoked msg, int64_t correlationId)"""
        return _fetpapi.StoreNotificationHandlers_on_ObjectAccessRevoked(self, msg, correlationId)

    def on_ObjectActiveStatusChanged(self, msg: "ObjectActiveStatusChanged", correlationId: "int64_t") -> "void":
        r"""on_ObjectActiveStatusChanged(StoreNotificationHandlers self, ObjectActiveStatusChanged msg, int64_t correlationId)"""
        return _fetpapi.StoreNotificationHandlers_on_ObjectActiveStatusChanged(self, msg, correlationId)

    def on_Chunk(self, msg: "StoreNotification_Chunk", correlationId: "int64_t") -> "void":
        r"""on_Chunk(StoreNotificationHandlers self, StoreNotification_Chunk msg, int64_t correlationId)"""
        return _fetpapi.StoreNotificationHandlers_on_Chunk(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_StoreNotificationHandlers(self)
        return weakref.proxy(self)

# Register StoreNotificationHandlers in _fetpapi:
_fetpapi.StoreNotificationHandlers_swigregister(StoreNotificationHandlers)
class DataArrayHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::DataArrayHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(DataArrayHandlers self, AbstractSession mySession) -> DataArrayHandlers"""
        if self.__class__ == DataArrayHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.DataArrayHandlers_swiginit(self, _fetpapi.new_DataArrayHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_DataArrayHandlers

    def on_GetDataArrays(self, gda: "GetDataArrays", correlationId: "int64_t") -> "void":
        r"""on_GetDataArrays(DataArrayHandlers self, GetDataArrays gda, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_GetDataArrays(self, gda, correlationId)

    def on_GetDataArraysResponse(self, gdar: "GetDataArraysResponse", correlationId: "int64_t") -> "void":
        r"""on_GetDataArraysResponse(DataArrayHandlers self, GetDataArraysResponse gdar, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_GetDataArraysResponse(self, gdar, correlationId)

    def on_PutDataArrays(self, pda: "PutDataArrays", correlationId: "int64_t") -> "void":
        r"""on_PutDataArrays(DataArrayHandlers self, PutDataArrays pda, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_PutDataArrays(self, pda, correlationId)

    def on_PutDataArraysResponse(self, msg: "PutDataArraysResponse", correlationId: "int64_t") -> "void":
        r"""on_PutDataArraysResponse(DataArrayHandlers self, PutDataArraysResponse msg, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_PutDataArraysResponse(self, msg, correlationId)

    def on_GetDataSubarrays(self, msg: "GetDataSubarrays", correlationId: "int64_t") -> "void":
        r"""on_GetDataSubarrays(DataArrayHandlers self, GetDataSubarrays msg, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_GetDataSubarrays(self, msg, correlationId)

    def on_GetDataSubarraysResponse(self, msg: "GetDataSubarraysResponse", correlationId: "int64_t") -> "void":
        r"""on_GetDataSubarraysResponse(DataArrayHandlers self, GetDataSubarraysResponse msg, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_GetDataSubarraysResponse(self, msg, correlationId)

    def on_PutDataSubarrays(self, msg: "PutDataSubarrays", correlationId: "int64_t") -> "void":
        r"""on_PutDataSubarrays(DataArrayHandlers self, PutDataSubarrays msg, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_PutDataSubarrays(self, msg, correlationId)

    def on_PutDataSubarraysResponse(self, msg: "PutDataSubarraysResponse", correlationId: "int64_t") -> "void":
        r"""on_PutDataSubarraysResponse(DataArrayHandlers self, PutDataSubarraysResponse msg, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_PutDataSubarraysResponse(self, msg, correlationId)

    def on_GetDataArrayMetadata(self, gdam: "GetDataArrayMetadata", correlationId: "int64_t") -> "void":
        r"""on_GetDataArrayMetadata(DataArrayHandlers self, GetDataArrayMetadata gdam, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_GetDataArrayMetadata(self, gdam, correlationId)

    def on_GetDataArrayMetadataResponse(self, gdamr: "GetDataArrayMetadataResponse", correlationId: "int64_t") -> "void":
        r"""on_GetDataArrayMetadataResponse(DataArrayHandlers self, GetDataArrayMetadataResponse gdamr, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_GetDataArrayMetadataResponse(self, gdamr, correlationId)

    def on_PutUninitializedDataArrays(self, msg: "PutUninitializedDataArrays", correlationId: "int64_t") -> "void":
        r"""on_PutUninitializedDataArrays(DataArrayHandlers self, PutUninitializedDataArrays msg, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_PutUninitializedDataArrays(self, msg, correlationId)

    def on_PutUninitializedDataArraysResponse(self, msg: "PutUninitializedDataArraysResponse", correlationId: "int64_t") -> "void":
        r"""on_PutUninitializedDataArraysResponse(DataArrayHandlers self, PutUninitializedDataArraysResponse msg, int64_t correlationId)"""
        return _fetpapi.DataArrayHandlers_on_PutUninitializedDataArraysResponse(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_DataArrayHandlers(self)
        return weakref.proxy(self)

# Register DataArrayHandlers in _fetpapi:
_fetpapi.DataArrayHandlers_swigregister(DataArrayHandlers)
class TransactionHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::TransactionHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(TransactionHandlers self, AbstractSession mySession) -> TransactionHandlers"""
        if self.__class__ == TransactionHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.TransactionHandlers_swiginit(self, _fetpapi.new_TransactionHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_TransactionHandlers

    def on_StartTransaction(self, msg: "StartTransaction", correlationId: "int64_t") -> "void":
        r"""on_StartTransaction(TransactionHandlers self, StartTransaction msg, int64_t correlationId)"""
        return _fetpapi.TransactionHandlers_on_StartTransaction(self, msg, correlationId)

    def on_StartTransactionResponse(self, msg: "StartTransactionResponse", correlationId: "int64_t") -> "void":
        r"""on_StartTransactionResponse(TransactionHandlers self, StartTransactionResponse msg, int64_t correlationId)"""
        return _fetpapi.TransactionHandlers_on_StartTransactionResponse(self, msg, correlationId)

    def on_CommitTransaction(self, msg: "CommitTransaction", correlationId: "int64_t") -> "void":
        r"""on_CommitTransaction(TransactionHandlers self, CommitTransaction msg, int64_t correlationId)"""
        return _fetpapi.TransactionHandlers_on_CommitTransaction(self, msg, correlationId)

    def on_CommitTransactionResponse(self, msg: "CommitTransactionResponse", correlationId: "int64_t") -> "void":
        r"""on_CommitTransactionResponse(TransactionHandlers self, CommitTransactionResponse msg, int64_t correlationId)"""
        return _fetpapi.TransactionHandlers_on_CommitTransactionResponse(self, msg, correlationId)

    def on_RollbackTransaction(self, msg: "RollbackTransaction", correlationId: "int64_t") -> "void":
        r"""on_RollbackTransaction(TransactionHandlers self, RollbackTransaction msg, int64_t correlationId)"""
        return _fetpapi.TransactionHandlers_on_RollbackTransaction(self, msg, correlationId)

    def on_RollbackTransactionResponse(self, msg: "RollbackTransactionResponse", correlationId: "int64_t") -> "void":
        r"""on_RollbackTransactionResponse(TransactionHandlers self, RollbackTransactionResponse msg, int64_t correlationId)"""
        return _fetpapi.TransactionHandlers_on_RollbackTransactionResponse(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_TransactionHandlers(self)
        return weakref.proxy(self)

# Register TransactionHandlers in _fetpapi:
_fetpapi.TransactionHandlers_swigregister(TransactionHandlers)
class DataspaceHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::DataspaceHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(DataspaceHandlers self, AbstractSession mySession) -> DataspaceHandlers"""
        if self.__class__ == DataspaceHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.DataspaceHandlers_swiginit(self, _fetpapi.new_DataspaceHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_DataspaceHandlers

    def on_GetDataspaces(self, msg: "GetDataspaces", correlationId: "int64_t") -> "void":
        r"""on_GetDataspaces(DataspaceHandlers self, GetDataspaces msg, int64_t correlationId)"""
        return _fetpapi.DataspaceHandlers_on_GetDataspaces(self, msg, correlationId)

    def on_GetDataspacesResponse(self, msg: "GetDataspacesResponse", correlationId: "int64_t") -> "void":
        r"""on_GetDataspacesResponse(DataspaceHandlers self, GetDataspacesResponse msg, int64_t correlationId)"""
        return _fetpapi.DataspaceHandlers_on_GetDataspacesResponse(self, msg, correlationId)

    def on_PutDataspaces(self, msg: "PutDataspaces", correlationId: "int64_t") -> "void":
        r"""on_PutDataspaces(DataspaceHandlers self, PutDataspaces msg, int64_t correlationId)"""
        return _fetpapi.DataspaceHandlers_on_PutDataspaces(self, msg, correlationId)

    def on_PutDataspacesResponse(self, msg: "PutDataspacesResponse", correlationId: "int64_t") -> "void":
        r"""on_PutDataspacesResponse(DataspaceHandlers self, PutDataspacesResponse msg, int64_t correlationId)"""
        return _fetpapi.DataspaceHandlers_on_PutDataspacesResponse(self, msg, correlationId)

    def on_DeleteDataspaces(self, msg: "DeleteDataspaces", correlationId: "int64_t") -> "void":
        r"""on_DeleteDataspaces(DataspaceHandlers self, DeleteDataspaces msg, int64_t correlationId)"""
        return _fetpapi.DataspaceHandlers_on_DeleteDataspaces(self, msg, correlationId)

    def on_DeleteDataspacesResponse(self, msg: "DeleteDataspacesResponse", correlationId: "int64_t") -> "void":
        r"""on_DeleteDataspacesResponse(DataspaceHandlers self, DeleteDataspacesResponse msg, int64_t correlationId)"""
        return _fetpapi.DataspaceHandlers_on_DeleteDataspacesResponse(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_DataspaceHandlers(self)
        return weakref.proxy(self)

# Register DataspaceHandlers in _fetpapi:
_fetpapi.DataspaceHandlers_swigregister(DataspaceHandlers)
class DataspaceOSDUHandlers(ProtocolHandlers):
    r"""Proxy of C++ etp::DataspaceOSDUHandlers class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, mySession: "AbstractSession"):
        r"""__init__(DataspaceOSDUHandlers self, AbstractSession mySession) -> DataspaceOSDUHandlers"""
        if self.__class__ == DataspaceOSDUHandlers:
            _self = None
        else:
            _self = self
        _fetpapi.DataspaceOSDUHandlers_swiginit(self, _fetpapi.new_DataspaceOSDUHandlers(_self, mySession))
    __swig_destroy__ = _fetpapi.delete_DataspaceOSDUHandlers

    def on_GetDataspaceInfo(self, msg: "GetDataspaceInfo", correlationId: "int64_t") -> "void":
        r"""on_GetDataspaceInfo(DataspaceOSDUHandlers self, GetDataspaceInfo msg, int64_t correlationId)"""
        return _fetpapi.DataspaceOSDUHandlers_on_GetDataspaceInfo(self, msg, correlationId)

    def on_GetDataspaceInfoResponse(self, msg: "GetDataspaceInfoResponse", correlationId: "int64_t") -> "void":
        r"""on_GetDataspaceInfoResponse(DataspaceOSDUHandlers self, GetDataspaceInfoResponse msg, int64_t correlationId)"""
        return _fetpapi.DataspaceOSDUHandlers_on_GetDataspaceInfoResponse(self, msg, correlationId)

    def on_CopyDataspacesContent(self, msg: "CopyDataspacesContent", correlationId: "int64_t") -> "void":
        r"""on_CopyDataspacesContent(DataspaceOSDUHandlers self, CopyDataspacesContent msg, int64_t correlationId)"""
        return _fetpapi.DataspaceOSDUHandlers_on_CopyDataspacesContent(self, msg, correlationId)

    def on_CopyDataspacesContentResponse(self, msg: "CopyDataspacesContentResponse", correlationId: "int64_t") -> "void":
        r"""on_CopyDataspacesContentResponse(DataspaceOSDUHandlers self, CopyDataspacesContentResponse msg, int64_t correlationId)"""
        return _fetpapi.DataspaceOSDUHandlers_on_CopyDataspacesContentResponse(self, msg, correlationId)

    def on_LockDataspaces(self, msg: "LockDataspaces", correlationId: "int64_t") -> "void":
        r"""on_LockDataspaces(DataspaceOSDUHandlers self, LockDataspaces msg, int64_t correlationId)"""
        return _fetpapi.DataspaceOSDUHandlers_on_LockDataspaces(self, msg, correlationId)

    def on_LockDataspacesResponse(self, msg: "LockDataspacesResponse", correlationId: "int64_t") -> "void":
        r"""on_LockDataspacesResponse(DataspaceOSDUHandlers self, LockDataspacesResponse msg, int64_t correlationId)"""
        return _fetpapi.DataspaceOSDUHandlers_on_LockDataspacesResponse(self, msg, correlationId)

    def on_CopyToDataspace(self, msg: "CopyToDataspace", correlationId: "int64_t") -> "void":
        r"""on_CopyToDataspace(DataspaceOSDUHandlers self, CopyToDataspace msg, int64_t correlationId)"""
        return _fetpapi.DataspaceOSDUHandlers_on_CopyToDataspace(self, msg, correlationId)

    def on_CopyToDataspaceResponse(self, msg: "CopyToDataspaceResponse", correlationId: "int64_t") -> "void":
        r"""on_CopyToDataspaceResponse(DataspaceOSDUHandlers self, CopyToDataspaceResponse msg, int64_t correlationId)"""
        return _fetpapi.DataspaceOSDUHandlers_on_CopyToDataspaceResponse(self, msg, correlationId)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_DataspaceOSDUHandlers(self)
        return weakref.proxy(self)

# Register DataspaceOSDUHandlers in _fetpapi:
_fetpapi.DataspaceOSDUHandlers_swigregister(DataspaceOSDUHandlers)
class AbstractSession(object):
    r"""Proxy of C++ etp::AbstractSession class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def setTimeOut(self, timeOut: "double") -> "void":
        r"""Set the time out in milliseconds used when blocking waiting for message"""
        return _fetpapi.AbstractSession_setTimeOut(self, timeOut)

    def setCoreProtocolHandlers(self, coreHandlers: "std::shared_ptr< etp::CoreHandlers >") -> "void":
        r"""setCoreProtocolHandlers(AbstractSession self, std::shared_ptr< etp::CoreHandlers > coreHandlers)"""
        return _fetpapi.AbstractSession_setCoreProtocolHandlers(self, coreHandlers)

    def setDiscoveryProtocolHandlers(self, discoveryHandlers: "std::shared_ptr< etp::DiscoveryHandlers >") -> "void":
        r"""setDiscoveryProtocolHandlers(AbstractSession self, std::shared_ptr< etp::DiscoveryHandlers > discoveryHandlers)"""
        return _fetpapi.AbstractSession_setDiscoveryProtocolHandlers(self, discoveryHandlers)

    def setStoreProtocolHandlers(self, storeHandlers: "std::shared_ptr< etp::StoreHandlers >") -> "void":
        r"""setStoreProtocolHandlers(AbstractSession self, std::shared_ptr< etp::StoreHandlers > storeHandlers)"""
        return _fetpapi.AbstractSession_setStoreProtocolHandlers(self, storeHandlers)

    def setStoreOSDUProtocolHandlers(self, storeOSDUHandlers: "std::shared_ptr< etp::StoreOSDUHandlers >") -> "void":
        r"""setStoreOSDUProtocolHandlers(AbstractSession self, std::shared_ptr< etp::StoreOSDUHandlers > storeOSDUHandlers)"""
        return _fetpapi.AbstractSession_setStoreOSDUProtocolHandlers(self, storeOSDUHandlers)

    def setStoreNotificationProtocolHandlers(self, storeNotificationHandlers: "std::shared_ptr< etp::StoreNotificationHandlers >") -> "void":
        r"""setStoreNotificationProtocolHandlers(AbstractSession self, std::shared_ptr< etp::StoreNotificationHandlers > storeNotificationHandlers)"""
        return _fetpapi.AbstractSession_setStoreNotificationProtocolHandlers(self, storeNotificationHandlers)

    def setDataArrayProtocolHandlers(self, dataArrayHandlers: "std::shared_ptr< etp::DataArrayHandlers >") -> "void":
        r"""setDataArrayProtocolHandlers(AbstractSession self, std::shared_ptr< etp::DataArrayHandlers > dataArrayHandlers)"""
        return _fetpapi.AbstractSession_setDataArrayProtocolHandlers(self, dataArrayHandlers)

    def setTransactionProtocolHandlers(self, transactionHandlers: "std::shared_ptr< etp::TransactionHandlers >") -> "void":
        r"""setTransactionProtocolHandlers(AbstractSession self, std::shared_ptr< etp::TransactionHandlers > transactionHandlers)"""
        return _fetpapi.AbstractSession_setTransactionProtocolHandlers(self, transactionHandlers)

    def setDataspaceProtocolHandlers(self, dataspaceHandlers: "std::shared_ptr< etp::DataspaceHandlers >") -> "void":
        r"""setDataspaceProtocolHandlers(AbstractSession self, std::shared_ptr< etp::DataspaceHandlers > dataspaceHandlers)"""
        return _fetpapi.AbstractSession_setDataspaceProtocolHandlers(self, dataspaceHandlers)

    def setDataspaceOSDUProtocolHandlers(self, dataspaceOSDUHandlers: "std::shared_ptr< etp::DataspaceOSDUHandlers >") -> "void":
        r"""setDataspaceOSDUProtocolHandlers(AbstractSession self, std::shared_ptr< etp::DataspaceOSDUHandlers > dataspaceOSDUHandlers)"""
        return _fetpapi.AbstractSession_setDataspaceOSDUProtocolHandlers(self, dataspaceOSDUHandlers)

    def sendWithSpecificHandler(self, *args) -> "int64_t":
        r"""
        sendWithSpecificHandler(AbstractSession self, RequestSession mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, OpenSession mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CloseSession mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, ProtocolException mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, Acknowledge mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, Ping mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, Pong mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, Authorize mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, AuthorizeResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetResources mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetResourcesResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetResourcesEdgesResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDeletedResources mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDeletedResourcesResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataObjects mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataObjectsResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutDataObjects mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutDataObjectsResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, DeleteDataObjects mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, DeleteDataObjectsResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, Store_Chunk mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CopyDataObjectsByValue mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CopyDataObjectsByValueResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataArrays mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataArraysResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutDataArrays mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutDataArraysResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataSubarrays mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataSubarraysResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutDataSubarrays mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutDataSubarraysResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataArrayMetadata mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataArrayMetadataResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutUninitializedDataArrays mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutUninitializedDataArraysResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, StartTransaction mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, StartTransactionResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CommitTransaction mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CommitTransactionResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, RollbackTransaction mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, RollbackTransactionResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataspaces mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataspacesResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutDataspaces mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, PutDataspacesResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, DeleteDataspaces mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, DeleteDataspacesResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataspaceInfo mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, GetDataspaceInfoResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CopyDataspacesContent mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CopyDataspacesContentResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, LockDataspaces mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, LockDataspacesResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CopyToDataspace mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, CopyToDataspaceResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, SubscribeNotificationsResponse mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, StoreNotification_Chunk mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, ObjectAccessRevoked mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, ObjectDeleted mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, SubscriptionEnded mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, UnsubscribeNotifications mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, ObjectActiveStatusChanged mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, ObjectChanged mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, SubscribeNotifications mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        sendWithSpecificHandler(AbstractSession self, UnsolicitedStoreNotifications mb, std::shared_ptr< etp::ProtocolHandlers > specificHandler, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        """
        return _fetpapi.AbstractSession_sendWithSpecificHandler(self, *args)

    def send(self, *args) -> "int64_t":
        r"""
        send(AbstractSession self, RequestSession mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, OpenSession mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CloseSession mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, ProtocolException mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, Acknowledge mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, Ping mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, Pong mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, Authorize mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, AuthorizeResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetResources mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetResourcesResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetResourcesEdgesResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDeletedResources mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDeletedResourcesResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataObjects mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataObjectsResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutDataObjects mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutDataObjectsResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, DeleteDataObjects mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, DeleteDataObjectsResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, Store_Chunk mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CopyDataObjectsByValue mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CopyDataObjectsByValueResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataArrays mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataArraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutDataArrays mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutDataArraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataSubarrays mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataSubarraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutDataSubarrays mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutDataSubarraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataArrayMetadata mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataArrayMetadataResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutUninitializedDataArrays mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutUninitializedDataArraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, StartTransaction mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, StartTransactionResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CommitTransaction mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CommitTransactionResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, RollbackTransaction mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, RollbackTransactionResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataspaces mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataspacesResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutDataspaces mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, PutDataspacesResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, DeleteDataspaces mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, DeleteDataspacesResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataspaceInfo mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, GetDataspaceInfoResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CopyDataspacesContent mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CopyDataspacesContentResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, LockDataspaces mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, LockDataspacesResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CopyToDataspace mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, CopyToDataspaceResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, SubscribeNotificationsResponse mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, StoreNotification_Chunk mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, ObjectAccessRevoked mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, ObjectDeleted mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, SubscriptionEnded mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, UnsubscribeNotifications mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, ObjectActiveStatusChanged mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, ObjectChanged mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, SubscribeNotifications mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        send(AbstractSession self, UnsolicitedStoreNotifications mb, int64_t correlationId=0, int32_t messageFlags=0) -> int64_t
        """
        return _fetpapi.AbstractSession_send(self, *args)

    def sendAndBlock(self, *args) -> "void":
        r"""
        sendAndBlock(AbstractSession self, RequestSession mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, OpenSession mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CloseSession mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, ProtocolException mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, Acknowledge mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, Ping mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, Pong mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, Authorize mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, AuthorizeResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetResources mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetResourcesResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetResourcesEdgesResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDeletedResources mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDeletedResourcesResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataObjects mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataObjectsResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutDataObjects mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutDataObjectsResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, DeleteDataObjects mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, DeleteDataObjectsResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, Store_Chunk mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CopyDataObjectsByValue mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CopyDataObjectsByValueResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataArrays mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataArraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutDataArrays mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutDataArraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataSubarrays mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataSubarraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutDataSubarrays mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutDataSubarraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataArrayMetadata mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataArrayMetadataResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutUninitializedDataArrays mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutUninitializedDataArraysResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, StartTransaction mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, StartTransactionResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CommitTransaction mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CommitTransactionResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, RollbackTransaction mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, RollbackTransactionResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataspaces mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataspacesResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutDataspaces mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, PutDataspacesResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, DeleteDataspaces mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, DeleteDataspacesResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataspaceInfo mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, GetDataspaceInfoResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CopyDataspacesContent mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CopyDataspacesContentResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, LockDataspaces mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, LockDataspacesResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CopyToDataspace mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, CopyToDataspaceResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, SubscribeNotificationsResponse mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, StoreNotification_Chunk mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, ObjectAccessRevoked mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, ObjectDeleted mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, SubscriptionEnded mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, UnsubscribeNotifications mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, ObjectActiveStatusChanged mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, ObjectChanged mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, SubscribeNotifications mb, int64_t correlationId=0, int32_t messageFlags=0)
        sendAndBlock(AbstractSession self, UnsolicitedStoreNotifications mb, int64_t correlationId=0, int32_t messageFlags=0)
        """
        return _fetpapi.AbstractSession_sendAndBlock(self, *args)

    def isMessageStillProcessing(self, msgId: "int64_t") -> "bool":
        r"""Check wether a particular ETP message has been responded or not by the other agent."""
        return _fetpapi.AbstractSession_isMessageStillProcessing(self, msgId)

    def close(self) -> "void":
        r"""
        Send a message for closing to the server after having sent all previous messages.
        The session would really close only after all messages have been sent and responded.
        This method does not block.
        """
        return _fetpapi.AbstractSession_close(self)

    def closeAndBlock(self) -> "void":
        r"""
        Send a message for closing to the server after having sent all previous messages.
        The session would really close only after all messages have been sent and responded.
        This method does block.
        """
        return _fetpapi.AbstractSession_closeAndBlock(self)

    def isEtpSessionClosed(self) -> "bool":
        r"""Check if the ETP session (starting after the Core.OpenSession or Core.RequestSession message) is not opened yet or has been closed."""
        return _fetpapi.AbstractSession_isEtpSessionClosed(self)

    def getDataspaces(self, storeLastWriteFilter: "int64_t"=-1) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace,std::allocator< Energistics::Etp::v12::Datatypes::Object::Dataspace > >":
        r"""
        A customer sends to a store to discover all dataspaces available on the store.
        This function should be used with caution if Dataspace Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type storeLastWriteFilter: int, optional
        :param storeLastWriteFilter:	An optional filter to limit the dataspaces returned by date/time last saved to the store.
            								The store returns a list of dataspaces whose last changed date/time is greater than the specified date/time.
            								It must be a UTC dateTime value, serialized as a positive long, using the Avro logical type timestamp-micros (microseconds from the Unix Epoch, 1 January 1970 00:00:00.000000 UTC).
        :param return:	The available dataspaces the store could return.
        """
        return _fetpapi.AbstractSession_getDataspaces(self, storeLastWriteFilter)

    def putDataspaces(self, dataspaces: "MapStringDataspace") -> "std::vector< std::string,std::allocator< std::string > >":
        r"""
        A customer sends to a store to create one or more dataspaces.
        This function should be used with caution if Dataspace Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type dataspaces: std::map< std::string,Energistics::Etp::v12::Datatypes::Object::Dataspace,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::Object::Dataspace > > >
        :param dataspaces:  ETP general map : One each for each dataspace the customer wants to add or update.
        :param return:	The map keys corresponding to the dataspaces which have been put successfully into the store.
        """
        return _fetpapi.AbstractSession_putDataspaces(self, dataspaces)

    def deleteDataspaces(self, dataspaceUris: "MapStringString") -> "std::vector< std::string,std::allocator< std::string > >":
        r"""
        A customer sends to a store to delete one or more dataspaces.
        This function should be used with caution if Dataspace Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type dataspaceUris: std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >
        :param dataspaceUris:  ETP general map where the values must be the URIs for the dataspaces the customer wants to delete.
        :param return:	The map keys corresponding to the dataspaces which have been deleted successfully.
        """
        return _fetpapi.AbstractSession_deleteDataspaces(self, dataspaceUris)

    def getDataspaceInfo(self, dataspaceUris: "MapStringString") -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Dataspace,std::allocator< Energistics::Etp::v12::Datatypes::Object::Dataspace > >":
        r"""
        A customer sends to a store to discover information of particular dataspaces.
        This function should be used with caution if Dataspace OSDU Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type dataspaceUris: std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >
        :param dataspaceUris:	ETP general map : One each for each dataspace, identified by their URI, the customer wants to get info about.
        :param return:	The dataspaces the store could return.
        """
        return _fetpapi.AbstractSession_getDataspaceInfo(self, dataspaceUris)

    def copyDataspacesContent(self, sourceDataspaceUris: "MapStringString", targetDataspaceUri: "std::string const &") -> "std::vector< std::string,std::allocator< std::string > >":
        r"""
        Copy by reference some dataspaces into another one.
        This function should be used with caution if Dataspace OSDU Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type sourceDataspaceUris: std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >
        :param sourceDataspaceUris:  ETP general map : One each for each source dataspace to be copied. They are identified by their URI.
        :type targetDataspaceUri: string
        :param targetDataspaceUri:  The URI of the ETP dataspace where the sourceDataspaces have to be copied by reference.
        :param return:	The map keys corresponding to the dataspaces which have been successfully copied into the target dataspace.
        """
        return _fetpapi.AbstractSession_copyDataspacesContent(self, sourceDataspaceUris, targetDataspaceUri)

    def lockDataspaces(self, dataspaceUris: "MapStringString", lock: "bool") -> "std::vector< std::string,std::allocator< std::string > >":
        r"""
        A customer sends to a store to lock or unlock one or more dataspaces.
        This function should be used with caution if Dataspace OSDU Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type dataspaceUris: std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >
        :param dataspaceUris:  ETP general map where the values must be the URIs for the dataspaces the customer wants to lock or unlock.
        :type lock: boolean
        :param lock: true for locking the dataspaces, false to unlock the dataspaces
        :param return:	The map keys corresponding to the dataspaces which have been successfully locked or unlocked.
        """
        return _fetpapi.AbstractSession_lockDataspaces(self, dataspaceUris, lock)

    def copyToDataspace(self, sourceUris: "MapStringString", targetDataspaceUri: "std::string const &") -> "std::vector< std::string,std::allocator< std::string > >":
        r"""
        Copy by reference some dataobjects into another dataspace.
        This function should be used with caution if Dataspace OSDU Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type sourceUris: std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >
        :param sourceUris:  ETP general map : One each for each source dataobject to be copied. They are identified by their URI.
        :type targetDataspaceUri: string
        :param targetDataspaceUri:  The URI of the ETP dataspace where the source dataobjects have to be copied by reference.
        :param return:	The map keys corresponding to the dataobjects which have been successfully copied into the target dataspace.
        """
        return _fetpapi.AbstractSession_copyToDataspace(self, sourceUris, targetDataspaceUri)

    def getResources(self, context: "ContextInfo", scope: "Energistics::Etp::v12::Datatypes::Object::ContextScopeKind const &", storeLastWriteFilter: "int64_t"=-1, countObjects: "bool"=False) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::Resource,std::allocator< Energistics::Etp::v12::Datatypes::Object::Resource > >":
        r"""
        A Customer sends this message to a store to discover data objects in the store.
        This function should be used with caution if Discovery Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type context: :py:class:`ContextInfo`
        :param context:				Includes the URI of the dataspace or data object to begin the discovery, what specific types of data objects are of interest,
            								and how many "levels" of relationships in the model to discover, among others.
        :type scope: int
        :param scope:					Scope is specified in reference to the URI (which is entered in the context field).
            								It indicates which direction in the graph that the operation should proceed (targets or sources) and whether or not to include the starting point (self).
        :type storeLastWriteFilter: int, optional
        :param storeLastWriteFilter:	An optional filter to filter the discovery on a date when the data object was last written in a particular store.
            								The store returns resources whose storeLastWrite date/time is GREATER than the date/time specified in this filter field.
            								It must be a UTC dateTime value, serialized as a positive long, using the Avro logical type timestamp-micros (microseconds from the Unix Epoch, 1 January 1970 00:00:00.000000 UTC).
        :type countObjects: boolean, optional
        :param countObjects:			If true, the store provides counts of sources and targets for each resource identified by Discovery.
        :param return:					The resources corresponding to this query.
        """
        return _fetpapi.AbstractSession_getResources(self, context, scope, storeLastWriteFilter, countObjects)

    def getDeletedResources(self, *args) -> "std::vector< Energistics::Etp::v12::Datatypes::Object::DeletedResource,std::allocator< Energistics::Etp::v12::Datatypes::Object::DeletedResource > >":
        r"""
        A customer sends to a store to discover data objects that have been deleted (which are sometimes called "tombstones").
        This function should be used with caution if Discovery Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type dataspaceUri: string
        :param dataspaceUri:			The URI of the dataspace where the objects were deleted.
        :type deleteTimeFilter: int, optional
        :param deleteTimeFilter:		An optional filter to filter the discovery on a date when the data object was deleted in a particular store.
            								The store returns resources for objects whose delete times are greater than this value.
            								It must be a UTC dateTime value, serialized as a positive long, using the Avro logical type timestamp-micros (microseconds from the Unix Epoch, 1 January 1970 00:00:00.000000 UTC).
        :type dataObjectTypes: std::vector< std::string,std::allocator< std::string > >, optional
        :param dataObjectTypes:		Filter for the types of data objects you want. EXAMPLES: "witsml20.Well", "resqml20.obj_TectonicBoundaryFeature", "resqml20.*"
        :param return:					The deleted resources corresponding to this query.
        """
        return _fetpapi.AbstractSession_getDeletedResources(self, *args)

    def getDataObjects(self, uris: "MapStringString") -> "std::map< std::string,Energistics::Etp::v12::Datatypes::Object::DataObject,std::less< std::string >,std::allocator< std::pair< std::string const,Energistics::Etp::v12::Datatypes::Object::DataObject > > >":
        r"""
        A customer sends to a store to get one or more data objects, each identified by a URI.
        This function should be used with caution if Store Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type uris: std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >
        :param uris:	ETP general map where the values MUST be the URIs of a data object to be retrieved.
        :param return:	The received dataobjects in a map where the key makes the link between the asked uris and the received dataobjects.
        """
        return _fetpapi.AbstractSession_getDataObjects(self, uris)

    def putDataObjects(self, dataObjects: "MapStringDataObject") -> "std::vector< std::string,std::allocator< std::string > >":
        r"""
        A customer sends to a store to add or update one or more data objects.
        This function should be used with caution if Store Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :param uris:	ETP general map where the values MUST be the data for each data object in the request, including each one's URI.
        :param return:	The map keys corresponding to the dataObjects which have been put successfully.
        """
        return _fetpapi.AbstractSession_putDataObjects(self, dataObjects)

    def deleteDataObjects(self, uris: "MapStringString") -> "std::vector< std::string,std::allocator< std::string > >":
        r"""
        A customer sends to a store to delete one or more data objects from the store.
        This function should be used with caution if Store Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type uris: std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > >
        :param uris:	ETP general map where the values MUST be the URIs of a data object to be deleted.
        :param return:	The map keys corresponding to the dataObjects which have been deleted successfully.
        """
        return _fetpapi.AbstractSession_deleteDataObjects(self, uris)

    def startTransaction(self, *args) -> "std::string":
        r"""
        A customer sends to a store to begin a transaction.
        This function should be used with caution if Transaction Handlers have been overidden.
        It actually sends a message and block the current thread until a response has been received from the store.

        :type dataspaceUris: std::vector< std::string,std::allocator< std::string > >, optional
        :param dataspaceUris:  Indicates the dataspaces involved in the transaction. An empty STRING means the default dataspace. An empty LIST means all dataspaces.
        :type readOnly: boolean, optional
        :param readOnly:		Indicates that the request in the transaction is read-only (i.e., "get" messages).
        :rtype: string
        :return: Failure message or empty string if success
        """
        return _fetpapi.AbstractSession_startTransaction(self, *args)

    def rollbackTransaction(self) -> "std::string":
        r"""
        A customer sends to a store to commit and end a transaction. This message implies that the customer
        has received from or sent to the store all the data required for some purpose. The customer asserts that
        the data sent in the scope of this transaction is a consistent unit of work.
        It actually sends a message and block the current thread until a response has been received from the store.
        :rtype: string
        :return: Failure message or empty string if success
        """
        return _fetpapi.AbstractSession_rollbackTransaction(self)

    def commitTransaction(self) -> "std::string":
        r"""commitTransaction(AbstractSession self) -> std::string"""
        return _fetpapi.AbstractSession_commitTransaction(self)

    def setVerbose(self, verbose: "bool") -> "void":
        r"""Indicates if the session must be verbose or not"""
        return _fetpapi.AbstractSession_setVerbose(self, verbose)
    __swig_destroy__ = _fetpapi.delete_AbstractSession

# Register AbstractSession in _fetpapi:
_fetpapi.AbstractSession_swigregister(AbstractSession)

def getDataObjectType(uri: "std::string const &") -> "std::string":
    r"""
    Get the dataobject type from a canonical ETP 1.2 URI.

    :type uri: string
    :param uri:	The input canonical ETP 1.2 URI
    :rtype: string
    :return: The URI dataobject type or the empty string if the operation cannot succeed
    """
    return _fetpapi.getDataObjectType(uri)

def getDataspaceUri(uri: "std::string const &") -> "std::string":
    r"""
    Get the dataspace URI from a canonical ETP 1.2 URI.

    :type uri: string
    :param uri:	The input canonical ETP 1.2 URI
    :rtype: string
    :return: The dataspace URI or the empty string if the operation cannot succeed
    """
    return _fetpapi.getDataspaceUri(uri)

def validateUri(uri: "std::string const &", session: "AbstractSession"=None) -> "Energistics::Etp::v12::Datatypes::ErrorInfo":
    r"""
    :type session: :py:class:`AbstractSession`, optional
    :param session: Provide this parameter if you want to send a protocol exception in case of non validation.
    """
    return _fetpapi.validateUri(uri, session)

def validateDataObjectUri(uri: "std::string const &", session: "AbstractSession"=None) -> "Energistics::Etp::v12::Datatypes::ErrorInfo":
    r"""
    :type session: :py:class:`AbstractSession`, optional
    :param session: Provide this parameter if you want to send a protocol exception in case of non validation.
    """
    return _fetpapi.validateDataObjectUri(uri, session)

def buildSingleMessageProtocolException(m_code: "int32_t", m_message: "std::string const &") -> "Energistics::Etp::v12::Protocol::Core::ProtocolException":
    r"""Build a protocol exception message which only contains a single error message (not a messsage map)."""
    return _fetpapi.buildSingleMessageProtocolException(m_code, m_message)
class ClientSession(AbstractSession):
    r"""Proxy of C++ etp::ClientSession class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def run(self) -> "bool":
        r"""
        Run the websocket and then the ETP session.
        Everything related to this session (including the completion handlers) will operate on the same unique thread in a single event loop.
        """
        return _fetpapi.ClientSession_run(self)
    __swig_destroy__ = _fetpapi.delete_ClientSession

# Register ClientSession in _fetpapi:
_fetpapi.ClientSession_swigregister(ClientSession)
class InitializationParameters(object):
    r"""Proxy of C++ etp::InitializationParameters class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(InitializationParameters self, std::string const & instanceUuid, std::string const & etpServerUrl, std::string const & proxyUrl="") -> InitializationParameters
        __init__(InitializationParameters self, std::string const & instanceUuid, std::string const & host, unsigned short port, std::string const & urlPath="") -> InitializationParameters
        """
        if self.__class__ == InitializationParameters:
            _self = None
        else:
            _self = self
        _fetpapi.InitializationParameters_swiginit(self, _fetpapi.new_InitializationParameters(_self, *args))
    __swig_destroy__ = _fetpapi.delete_InitializationParameters

    def setMaxWebSocketMessagePayloadSize(self, value: "int64_t") -> "void":
        r"""setMaxWebSocketMessagePayloadSize(InitializationParameters self, int64_t value)"""
        return _fetpapi.InitializationParameters_setMaxWebSocketMessagePayloadSize(self, value)

    def getMaxWebSocketMessagePayloadSize(self) -> "uint64_t":
        r"""getMaxWebSocketMessagePayloadSize(InitializationParameters self) -> uint64_t"""
        return _fetpapi.InitializationParameters_getMaxWebSocketMessagePayloadSize(self)

    def setPreferredMaxFrameSize(self, value: "uint64_t") -> "void":
        r"""setPreferredMaxFrameSize(InitializationParameters self, uint64_t value)"""
        return _fetpapi.InitializationParameters_setPreferredMaxFrameSize(self, value)

    def getPreferredMaxFrameSize(self) -> "uint64_t":
        r"""getPreferredMaxFrameSize(InitializationParameters self) -> uint64_t"""
        return _fetpapi.InitializationParameters_getPreferredMaxFrameSize(self)

    def setAdditionalHandshakeHeaderFields(self, extraHandshakeHeaderFields: "MapStringString") -> "void":
        r"""setAdditionalHandshakeHeaderFields(InitializationParameters self, MapStringString extraHandshakeHeaderFields)"""
        return _fetpapi.InitializationParameters_setAdditionalHandshakeHeaderFields(self, extraHandshakeHeaderFields)

    def getAdditionalHandshakeHeaderFields(self) -> "std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > const &":
        r"""getAdditionalHandshakeHeaderFields(InitializationParameters self) -> MapStringString"""
        return _fetpapi.InitializationParameters_getAdditionalHandshakeHeaderFields(self)

    def setAdditionalCertificates(self, extraCertificates: "std::string const &") -> "void":
        r"""setAdditionalCertificates(InitializationParameters self, std::string const & extraCertificates)"""
        return _fetpapi.InitializationParameters_setAdditionalCertificates(self, extraCertificates)

    def getAdditionalCertificates(self) -> "std::string const &":
        r"""getAdditionalCertificates(InitializationParameters self) -> std::string const &"""
        return _fetpapi.InitializationParameters_getAdditionalCertificates(self)

    def getEtpServerHost(self) -> "std::string const &":
        r"""getEtpServerHost(InitializationParameters self) -> std::string const &"""
        return _fetpapi.InitializationParameters_getEtpServerHost(self)

    def getEtpServerPort(self) -> "uint16_t":
        r"""getEtpServerPort(InitializationParameters self) -> uint16_t"""
        return _fetpapi.InitializationParameters_getEtpServerPort(self)

    def getEtpServerUrlPath(self) -> "std::string const &":
        r"""getEtpServerUrlPath(InitializationParameters self) -> std::string const &"""
        return _fetpapi.InitializationParameters_getEtpServerUrlPath(self)

    def getProxyHost(self) -> "std::string const &":
        r"""getProxyHost(InitializationParameters self) -> std::string const &"""
        return _fetpapi.InitializationParameters_getProxyHost(self)

    def getProxyPort(self) -> "uint16_t":
        r"""getProxyPort(InitializationParameters self) -> uint16_t"""
        return _fetpapi.InitializationParameters_getProxyPort(self)

    def setForceTls(self, force: "bool") -> "void":
        r"""setForceTls(InitializationParameters self, bool force)"""
        return _fetpapi.InitializationParameters_setForceTls(self, force)

    def isTlsForced(self) -> "bool":
        r"""isTlsForced(InitializationParameters self) -> bool"""
        return _fetpapi.InitializationParameters_isTlsForced(self)

    def getApplicationName(self) -> "std::string":
        r"""getApplicationName(InitializationParameters self) -> std::string"""
        return _fetpapi.InitializationParameters_getApplicationName(self)

    def getApplicationVersion(self) -> "std::string":
        r"""getApplicationVersion(InitializationParameters self) -> std::string"""
        return _fetpapi.InitializationParameters_getApplicationVersion(self)

    def makeSupportedDataObjects(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedDataObject,std::allocator< Energistics::Etp::v12::Datatypes::SupportedDataObject > >":
        r"""makeSupportedDataObjects(InitializationParameters self) -> SupportedDataObjectVector"""
        return _fetpapi.InitializationParameters_makeSupportedDataObjects(self)

    def makeSupportedProtocols(self) -> "std::vector< Energistics::Etp::v12::Datatypes::SupportedProtocol,std::allocator< Energistics::Etp::v12::Datatypes::SupportedProtocol > >":
        r"""makeSupportedProtocols(InitializationParameters self) -> SupportedProtocolVector"""
        return _fetpapi.InitializationParameters_makeSupportedProtocols(self)

    def postSessionCreationOperation(self, session: "AbstractSession") -> "void":
        r"""Override this method in order to register some dedicated protocol handlers for a session."""
        return _fetpapi.InitializationParameters_postSessionCreationOperation(self, session)
    def __disown__(self):
        self.this.disown()
        _fetpapi.disown_InitializationParameters(self)
        return weakref.proxy(self)

# Register InitializationParameters in _fetpapi:
_fetpapi.InitializationParameters_swigregister(InitializationParameters)

def createClientSession(*args) -> "std::shared_ptr< etp::ClientSession >":
    r"""
    Create a client session based on some initialization parameters and authorization information.
    It does not run the created client session.
    :type initializationParams: :py:class:`InitializationParameters`
    :param initializationParams:	The initialization parameters
    :type etpServerAuthorization: string
    :param etpServerAuthorization: The etp server authorization. It generally starts by "Bearer" followed by a token i.e. "Bearer myToken"
    :type proxyAuthorization: string, optional
    :param proxyAuthorization:		The proxy authorization. Necessary if the session connects to the ETP server through a protected proxy.
    """
    return _fetpapi.createClientSession(*args)
class FesapiHdfProxyFactory(fesapi.HdfProxyFactory):
    r"""Proxy of C++ etp::FesapiHdfProxyFactory class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, session: "AbstractSession"):
        r"""__init__(FesapiHdfProxyFactory self, AbstractSession session) -> FesapiHdfProxyFactory"""
        _fetpapi.FesapiHdfProxyFactory_swiginit(self, _fetpapi.new_FesapiHdfProxyFactory(session))
    __swig_destroy__ = _fetpapi.delete_FesapiHdfProxyFactory

# Register FesapiHdfProxyFactory in _fetpapi:
_fetpapi.FesapiHdfProxyFactory_swigregister(FesapiHdfProxyFactory)

def buildEtpResourceFromEnergisticsObject(*args) -> "Energistics::Etp::v12::Datatypes::Object::Resource":
    r"""
    *Overload 1:*

    Build and return an ETP resource from an Energistics object.
    :type obj: :py:class:`AbstractObject`
    :param obj:		The input Energistics obj
    :type countRels: boolean, optional
    :param countRels:	Indicate if the returned resource contain the count of source or target relationships.
    :rtype: :py:class:`Resource`
    :return: The ETP resource built from the Energistics object


    |

    *Overload 2:*

    Build and return an ETP resource from an Energistics object defined by an UUID in a DataObjectRepository.
    :type repo: common::DataObjectRepository
    :param repo:		The repository where the required UUID is defined
    :type uuid: string
    :param uuid:		The UUID describing the Energistics object
    :type countRels: boolean, optional
    :param countRels:	Indicate if the returned resource contain the count of source or target relationships.
    :rtype: :py:class:`Resource`
    :return: The ETP resource built from the Energistics object


    |

    *Overload 3:*

    Build and return an ETP resource from an Energistics object defined by an UUID in a DataObjectRepository.
    :type repo: common::DataObjectRepository
    :param repo:		The repository where the required UUID is defined
    :type uuid: string
    :param uuid:		The UUID describing the Energistics object
    :param countRels:	Indicate if the returned resource contain the count of source or target relationships.
    :rtype: :py:class:`Resource`
    :return: The ETP resource built from the Energistics object
    """
    return _fetpapi.buildEtpResourceFromEnergisticsObject(*args)

def buildEtpDataObjectFromEnergisticsObject(*args) -> "Energistics::Etp::v12::Datatypes::Object::DataObject":
    r"""
    *Overload 1:*

    Build and return an ETP data object from an Energistics object.
    :type obj: :py:class:`AbstractObject`
    :param obj:	The input Energistics obj
    :rtype: :py:class:`DataObject`
    :return: The ETP data object built from the Energistics object


    |

    *Overload 2:*

    Build and return an ETP data object from an Energistics object defined by an UUID in a DataObjectRepository.
    :type repo: common::DataObjectRepository
    :param repo:		The repository where the required UUID is defined
    :type uuid: string
    :param uuid:		The UUID describing the Energistics object
    :rtype: :py:class:`DataObject`
    :return: The ETP data object built from the Energistics object


    |

    *Overload 3:*

    Build and return an ETP data object from an Energistics object defined by an UUID in a DataObjectRepository.
    :type repo: common::DataObjectRepository
    :param repo:		The repository where the required UUID is defined
    :type uuid: string
    :param uuid:		The UUID describing the Energistics object
    :rtype: :py:class:`DataObject`
    :return: The ETP data object built from the Energistics object
    """
    return _fetpapi.buildEtpDataObjectFromEnergisticsObject(*args)

def setSessionOfHdfProxies(repo: "common::DataObjectRepository const &", session: "AbstractSession") -> "void":
    r"""
    Set the session of all HDF Proxies included in a DataObjectRepository.
    :type repo: common::DataObjectRepository
    :param repo:		The repository where the HDF Proxies to update are located
    :type session: :py:class:`AbstractSession`
    :param session:	The new session to attach to al HDF Proxies of repo
    """
    return _fetpapi.setSessionOfHdfProxies(repo, session)

