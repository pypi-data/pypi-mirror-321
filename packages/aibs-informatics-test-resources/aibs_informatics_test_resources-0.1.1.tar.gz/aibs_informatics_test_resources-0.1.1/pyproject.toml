# -----------------------------------------------------------------------------
##  Build System Configurations
#   https://setuptools.pypa.io/en/latest/setuptools.html#building-and-distributing-packages-with-setuptools
# -----------------------------------------------------------------------------

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# -----------------------------------------------------------------------------
[project]
name = "aibs-informatics-test-resources"
authors = [{ name = "AIBS Informatics Group", email = "marmot@alleninstitute.onmicrosoft.com"}]
maintainers = [{ name = "AIBS Informatics Group", email = "marmot@alleninstitute.onmicrosoft.com"}]
description = "unit test resources for AIBS informatics packages"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
dynamic = ["version"]

requires-python = ">=3.9"
dependencies = [
    "coverage[toml]~=7.3",
    "pytest~=7.4",
    "pytest-cov",
]

[project.optional-dependencies]
all = [
    "aibs-informatics-test-resources[linting]",
    "aibs-informatics-test-resources[typing]",
]

linting = [
    "black~=23.11.0",
    "isort~=5.10",
    "ruff~=0.9",
]

typing = [
    "mypy~=1.6",
]

[dependency-groups]

dev = [
    { include-group = 'linting' },
    { include-group = 'typing' },
]

release = [
    { include-group = 'bump' },
    { include-group = 'build' }    
]

linting = [
    "ruff~=0.9",
]

typing = [
    "mypy",
]   

bump = [
    "bump-my-version",
]

build = [
    "build",
    "wheel",
]


[tool.setuptools.packages.find]
where = ["src"]

[tool.hatch.version]
path = "src/aibs_informatics_test_resources/__version__.py"

[project.urls]
Documentation = "https://.github.io/aibs-informatics-test-resources/"
Homepage = "https://github.com/AllenInstitute/aibs-informatics-test-resources/"
Issues = "https://github.com/AllenInstitute/aibs-informatics-test-resources/issues"
Repository = "https://github.com/AllenInstitute/aibs-informatics-test-resources/"


# -----------------------------------------------------------------------------
##  astral-uv Configurations
#   https://docs.astral.sh/uv/getting-started/
# -----------------------------------------------------------------------------

[tool.uv]

# -----------------------------------------------------------------------------
##  Pyright Configurations
#   https://github.com/microsoft/pyright/blob/main/docs/configuration.md
# -----------------------------------------------------------------------------

[tool.pyright]
reportGeneralTypeIssues = false
typeCheckingMode = "basic"

# -----------------------------------------------------------------------------
##  Coverage Configurations 
#   https://coverage.readthedocs.io/en/7.0.4/config.html#
# -----------------------------------------------------------------------------

[tool.coverage]
# Note: we use pytest-cov to generate coverage reports
#       when running tests. but these coverage configs
#       are read when doing so.  
[tool.coverage.run]
branch = true
command_line = "coverage -m pytest"
data_file = "build/.coverage"
source = [
    "src/"
]

[tool.coverage.report]
omit = [
    "test/*",
    "src/aibs_informatics_test_resources/__version__.py",
]
skip_empty = true

[tool.coverage.html]
directory = "build/documentation/coverage"

[tool.coverage.xml]
output = "build/documentation/coverage.xml"

# -----------------------------------------------------------------------------
##  pytest Configurations
#   https://docs.pytest.org/en/7.2.x/reference/customize.html
# -----------------------------------------------------------------------------

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra", 
    "--verbose",
    "--ignore=build/private",
    # Coverage options should be managed in the .coveragerc file.
    # The below configurations simply enable coverage and reporting.  
    "--cov", 
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=0",
    "--color=yes",
] 
testpaths = [
    "test",
]
cache_dir = "build/.pytest_cache"
  
# -----------------------------------------------------------------------------
##  MyPy Configurations
#   https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml
# -----------------------------------------------------------------------------

[tool.mypy]
exclude = '''(?x)(
    assets/
    | build/
    | test/
)'''

cache_dir = "build/.mypy_cache"

# Using no incremental to avoid known issue with mypy and some packages:
# https://github.com/python/mypy/issues/9852
incremental = true

# Import Discovery
# https://mypy.readthedocs.io/en/stable/config_file.html#import-discovery
ignore_missing_imports = true
follow_imports = "silent"
no_site_packages = true

# Untyped definitions and calls
# https://mypy.readthedocs.io/en/stable/config_file.html#untyped-definitions-and-calls
# TODO: enable and fix errors
check_untyped_defs = false

# Miscellaneous strictness flags
# https://mypy.readthedocs.io/en/latest/config_file.html#miscellaneous-strictness-flags
allow_redefinition = true

# Configuring Error Messages
# https://mypy.readthedocs.io/en/stable/config_file.html#configuring-error-messages
show_error_codes = true
color_output = true
pretty = true
show_absolute_path = false

# Reporting Generation
# https://mypy.readthedocs.io/en/stable/config_file.html#report-generation
# [DEBUG] UNCOMMENT FOR DEBUG PURPOSES ONLY! Type coverage impacts test 
# html_report = build/documentation/mypy/
# xml_report = build/documentation/mypy/
# cobertura_xml_report = build/documentation/mypy/

# None and Optional handling
# https://mypy.readthedocs.io/en/latest/config_file.html#none-and-optional-handling
strict_optional = false

# Miscellaneous
# https://mypy.readthedocs.io/en/latest/config_file.html#miscellaneous
# [DEBUG] If you need to better understand type error, increase verbosity
verbosity = 0

[[tool.mypy.overrides]]
module = [
    "src.*",
    "test.*"
]
ignore_errors = false


# -----------------------------------------------------------------------------
##  ruff Configurations
#   https://beta.ruff.rs/docs/configuration/
# -----------------------------------------------------------------------------

[tool.ruff]
line-length = 99
src = ["src", "test"]

[tool.ruff.lint]
select = ["E", "F", "W", "C90"]

# -----------------------------------------------------------------------------
##  bumpversion Configurations
#   https://callowayproject.github.io/bump-my-version/
# -----------------------------------------------------------------------------

[tool.bumpversion]
allow_dirty = false
commit = true
commit_args = ""
current_version = "0.1.1"
ignore_missing_version = false
message = "Bump version: {current_version} → {new_version}"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
regex = false
replace = "{new_version}"
search = "{current_version}"
serialize = ["{major}.{minor}.{patch}"]
sign_tags = false
tag = true
tag_message = "Bump version: {current_version} → {new_version}"
tag_name = "v{new_version}"

[[tool.bumpversion.files]]
filename = "src/aibs_informatics_test_resources/__version__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""
