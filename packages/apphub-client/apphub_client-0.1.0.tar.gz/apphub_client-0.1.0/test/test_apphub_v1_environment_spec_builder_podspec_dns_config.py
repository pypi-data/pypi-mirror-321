# coding: utf-8

"""
    apphub

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from apphub_client.models.apphub_v1_environment_spec_builder_podspec_dns_config import ApphubV1EnvironmentSpecBuilderPodspecDnsConfig

class TestApphubV1EnvironmentSpecBuilderPodspecDnsConfig(unittest.TestCase):
    """ApphubV1EnvironmentSpecBuilderPodspecDnsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApphubV1EnvironmentSpecBuilderPodspecDnsConfig:
        """Test ApphubV1EnvironmentSpecBuilderPodspecDnsConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApphubV1EnvironmentSpecBuilderPodspecDnsConfig`
        """
        model = ApphubV1EnvironmentSpecBuilderPodspecDnsConfig()
        if include_optional:
            return ApphubV1EnvironmentSpecBuilderPodspecDnsConfig(
                nameservers = [
                    ''
                    ],
                options = [
                    apphub_client.models.apphub_v1_environment_spec_builder_podspec_dns_config_options_inner.apphub_v1_Environment_spec_builder_podspec_dnsConfig_options_inner(
                        name = '', 
                        value = '', )
                    ],
                searches = [
                    ''
                    ]
            )
        else:
            return ApphubV1EnvironmentSpecBuilderPodspecDnsConfig(
        )
        """

    def testApphubV1EnvironmentSpecBuilderPodspecDnsConfig(self):
        """Test ApphubV1EnvironmentSpecBuilderPodspecDnsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
