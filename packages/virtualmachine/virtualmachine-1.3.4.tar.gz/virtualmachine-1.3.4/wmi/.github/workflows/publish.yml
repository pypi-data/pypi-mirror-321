name: Publish
on:
  push:
    tags:
      - '*'
jobs:
  msys2-mingw64:
    name: Publish for MinGW 64
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: oprypin/find-latest-tag@v1
        id: gettag
        with:
          repository: Thomas-Sparber/wmi
          releases-only: true
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: dos2unix mingw-w64-x86_64-gcc automake autoconf make git
      - name: CI-Build
        run: |
          dos2unix PKGBUILD.mingw
          makepkg BUILDDIR=/tmp/pkg -f -p PKGBUILD.mingw
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.gettag.outputs.tag }}
          artifacts: "*.pkg.tar.zst"
          allowUpdates: true
          draft: false
          makeLatest: true
          omitBody: true
          omitPrereleaseDuringUpdate: true
          replacesArtifacts: true
  msvc-pack:
    runs-on: windows-latest
    name: Publish MSVC 64
    steps:
      - uses: actions/checkout@v3
      - uses: oprypin/find-latest-tag@v1
        id: gettag
        with:
          repository: Thomas-Sparber/wmi
          releases-only: true
      - uses: ilammy/msvc-dev-cmd@v1.4.1
      - name: Build
        run: |
          cl /c /nologo /Ox /W3 /GL /MD /I".\include" /EHsc src/wmi.cpp src/wmiresult.cpp
          mkdir wmi
          mkdir wmi\lib
          lib /nologo /out:wmi/lib/wmi.lib wmi.obj wmiresult.obj
          mkdir wmi\include
          xcopy /Y /s include\* wmi\include
      - name: pack
        run: 7z a msvc-wmi-x86_64.zip .\wmi
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.gettag.outputs.tag }}
          artifacts: "*wmi*.zip"
          allowUpdates: true
          draft: false
          makeLatest: true
          omitBody: true
          omitPrereleaseDuringUpdate: true
          replacesArtifacts: true

