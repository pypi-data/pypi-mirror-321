name: CI/CD

on:
  release:
    types: ["created"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        django-version: ["4.2", "5.1"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          uv sync --all-extras --dev
          uv pip install "django==${{ matrix.django-version }}"

      - name: Run Tests
        run: pytest --verbose --color=yes

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.14"

      - name: Set up Python
        run: uv python install

      - name: Install Build Tools
        run: uv sync --all-extras --dev

      - name: Build Package
        run: uv build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  release:
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.14"

      - name: Publish to PyPI
        run: uv publish --token ${{ secrets.PYPI_API_TOKEN }}
