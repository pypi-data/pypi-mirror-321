"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .feedresponsedto import FeedResponseDto, FeedResponseDtoTypedDict
from novu_py.types import BaseModel
from novu_py.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SubscribersControllerGetNotificationsFeedRequestTypedDict(TypedDict):
    subscriber_id: str
    page: NotRequired[float]
    limit: NotRequired[float]
    read: NotRequired[bool]
    seen: NotRequired[bool]
    payload: NotRequired[str]
    r"""Base64 encoded string of the partial payload JSON object"""


class SubscribersControllerGetNotificationsFeedRequest(BaseModel):
    subscriber_id: Annotated[
        str,
        pydantic.Field(alias="subscriberId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    page: Annotated[
        Optional[float],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    limit: Annotated[
        Optional[float],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 10

    read: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    seen: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    payload: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Base64 encoded string of the partial payload JSON object"""


class SubscribersControllerGetNotificationsFeedResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: FeedResponseDtoTypedDict


class SubscribersControllerGetNotificationsFeedResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: FeedResponseDto
