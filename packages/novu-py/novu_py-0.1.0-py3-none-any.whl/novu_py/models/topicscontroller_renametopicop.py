"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .renametopicrequestdto import RenameTopicRequestDto, RenameTopicRequestDtoTypedDict
from .renametopicresponsedto import (
    RenameTopicResponseDto,
    RenameTopicResponseDtoTypedDict,
)
from novu_py.types import BaseModel
from novu_py.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Dict, List
from typing_extensions import Annotated, TypedDict


class TopicsControllerRenameTopicRequestTypedDict(TypedDict):
    topic_key: str
    r"""The topic key"""
    rename_topic_request_dto: RenameTopicRequestDtoTypedDict


class TopicsControllerRenameTopicRequest(BaseModel):
    topic_key: Annotated[
        str,
        pydantic.Field(alias="topicKey"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The topic key"""

    rename_topic_request_dto: Annotated[
        RenameTopicRequestDto,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class TopicsControllerRenameTopicResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: RenameTopicResponseDtoTypedDict


class TopicsControllerRenameTopicResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: RenameTopicResponseDto
