"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from novu_py.types import BaseModel
from novu_py.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SubscribersControllerChatAccessOauthRequestTypedDict(TypedDict):
    subscriber_id: str
    provider_id: Any
    hmac_hash: str
    r"""HMAC hash for the request"""
    environment_id: str
    r"""The ID of the environment, must be a valid MongoDB ID"""
    integration_identifier: NotRequired[str]
    r"""Optional integration identifier"""


class SubscribersControllerChatAccessOauthRequest(BaseModel):
    subscriber_id: Annotated[
        str,
        pydantic.Field(alias="subscriberId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    provider_id: Annotated[
        Any,
        pydantic.Field(alias="providerId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    hmac_hash: Annotated[
        str,
        pydantic.Field(alias="hmacHash"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""HMAC hash for the request"""

    environment_id: Annotated[
        str,
        pydantic.Field(alias="environmentId"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""The ID of the environment, must be a valid MongoDB ID"""

    integration_identifier: Annotated[
        Optional[str],
        pydantic.Field(alias="integrationIdentifier"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Optional integration identifier"""


class SubscribersControllerChatAccessOauthResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]


class SubscribersControllerChatAccessOauthResponse(BaseModel):
    headers: Dict[str, List[str]]
