"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .subscriberresponsedto import SubscriberResponseDto, SubscriberResponseDtoTypedDict
from novu_py.types import BaseModel
from novu_py.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SubscribersControllerGetSubscriberRequestTypedDict(TypedDict):
    subscriber_id: str
    include_topics: NotRequired[bool]
    r"""Includes the topics associated with the subscriber"""


class SubscribersControllerGetSubscriberRequest(BaseModel):
    subscriber_id: Annotated[
        str,
        pydantic.Field(alias="subscriberId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    include_topics: Annotated[
        Optional[bool],
        pydantic.Field(alias="includeTopics"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Includes the topics associated with the subscriber"""


class SubscribersControllerGetSubscriberResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: SubscriberResponseDtoTypedDict


class SubscribersControllerGetSubscriberResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: SubscriberResponseDto
