import{_ as k,bh as y,bi as g,bj as w,j as T,w as s,V,A as c,h as u,C as t,k as e,bk as _,bl as h,bm as d,B as m,r as x,t as j,I as v,n as f,ac as C,ad as o,ae as i,m as a,af as r}from"./index-Hyq34tSM.js";const z={name:"Guide",components:{task:y,job:g},data:()=>({states:w})},A=t("h1",{class:"ma-0"},"Cylc UI Quick Start",-1),I={class:"card-grid"},B=t("p",{class:"text-h4 text--primary"},"Tasks & Jobs",-1),L=t("p",null,[a(" A "),t("b",null,"task"),a(" represents a single unit of activity in a workflow. ")],-1),N=t("p",null,[a(" A "),t("b",null,"job"),a(" performs the activity of a task, by means of a "),t("b",null,"job script"),a(" submitted to a "),t("b",null,"job runner"),a(". ")],-1),S=t("p",null," One task can have multiple jobs, by automatic retry or manual triggering. ",-1),W={id:"task-job-state-table"},$=t("tr",null,[t("td",null,"Task"),t("td"),t("td",null,"Job")],-1),q={style:{"font-size":"2em"}},Q={style:{"font-size":"2em"}},U=t("p",null,[a(" A "),t("b",null,"waiting task"),a(" with "),t("b",null,"failed jobs"),a(" will "),t("b",null,"retry"),a(" after a delay. ")],-1),D=t("p",null,[a(" A "),t("b",null,"task"),a(" can only fail if it runs out of retries. ")],-1),E=t("p",{class:"text-h4 text--primary"},"Why Are We Waiting?",-1),G=t("p",null," Why has my task not started to run yet? ",-1),H=t("b",null,"dependencies",-1),J=t("b",null,"xtriggers",-1),O=t("b",null,"released",-1),R=t("p",null,[t("em",null,"Note: tasks downstream of queued (or runahead limited) tasks are not themselves shown as queued (or runahead limited) because they are not otherwise ready to run yet.")],-1),F=t("p",null,[t("em",null,"Note: external triggers (e.g. clock triggers) are not yet exposed in the UI.")],-1);function K(p,M,P,X,Y,Z){const l=c("task"),b=c("job");return u(),T(V,{fluid:""},{default:s(()=>[A,t("div",I,[e(f,null,{default:s(()=>[e(_,{variant:"outlined",class:"pa-1"},{default:s(()=>[e(h,{"primary-title":""},{default:s(()=>[B]),_:1}),e(d,null,{default:s(()=>[L,N,S]),_:1}),t("table",W,[$,(u(!0),m(v,null,x(p.states,n=>(u(),m("tr",{key:n.name.name},[t("td",q,[e(l,{task:{state:n.name,task:{meanElapsedTime:30}},startTime:String(Date.now())},null,8,["task","startTime"])]),t("td",null,[t("span",null,j(n.name),1)]),t("td",Q,[e(b,{status:n.name},null,8,["status"])])]))),128))]),e(d,null,{default:s(()=>[U,D]),_:1})]),_:1})]),_:1}),e(f,null,{default:s(()=>[e(_,{variant:"outlined",class:"pa-1"},{default:s(()=>[e(h,{"primary-title":""},{default:s(()=>[E]),_:1}),e(d,null,{default:s(()=>[G,e(C,{lines:"three"},{default:s(()=>[e(o,null,{prepend:s(()=>[e(l,{style:{"font-size":"2em"},task:{state:"waiting"},class:"mr-4"})]),default:s(()=>[e(i,null,{default:s(()=>[a(" Waiting ")]),_:1}),e(r,null,{default:s(()=>[a(" The task is not ready to run yet - it is still waiting on upstream "),H,a(" or "),J,a(". ")]),_:1})]),_:1}),e(o,null,{prepend:s(()=>[e(l,{style:{"font-size":"2em"},task:{state:"waiting",isHeld:!0},class:"mr-4"})]),default:s(()=>[e(i,null,{default:s(()=>[a(" Held ")]),_:1}),e(r,null,{default:s(()=>[a(" The task won't run unless "),O,a(" from hold. Tasks can be held before they are ready to run (or after, prior to retriggering). ")]),_:1})]),_:1}),e(o,null,{prepend:s(()=>[e(l,{style:{"font-size":"2em"},task:{state:"waiting",isQueued:!0},class:"mr-4"})]),default:s(()=>[e(i,null,{default:s(()=>[a(" Queued ")]),_:1}),e(r,null,{default:s(()=>[a(" The task is ready to run but is held back by a queue, which restricts the number of active tasks. ")]),_:1})]),_:1}),e(o,null,{prepend:s(()=>[e(l,{style:{"font-size":"2em"},task:{state:"waiting",isRunahead:!0},class:"mr-4"})]),default:s(()=>[e(i,null,{default:s(()=>[a(" Runahead ")]),_:1}),e(r,null,{default:s(()=>[a(" The task is ready to run but is beyond the runahead limit, which restricts the number of active cycle points. ")]),_:1})]),_:1})]),_:1}),R,F]),_:1})]),_:1})]),_:1})])]),_:1})}const et=k(z,[["render",K]]);export{et as default};
