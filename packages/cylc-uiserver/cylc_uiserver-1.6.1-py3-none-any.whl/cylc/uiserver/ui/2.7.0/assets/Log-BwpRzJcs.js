import{_ as P,h as a,B as k,I as O,r as R,aQ as N,t as p,J as j,$ as U,by as W,bz as E,Q as c,v as A,bA as G,bB as Q,bC as z,ag as F,a0 as J,bD as H,bE as M,bF as Z,bG as X,j as f,w as o,V as I,L as Y,bH as K,A as v,k as s,p as y,n as g,Z as $,G as V,m as L,X as C,D as ee,bI as D,E as te,F as le,bJ as se,C as b,H as B,ah as oe}from"./index-Hyq34tSM.js";import{V as ie,b as ae}from"./ViewToolbar-DuVBnMIX.js";import{g as re}from"./graphql-D8b4q-7X.js";import{u as ne,i as de,a as _}from"./initialOptions-BLDeg43d.js";import{d as ue}from"./debounce-BEi8cUqw.js";import{V as ce}from"./VAlert-CLAKnZDH.js";const fe={name:"LogComponent",props:{placeholder:{type:String,required:!1},timestamps:{type:Boolean,required:!1,default:!0},logs:{type:Array,required:!0},wordWrap:{type:Boolean,required:!1,default:!1}},data(){return{match:""}},computed:{computedLogs(){return this.logs.length>0?this.timestamps?this.logs:this.updateLogs():this.placeholder?[this.placeholder]:[]}},methods:{updateLogs(){return this.logs.map(t=>this.stripTimestamp(t))},stripTimestamp(t){const e=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|[+-][\d:]+)?\s(.*\s*)/;return this.match=t.match(e),this.match?this.match[1]:t}}};function pe(t,e,i,l,u,r){return a(),k("pre",null,[(a(!0),k(O,null,R(r.computedLogs,(h,m)=>(a(),k("span",{key:m,class:N(i.wordWrap?"text-pre-wrap":"text-pre")},p(h),3))),128))])}const he=P(fe,[["render",pe]]),me=j`
subscription LogData ($id: ID!, $file: String!) {
  logs (id: $id, file: $file) {
    lines
    connected
    path
    error
  }
}
`,ge=j`
query LogFiles($id: ID!) {
  logFiles(id: $id) {
    files
  }
}
`,be=[/^job\.out$/,/^job$/,/^scheduler\/*/],we=t=>{if(t.length){for(const e of be)for(const i of t)if(e.exec(i))return i}return null};class S{constructor(){this.lines=[],this.host=null,this.path=null,this.connected=null,this.error=null}}class ye extends Y{constructor(e){super(),this.results=e}onAdded(e,i,l){this.results.connected===!1&&(this.results.lines=[]),e.lines&&this.results.lines.push(...e.lines),e.connected!=null&&(this.results.connected=e.connected),e.error!=null&&(this.results.error=e.error),e.path!=null&&([this.results.host,this.results.path]=e.path.split(":",2))}}const Le={name:"Log",mixins:[re,U],components:{CopyBtn:W,LogComponent:he,ViewToolbar:ie},emits:[ne],props:{initialOptions:de},setup(t,{emit:e}){const i=K(),l=_("relativeID",{props:t,emit:e}),u=E(l),r=_("file",{props:t,emit:e}),h=_("timestamps",{props:t,emit:e},!0),m=_("wordWrap",{props:t,emit:e},!1),n=c(new S);function d(){n.value=new S}const T=A(()=>{var w;return(w=n.value.path)==null?void 0:w.substring(0,n.value.path.length-r.value.length-1)});G(()=>i.state.offline,()=>{n.value.connected=!1});const q=ue(w=>{l.value=w},500),x="40";return{query:c(null),logFiles:c([]),results:n,parentPath:T,relativeID:l,previousRelativeID:u,file:r,fileLabel:c("Select File"),fileDisabled:c(!1),jobLog:c(l.value==null?0:1),timestamps:h,wordWrap:m,reset:d,debouncedUpdateRelativeID:q,toolbarBtnSize:x,toolbarBtnProps:ae(x)}},data(){return{controlGroups:[{title:"Log",controls:[{title:"Timestamps",icon:Q,action:"toggle",value:this.timestamps,key:"timestamps"},{title:"Word wrap",icon:z,action:"toggle",value:this.wordWrap,key:"wordWrap"}]}]}},mounted(){this.$watch(()=>({id:this.id??void 0,file:this.file??void 0}),async({id:t},e)=>{this.updateQuery(),t!==(e==null?void 0:e.id)&&await this.updateLogFileList()},{immediate:!0})},computed:{workflowTokens(){return new F(this.workflowId)},id(){if(this.jobLog)try{const t=new F(this.relativeID,!0);return t!=null&&t.task?this.workflowTokens.clone({cycle:t.cycle,task:t.task,job:t.job}).id:null}catch{return null}return this.workflowId}},methods:{setOption(t,e){this[t]=e},updateQuery(){if(this.reset(),!this.file||!this.id){this.query=null;return}this.query=new J(me,{id:this.id,file:this.file},`log-query-${this._uid}`,[new ye(this.results)],!1,!1)},async updateLogFileList(t=!0){var l;if(!this.id){this.handleNoLogFiles();return}this.fileLabel="Updating available files...",this.fileDisabled=!0;let e;try{e=await this.$workflowService.apolloClient.query({query:ge,variables:{id:this.id}})}catch(u){console.warn(u),this.handleNoLogFiles();return}if(!this.id)return;const i=((l=e.data.logFiles)==null?void 0:l.files)??[];t&&(this.file&&!i.includes(this.file)&&(this.file=null),this.file||(this.file=we(i))),i.length?(this.fileLabel="Select File",this.fileDisabled=!1,this.logFiles=i):this.handleNoLogFiles()},handleNoLogFiles(){this.fileLabel=this.id?`No log files for ${this.id}`:"Enter a task/job ID",this.fileDisabled=!0,this.logFiles=[]}},watch:{jobLog(t,e){this.file=null,this.relativeID=t?this.previousRelativeID:null}},icons:{mdiFileAlertOutline:H,mdiFolderRefresh:M,mdiPowerPlug:Z,mdiPowerPlugOff:X}},_e={"data-cy":"log-path",class:"ml-2 mr-1 d-flex text-medium-emphasis text-pre overflow-x-hidden"},ke={class:"flex-shrink-1 text-truncate"},ve={class:"text-pre-wrap text-break"};function Ve(t,e,i,l,u,r){const h=v("ViewToolbar"),m=v("CopyBtn"),n=v("log-component");return a(),f(I,{class:"c-log h-100 pa-0 d-flex flex-column",fluid:""},{default:o(()=>[s(I,{fluid:""},{default:o(()=>[s(y,{dense:"",class:"flex-0-0"},{default:o(()=>[s(g,{class:"pt-0"},{default:o(()=>[s($,{modelValue:l.jobLog,"onUpdate:modelValue":e[0]||(e[0]=d=>l.jobLog=d),divided:"",mandatory:"",variant:"outlined",color:"primary",density:"comfortable"},{default:o(()=>[s(V,{"data-cy":"workflow-toggle"},{default:o(()=>[L("Workflow")]),_:1}),s(V,{"data-cy":"job-toggle"},{default:o(()=>[L("Job")]),_:1})]),_:1},8,["modelValue"]),s(h,{groups:u.controlGroups,onSetOption:r.setOption,size:l.toolbarBtnSize},null,8,["groups","onSetOption","size"])]),_:1})]),_:1}),s(y,{dense:"",class:"flex-0-0"},{default:o(()=>[s(g,{cols:"8"},{default:o(()=>[l.jobLog?(a(),f(C,{key:0,"data-cy":"job-id-input",class:"flex-grow-1 flex-column","model-value":l.relativeID,"onUpdate:modelValue":l.debouncedUpdateRelativeID,placeholder:"cycle/task/job",clearable:""},null,8,["model-value","onUpdate:modelValue"])):(a(),f(C,{key:1,"data-cy":"workflow-id-input",modelValue:t.workflowId,"onUpdate:modelValue":e[1]||(e[1]=d=>t.workflowId=d),disabled:""},null,8,["modelValue"]))]),_:1}),s(g,{cols:"4",class:"d-flex col-gap-2"},{default:o(()=>[s(ee,{"data-cy":"file-input",label:l.fileLabel,disabled:l.fileDisabled,items:l.logFiles,modelValue:l.file,"onUpdate:modelValue":e[2]||(e[2]=d=>l.file=d),clearable:"","menu-props":{"data-cy":"file-input-menu"}},null,8,["label","disabled","items","modelValue"]),s(V,D({onClick:e[3]||(e[3]=()=>this.updateLogFileList(!1))},l.toolbarBtnProps,{"data-cy":"refresh-files"}),{default:o(()=>[s(te,{icon:t.$options.icons.mdiFolderRefresh},null,8,["icon"]),s(le,null,{default:o(()=>[L("Refresh file list")]),_:1})]),_:1},16)]),_:1})]),_:1}),s(y,{dense:"",class:"flex-0-0"},{default:o(()=>[l.results.path?(a(),f(g,{key:0,class:"d-flex align-center"},{default:o(()=>[s(se,D({"data-cy":"connected-icon",variant:"outlined",class:"flex-shrink-0"},l.results.connected?{color:"success",prependIcon:t.$options.icons.mdiPowerPlug}:{color:"error",prependIcon:t.$options.icons.mdiPowerPlugOff,onClick:r.updateQuery}),{default:o(()=>[L(p(l.results.connected?"Connected":"Reconnect"),1)]),_:1},16),b("div",_e,[b("span",null,p(l.results.host)+":",1),b("span",ke,p(l.parentPath),1),b("span",null,"/"+p(l.file),1)]),s(m,{text:l.results.path,tooltip:"Copy path"},null,8,["text"])]),_:1})):B("",!0)]),_:1})]),_:1}),s(y,{"no-gutters":"",class:"overflow-auto px-4 pb-2"},{default:o(()=>[s(g,null,{default:o(()=>[r.id&&l.file&&l.results.connected==null?(a(),f(oe,{key:0,type:"text@5",class:"mx-n4 align-content-start"})):(a(),k(O,{key:1},[l.results.error?(a(),f(ce,{key:0,type:"error",variant:"tonal",density:"comfortable",class:"mb-4",icon:t.$options.icons.mdiFileAlertOutline},{default:o(()=>[b("span",ve,p(l.results.error),1)]),_:1},8,["icon"])):B("",!0),s(n,{"data-cy":"log-viewer",logs:l.results.lines,timestamps:l.timestamps,"word-wrap":l.wordWrap},null,8,["logs","timestamps","word-wrap"])],64))]),_:1})]),_:1})]),_:1})}const Se=P(Le,[["render",Ve]]);export{Se as default,we as getDefaultFile};
