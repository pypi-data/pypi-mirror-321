"""
This type stub file was generated by pyright.
"""

from pathlib import Path
from typing import Any, Dict

"""
This type stub file was generated by pyright.
"""
class Config:
    """Configuration manager."""
    def __init__(self) -> None:
        """Initialize configuration manager."""
        ...
    
    def get_rule_path(self, assistant: str, is_global: bool = ...) -> Path:
        """Get the path for assistant rules.

        Args:
            assistant: Assistant name (cursor, windsurf, cline)
            is_global: Whether to use global rules

        Returns:
            Path to rules file
        """
        ...
    
    def load_config(self, is_global: bool = ...) -> Dict[str, Any]:
        """Load configuration from file.

        Args:
            is_global: Whether to load global config

        Returns:
            Configuration dictionary
        """
        ...
    
    def save_config(self, config: Dict[str, Any], is_global: bool = ...) -> None:
        """Save configuration to file.

        Args:
            config: Configuration to save
            is_global: Whether to save as global config
        """
        ...
    
    def get_processor_config(self, processor: str) -> Dict[str, Any]:
        """Get processor-specific configuration.

        Args:
            processor: Processor name

        Returns:
            Processor configuration
        """
        ...
    


