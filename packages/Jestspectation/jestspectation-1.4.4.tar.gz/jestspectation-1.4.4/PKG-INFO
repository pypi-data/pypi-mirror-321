Metadata-Version: 2.3
Name: Jestspectation
Version: 1.4.4
Summary: Pattern matching tools to test complex data structures
License: MIT
Keywords: jest,pattern,matching,pytest,equality
Author: Maddy Guthridge
Author-email: hello@maddyguthridge.com
Requires-Python: >=3.9
Classifier: Programming Language :: Python :: 3
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Other Environment
Classifier: Framework :: Pytest
Classifier: Topic :: Software Development :: Testing
Classifier: Typing :: Typed
Requires-Dist: typing-extensions (>=4.5.0)
Project-URL: Bug Tracker, https://github.com/MaddyGuthridge/Jestspectation/issues
Project-URL: Documentation, https://maddyguthridge.github.io/Jestspectation
Project-URL: Homepage, https://maddyguthridge.github.io/Jestspectation
Project-URL: Repository, https://github.com/MaddyGuthridge/Jestspectation
Description-Content-Type: text/markdown

# Jestspectation

Pattern matching tools to test complex data structures.

The design is inspired by the `expect` system from JavaScript's Jest testing
framework.

```py
>>> import jestspectation as expect
>>> assert {
...     "a": 1,
...     "b": 2,
...     "c": 3.0,
... } == {
...     "a": 1,
...     "b": expect.Any(int),
...     "c": expect.FloatApprox(2.5, magnitude=0.5)
... }

```

## Documentation

Documentation can be found [on GitHub Pages](https://maddyguthridge.github.io/Jestspectation/).

## Installation

```sh
pip install jestspectation
```

## Usage with Pytest

The library can be used as a pytest plugin, which can give access to much more
detailed error messages when assertions fail.

This should result in output similar to the following

```txt
    def test_goodbye():
>       assert 1 == expect.Any(float)
E       assert Type mismatch
E         Expected any object of type float
E         Received 1 (int)
```

These advanced completions can also be used for most standard Python objects
by wrapping the expected values in an `Equals`. For example:

```txt
    def test_lists():
>       assert expect.Equals([1, 2, 3, 4]) == [1, 2, 3, 5, 6]
E       assert [1, 2, 3, 4] == [1, 2, 3, 5, 6]
E         !! [3] 4 == 5
E            Value mismatch
E            Expected 4
E            Received 5
E         ++ [4] 6
```

To automatically use Jestspectation's diff parsing, you can configure
Jestspectation.

```py
>>> import jestspectation
>>> jestspectation.configure().pytest_all_diffs = True

```

