# Generated by Django 4.1.10 on 2023-09-06 10:39

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dcim', '0172_larger_power_draw_values'),
        ('extras', '0092_delete_jobresult'),
    ]

    operations = [
        migrations.CreateModel(
            name='SoftwareImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('version', models.CharField(blank=True, max_length=32)),
                ('md5sum', models.CharField(blank=True, max_length=36)),
                ('filename', models.CharField(blank=True, max_length=256)),
                ('comments', models.TextField(blank=True)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Software Image',
                'ordering': ['-filename', '-version'],
            },
        ),
        migrations.CreateModel(
            name='GoldenImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('device_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='golden_image', to='dcim.devicetype')),
                ('software', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='netbox_software_tracker.softwareimage')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Golden Image',
                'ordering': ['device_type'],
            },
        ),
    ]
