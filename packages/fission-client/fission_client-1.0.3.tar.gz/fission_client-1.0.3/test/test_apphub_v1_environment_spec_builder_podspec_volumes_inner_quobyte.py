# coding: utf-8

"""
    apphub

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fission_client.models.apphub_v1_environment_spec_builder_podspec_volumes_inner_quobyte import ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte

class TestApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte(unittest.TestCase):
    """ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte:
        """Test ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte`
        """
        model = ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte()
        if include_optional:
            return ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte(
                group = '',
                read_only = True,
                registry = '',
                tenant = '',
                user = '',
                volume = ''
            )
        else:
            return ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte(
                registry = '',
                volume = '',
        )
        """

    def testApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte(self):
        """Test ApphubV1EnvironmentSpecBuilderPodspecVolumesInnerQuobyte"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
