Metadata-Version: 2.2
Name: regpnlpypi
Version: 0.5
Description-Content-Type: text/markdown
Requires-Dist: beautifulsoup4==4.12.3
Requires-Dist: build==1.2.1
Requires-Dist: DatastreamPy==2.0.21
Requires-Dist: debugpy==1.8.1
Requires-Dist: executing==2.0.1
Requires-Dist: Markdown==3.7
Requires-Dist: markdown-it-py==3.0.0
Requires-Dist: holidays==0.63
Requires-Dist: html5lib==1.1
Requires-Dist: matplotlib==3.8.0
Requires-Dist: matplotlib-inline==0.1.7
Requires-Dist: mypy-extensions==1.0.0
Requires-Dist: numpy==1.26.4
Requires-Dist: oauthlib==3.2.2
Requires-Dist: packaging==23.2
Requires-Dist: pip==24.3.1
Requires-Dist: pandas==2.2.3
Requires-Dist: pandas-datareader==0.10.0
Requires-Dist: pybacktestchain==0.2.1
Requires-Dist: PyDatastream==0.6.5
Requires-Dist: python-dateutil==2.8.2
Requires-Dist: requests==2.31.0
Requires-Dist: scikit-learn==1.2.2
Requires-Dist: scipy==1.11.3
Requires-Dist: statsmodels==0.14.4
Requires-Dist: streamlit==1.41.1
Requires-Dist: textblob==0.18.0.post0
Requires-Dist: types-python-dateutil==2.9.0.20241206
Requires-Dist: typing_extensions==4.12.2
Requires-Dist: urllib3==2.2.1
Requires-Dist: virtualenv==20.26.3
Requires-Dist: yfinance==0.2.51
Requires-Dist: setuptools==75.8.0
Requires-Dist: setuptools-scm==8.1.0
Requires-Dist: numba==0.60.0
Requires-Dist: pytest==8.3.4
Requires-Dist: python-json-logger==3.2.1
Requires-Dist: cloudpickle==3.1.0
Requires-Dist: sec-cik-mapper==2.1.0
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist

# regpnlpypi

regpnlpypi is a Python package designed to simplify the process of creating, running, and evaluating backtests. It offers an intuitive interface for exploring strategies and automating complex workflows.

---

## Installation

To install the package, use the following command:

```bash
pip install regpnlpypi
```
---

## Usage

Every new functionality developed in this package has been interfaced so you have very little to do!

### Step-by-Step Guide

1. **Create a `launch.py` file**

   Add the following lines to your `launch.py` file that is already created in the folder:

   ```python
   from regpnlpypi.main import run

   if __name__ == "__main__":
        run()

   ```

2. **Run the application**

   Open the terminal in the folder where the `launch.py` file is located and run the following command:

   ```bash
   streamlit run launch.py
   ```
---

## Commands Cheat Sheet

Here's a quick reference for all coding-related commands used:


### Running the Application

1. Create the `launch.py` file:
   
   ```python
   from regpnlpypi.main import run

   if __name__ == "__main__":
        run()

   ```

2. Run the application via Streamlit:
   
   ```bash
   streamlit run launch.py
   ```

---

## License

This project is licensed under the MIT License. See the LICENSE file for details.
