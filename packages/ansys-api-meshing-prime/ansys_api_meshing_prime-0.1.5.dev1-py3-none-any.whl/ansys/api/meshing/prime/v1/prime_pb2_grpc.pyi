"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.meshing.prime.v1.prime_pb2
import grpc
import typing

class PrimeStub:
    """Prime GRPC service definition."""
    def __init__(self, channel: grpc.Channel) -> None: ...
    ServeJson: grpc.StreamStreamMultiCallable[
        ansys.api.meshing.prime.v1.prime_pb2.StringMessage,
        ansys.api.meshing.prime.v1.prime_pb2.StringMessage] = ...
    """Serves json command to Prime"""

    GetParamDefaultJson: grpc.StreamStreamMultiCallable[
        ansys.api.meshing.prime.v1.prime_pb2.StringMessage,
        ansys.api.meshing.prime.v1.prime_pb2.StringMessage] = ...

    RunOnServer: grpc.StreamStreamMultiCallable[
        ansys.api.meshing.prime.v1.prime_pb2.StringMessage,
        ansys.api.meshing.prime.v1.prime_pb2.StringMessage] = ...

    ServeJsonBinary: grpc.StreamStreamMultiCallable[
        ansys.api.meshing.prime.v1.prime_pb2.BinaryMessage,
        ansys.api.meshing.prime.v1.prime_pb2.BinaryMessage] = ...

    Initialize: grpc.UnaryUnaryMultiCallable[
        ansys.api.meshing.prime.v1.prime_pb2.InitializeRequest,
        ansys.api.meshing.prime.v1.prime_pb2.InitializeResponse] = ...

    ServerCommand: grpc.StreamStreamMultiCallable[
        ansys.api.meshing.prime.v1.prime_pb2.StringMessage,
        ansys.api.meshing.prime.v1.prime_pb2.StringMessage] = ...


class PrimeServicer(metaclass=abc.ABCMeta):
    """Prime GRPC service definition."""
    @abc.abstractmethod
    def ServeJson(self,
        request: typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.StringMessage],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.StringMessage]:
        """Serves json command to Prime"""
        pass

    @abc.abstractmethod
    def GetParamDefaultJson(self,
        request: typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.StringMessage],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.StringMessage]: ...

    @abc.abstractmethod
    def RunOnServer(self,
        request: typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.StringMessage],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.StringMessage]: ...

    @abc.abstractmethod
    def ServeJsonBinary(self,
        request: typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.BinaryMessage],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.BinaryMessage]: ...

    @abc.abstractmethod
    def Initialize(self,
        request: ansys.api.meshing.prime.v1.prime_pb2.InitializeRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.meshing.prime.v1.prime_pb2.InitializeResponse: ...

    @abc.abstractmethod
    def ServerCommand(self,
        request: typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.StringMessage],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.meshing.prime.v1.prime_pb2.StringMessage]: ...


def add_PrimeServicer_to_server(servicer: PrimeServicer, server: grpc.Server) -> None: ...
