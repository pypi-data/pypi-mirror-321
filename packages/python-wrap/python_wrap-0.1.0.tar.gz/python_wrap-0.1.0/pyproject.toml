[tool.poetry]
name = "python-wrap"
version = "0.1.0"
description = "A comprehensive collection of Python decorators and utility functions for enhanced development workflows"
authors = ["Mahmoud Ahmed <contact.mahmoudahmed@gmail.com>"]
maintainers = ["Mahmoud Ahmed <contact.mahmoudahmed@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/Pythondeveloper6/PythonWrap"
repository = "https://github.com/Pythondeveloper6/PythonWrap"
documentation = "https://python-wrap.readthedocs.io"
keywords = ["decorators", "utilities", "python", "development", "tools","python"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed"
]
packages = [{include = "python_wrap"}]

[tool.poetry.dependencies]
python = "^3.8"
wrapt = "^1.15.0"
typing-extensions = "^4.7.1"  # For better type hints support

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"  # Code formatting
isort = "^5.12.0"  # Import sorting
mypy = "^1.4.1"  # Type checking
pylint = "^2.17.5"  # Code linting
pre-commit = "^3.3.3"  # Git hooks
sphinx = "^7.1.1"  # Documentation
sphinx-rtd-theme = "^1.2.2"  # Documentation theme

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Pythondeveloper6/PythonWrap/issues"
"Changelog" = "https://github.com/Pythondeveloper6/PythonWrap/blob/main/CHANGELOG.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=python_wrap --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["python_wrap"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
ignore_errors = true
omit = ["tests/*", "setup.py"]