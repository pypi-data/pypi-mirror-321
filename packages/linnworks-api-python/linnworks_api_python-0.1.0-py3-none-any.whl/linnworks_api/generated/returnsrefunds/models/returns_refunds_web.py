# coding: utf-8

"""
    Returns and Refunds API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: returnsrefunds
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class ReturnsRefundsWeb(BaseModel):
    """
    ReturnsRefundsWeb
    """ # noqa: E501
    row: Optional[StrictInt] = Field(default=None, alias="Row")
    pk_order_id: Optional[StrictStr] = Field(default=None, alias="pkOrderID")
    c_shipping_address: Optional[StrictStr] = Field(default=None, alias="cShippingAddress")
    d_processed_on: Optional[datetime] = Field(default=None, alias="dProcessedOn")
    f_postage_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="fPostageCost")
    f_total_charge: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="fTotalCharge")
    postage_cost_ex_tax: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PostageCostExTax")
    subtotal: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="Subtotal")
    f_tax: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="fTax")
    total_discount: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="TotalDiscount")
    country_tax_rate: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="CountryTaxRate")
    n_order_id: Optional[StrictInt] = Field(default=None, alias="nOrderId")
    c_currency: Optional[StrictStr] = Field(default=None, alias="cCurrency")
    postal_tracking_number: Optional[StrictStr] = Field(default=None, alias="PostalTrackingNumber")
    c_country: Optional[StrictStr] = Field(default=None, alias="cCountry")
    source: Optional[StrictStr] = Field(default=None, alias="Source")
    postal_service_name: Optional[StrictStr] = Field(default=None, alias="PostalServiceName")
    postal_service_code: Optional[StrictStr] = Field(default=None, alias="PostalServiceCode")
    vendor: Optional[StrictStr] = Field(default=None, alias="Vendor")
    reference_num: Optional[StrictStr] = Field(default=None, alias="ReferenceNum")
    secondary_reference: Optional[StrictStr] = Field(default=None, alias="SecondaryReference")
    external_reference: Optional[StrictStr] = Field(default=None, alias="ExternalReference")
    address1: Optional[StrictStr] = Field(default=None, alias="Address1")
    address2: Optional[StrictStr] = Field(default=None, alias="Address2")
    address3: Optional[StrictStr] = Field(default=None, alias="Address3")
    town: Optional[StrictStr] = Field(default=None, alias="Town")
    region: Optional[StrictStr] = Field(default=None, alias="Region")
    buyer_phone_number: Optional[StrictStr] = Field(default=None, alias="BuyerPhoneNumber")
    company: Optional[StrictStr] = Field(default=None, alias="Company")
    sub_source: Optional[StrictStr] = Field(default=None, alias="SubSource")
    channel_buyer_name: Optional[StrictStr] = Field(default=None, alias="ChannelBuyerName")
    account_name: Optional[StrictStr] = Field(default=None, alias="AccountName")
    c_full_name: Optional[StrictStr] = Field(default=None, alias="cFullName")
    c_email_address: Optional[StrictStr] = Field(default=None, alias="cEmailAddress")
    c_post_code: Optional[StrictStr] = Field(default=None, alias="cPostCode")
    d_paid_on: Optional[datetime] = Field(default=None, alias="dPaidOn")
    c_billing_address: Optional[StrictStr] = Field(default=None, alias="cBillingAddress")
    billing_name: Optional[StrictStr] = Field(default=None, alias="BillingName")
    billing_company: Optional[StrictStr] = Field(default=None, alias="BillingCompany")
    billing_address1: Optional[StrictStr] = Field(default=None, alias="BillingAddress1")
    billing_address2: Optional[StrictStr] = Field(default=None, alias="BillingAddress2")
    billing_address3: Optional[StrictStr] = Field(default=None, alias="BillingAddress3")
    billing_town: Optional[StrictStr] = Field(default=None, alias="BillingTown")
    billing_region: Optional[StrictStr] = Field(default=None, alias="BillingRegion")
    billing_post_code: Optional[StrictStr] = Field(default=None, alias="BillingPostCode")
    billing_country_name: Optional[StrictStr] = Field(default=None, alias="BillingCountryName")
    billing_phone_number: Optional[StrictStr] = Field(default=None, alias="BillingPhoneNumber")
    c_item_number: Optional[StrictStr] = Field(default=None, alias="cItemNumber")
    c_item_name: Optional[StrictStr] = Field(default=None, alias="cItemName")
    pk_return_id: Optional[StrictInt] = Field(default=None, alias="pkReturnId")
    row_type: Optional[StrictStr] = Field(default=None, alias="RowType")
    return_reference: Optional[StrictStr] = Field(default=None, alias="ReturnReference")
    pending_refund_amount: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="PendingRefundAmount")
    last_date: Optional[datetime] = Field(default=None, alias="LastDate")
    reason: Optional[StrictStr] = Field(default=None, alias="Reason")
    channel_reason: Optional[StrictStr] = Field(default=None, alias="ChannelReason")
    channel_reason_sec: Optional[StrictStr] = Field(default=None, alias="ChannelReasonSec")
    category: Optional[StrictStr] = Field(default=None, alias="Category")
    return_qty: Optional[StrictInt] = Field(default=None, alias="ReturnQty")
    fk_return_location_id: Optional[StrictStr] = Field(default=None, alias="fkReturnLocationId")
    scrapped: Optional[StrictBool] = Field(default=None, alias="Scrapped")
    scrap_qty: Optional[StrictInt] = Field(default=None, alias="ScrapQty")
    return_date: Optional[datetime] = Field(default=None, alias="ReturnDate")
    location: Optional[StrictStr] = Field(default=None, alias="Location")
    item_number: Optional[StrictStr] = Field(default=None, alias="ItemNumber")
    item_title: Optional[StrictStr] = Field(default=None, alias="ItemTitle")
    new_qty: Optional[StrictInt] = Field(default=None, alias="NewQty")
    refund_reference: Optional[StrictStr] = Field(default=None, alias="RefundReference")
    pk_refund_row_id: Optional[StrictStr] = Field(default=None, alias="pkRefundRowId")
    amount: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="Amount")
    create_date: Optional[datetime] = Field(default=None, alias="CreateDate")
    cancellation_quantity: Optional[StrictInt] = Field(default=None, alias="CancellationQuantity")
    fk_order_item_return_id: Optional[StrictStr] = Field(default=None, alias="fkOrderItemReturnId")
    action_date: Optional[datetime] = Field(default=None, alias="ActionDate")
    refund_status: Optional[StrictStr] = Field(default=None, alias="RefundStatus")
    __properties: ClassVar[List[str]] = ["Row", "pkOrderID", "cShippingAddress", "dProcessedOn", "fPostageCost", "fTotalCharge", "PostageCostExTax", "Subtotal", "fTax", "TotalDiscount", "CountryTaxRate", "nOrderId", "cCurrency", "PostalTrackingNumber", "cCountry", "Source", "PostalServiceName", "PostalServiceCode", "Vendor", "ReferenceNum", "SecondaryReference", "ExternalReference", "Address1", "Address2", "Address3", "Town", "Region", "BuyerPhoneNumber", "Company", "SubSource", "ChannelBuyerName", "AccountName", "cFullName", "cEmailAddress", "cPostCode", "dPaidOn", "cBillingAddress", "BillingName", "BillingCompany", "BillingAddress1", "BillingAddress2", "BillingAddress3", "BillingTown", "BillingRegion", "BillingPostCode", "BillingCountryName", "BillingPhoneNumber", "cItemNumber", "cItemName", "pkReturnId", "RowType", "ReturnReference", "PendingRefundAmount", "LastDate", "Reason", "ChannelReason", "ChannelReasonSec", "Category", "ReturnQty", "fkReturnLocationId", "Scrapped", "ScrapQty", "ReturnDate", "Location", "ItemNumber", "ItemTitle", "NewQty", "RefundReference", "pkRefundRowId", "Amount", "CreateDate", "CancellationQuantity", "fkOrderItemReturnId", "ActionDate", "RefundStatus"]

    @field_validator('refund_status')
    def refund_status_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(['OPEN', 'PROCESSED', 'ERROR', 'ERROR_ACKED', 'PENDING']):
            raise ValueError("must be one of enum values ('OPEN', 'PROCESSED', 'ERROR', 'ERROR_ACKED', 'PENDING')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of ReturnsRefundsWeb from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of ReturnsRefundsWeb from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "Row": obj.get("Row"),
            "pkOrderID": obj.get("pkOrderID"),
            "cShippingAddress": obj.get("cShippingAddress"),
            "dProcessedOn": obj.get("dProcessedOn"),
            "fPostageCost": obj.get("fPostageCost"),
            "fTotalCharge": obj.get("fTotalCharge"),
            "PostageCostExTax": obj.get("PostageCostExTax"),
            "Subtotal": obj.get("Subtotal"),
            "fTax": obj.get("fTax"),
            "TotalDiscount": obj.get("TotalDiscount"),
            "CountryTaxRate": obj.get("CountryTaxRate"),
            "nOrderId": obj.get("nOrderId"),
            "cCurrency": obj.get("cCurrency"),
            "PostalTrackingNumber": obj.get("PostalTrackingNumber"),
            "cCountry": obj.get("cCountry"),
            "Source": obj.get("Source"),
            "PostalServiceName": obj.get("PostalServiceName"),
            "PostalServiceCode": obj.get("PostalServiceCode"),
            "Vendor": obj.get("Vendor"),
            "ReferenceNum": obj.get("ReferenceNum"),
            "SecondaryReference": obj.get("SecondaryReference"),
            "ExternalReference": obj.get("ExternalReference"),
            "Address1": obj.get("Address1"),
            "Address2": obj.get("Address2"),
            "Address3": obj.get("Address3"),
            "Town": obj.get("Town"),
            "Region": obj.get("Region"),
            "BuyerPhoneNumber": obj.get("BuyerPhoneNumber"),
            "Company": obj.get("Company"),
            "SubSource": obj.get("SubSource"),
            "ChannelBuyerName": obj.get("ChannelBuyerName"),
            "AccountName": obj.get("AccountName"),
            "cFullName": obj.get("cFullName"),
            "cEmailAddress": obj.get("cEmailAddress"),
            "cPostCode": obj.get("cPostCode"),
            "dPaidOn": obj.get("dPaidOn"),
            "cBillingAddress": obj.get("cBillingAddress"),
            "BillingName": obj.get("BillingName"),
            "BillingCompany": obj.get("BillingCompany"),
            "BillingAddress1": obj.get("BillingAddress1"),
            "BillingAddress2": obj.get("BillingAddress2"),
            "BillingAddress3": obj.get("BillingAddress3"),
            "BillingTown": obj.get("BillingTown"),
            "BillingRegion": obj.get("BillingRegion"),
            "BillingPostCode": obj.get("BillingPostCode"),
            "BillingCountryName": obj.get("BillingCountryName"),
            "BillingPhoneNumber": obj.get("BillingPhoneNumber"),
            "cItemNumber": obj.get("cItemNumber"),
            "cItemName": obj.get("cItemName"),
            "pkReturnId": obj.get("pkReturnId"),
            "RowType": obj.get("RowType"),
            "ReturnReference": obj.get("ReturnReference"),
            "PendingRefundAmount": obj.get("PendingRefundAmount"),
            "LastDate": obj.get("LastDate"),
            "Reason": obj.get("Reason"),
            "ChannelReason": obj.get("ChannelReason"),
            "ChannelReasonSec": obj.get("ChannelReasonSec"),
            "Category": obj.get("Category"),
            "ReturnQty": obj.get("ReturnQty"),
            "fkReturnLocationId": obj.get("fkReturnLocationId"),
            "Scrapped": obj.get("Scrapped"),
            "ScrapQty": obj.get("ScrapQty"),
            "ReturnDate": obj.get("ReturnDate"),
            "Location": obj.get("Location"),
            "ItemNumber": obj.get("ItemNumber"),
            "ItemTitle": obj.get("ItemTitle"),
            "NewQty": obj.get("NewQty"),
            "RefundReference": obj.get("RefundReference"),
            "pkRefundRowId": obj.get("pkRefundRowId"),
            "Amount": obj.get("Amount"),
            "CreateDate": obj.get("CreateDate"),
            "CancellationQuantity": obj.get("CancellationQuantity"),
            "fkOrderItemReturnId": obj.get("fkOrderItemReturnId"),
            "ActionDate": obj.get("ActionDate"),
            "RefundStatus": obj.get("RefundStatus")
        })
        return _obj


