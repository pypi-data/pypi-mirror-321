# coding: utf-8

"""
    Cisco Defense Orchestrator API

    Use the interactive documentation to explore the endpoints CDO has to offer

    The version of the OpenAPI document: 0.0.1
    Contact: cdo.tac@cisco.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdo_sdk_python.models.unified_object_list_view import UnifiedObjectListView

class TestUnifiedObjectListView(unittest.TestCase):
    """UnifiedObjectListView unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UnifiedObjectListView:
        """Test UnifiedObjectListView
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UnifiedObjectListView`
        """
        model = UnifiedObjectListView()
        if include_optional:
            return UnifiedObjectListView(
                uid = '',
                name = '',
                description = '',
                value = cdo_sdk_python.models.shared_object_value.SharedObjectValue(
                    object_type = 'NETWORK_OBJECT', 
                    default_content = {"literal":"a:b:c::1"}, 
                    overrides = [
                        {"targetId":"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx","content":"a:b:c::2"}
                        ], ),
                target_ids = [
                    ''
                    ],
                override_ids = [
                    ''
                    ],
                tags = {
                    'key' : [
                        ''
                        ]
                    },
                labels = [
                    ''
                    ],
                issues = {"unusedTargetIds":["xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"]}
            )
        else:
            return UnifiedObjectListView(
        )
        """

    def testUnifiedObjectListView(self):
        """Test UnifiedObjectListView"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
