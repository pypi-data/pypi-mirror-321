# coding: utf-8

"""
    Cisco Defense Orchestrator API

    Use the interactive documentation to explore the endpoints CDO has to offer

    The version of the OpenAPI document: 0.0.1
    Contact: cdo.tac@cisco.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdo_sdk_python.models.mfa_event import MfaEvent

class TestMfaEvent(unittest.TestCase):
    """MfaEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MfaEvent:
        """Test MfaEvent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MfaEvent`
        """
        model = MfaEvent()
        if include_optional:
            return MfaEvent(
                uid = '7131daad-e813-4b8f-8f42-be1e241e8cdb',
                username = 'user@example.com',
                timestamp = '2023-12-13T05:15:44Z',
                application = 'Security Cloud Sign On Preview',
                result = 'GRANTED',
                reason = 'valid_passcode',
                second_factor = 'sms_passcode',
                client_device = cdo_sdk_python.models.client_device.ClientDevice(
                    uid = '7131daad-e813-4b8f-8f42-be1e241e8cdb', 
                    location = cdo_sdk_python.models.location.Location(
                        city = 'San Jose', 
                        subdivision = 'California', 
                        country = 'United States', ), 
                    ip_address = '106.51.163.157', 
                    password_set = False, 
                    encrypted = True, 
                    firewalled = True, 
                    os = cdo_sdk_python.models.os.OS(
                        type = 'mac-intel', 
                        version = '14.2.1', ), 
                    browser = cdo_sdk_python.models.browser.Browser(
                        name = 'Chrome', 
                        version = '121.0.6167.160', ), )
            )
        else:
            return MfaEvent(
                uid = '7131daad-e813-4b8f-8f42-be1e241e8cdb',
                username = 'user@example.com',
        )
        """

    def testMfaEvent(self):
        """Test MfaEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
