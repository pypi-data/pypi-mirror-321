# coding: utf-8

"""
    Cisco Defense Orchestrator API

    Use the interactive documentation to explore the endpoints CDO has to offer

    The version of the OpenAPI document: 0.0.1
    Contact: cdo.tac@cisco.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdo_sdk_python.models.asa_create_or_update_input import AsaCreateOrUpdateInput

class TestAsaCreateOrUpdateInput(unittest.TestCase):
    """AsaCreateOrUpdateInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AsaCreateOrUpdateInput:
        """Test AsaCreateOrUpdateInput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AsaCreateOrUpdateInput`
        """
        model = AsaCreateOrUpdateInput()
        if include_optional:
            return AsaCreateOrUpdateInput(
                name = 'My ASA',
                device_address = '10.2.2.5:443',
                username = 'admin',
                password = 'Cisco@23',
                connector_type = 'CDG',
                ignore_certificate = False,
                connector_name = 'SDC-1',
                labels = cdo_sdk_python.models.labels.Labels(
                    grouped_labels = {"group1":["label-1","label-2"],"group2":["label-1","label-2"]}, 
                    ungrouped_labels = ["label-a","label-b","label-c"], )
            )
        else:
            return AsaCreateOrUpdateInput(
                name = 'My ASA',
                username = 'admin',
                password = 'Cisco@23',
                connector_type = 'CDG',
        )
        """

    def testAsaCreateOrUpdateInput(self):
        """Test AsaCreateOrUpdateInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
