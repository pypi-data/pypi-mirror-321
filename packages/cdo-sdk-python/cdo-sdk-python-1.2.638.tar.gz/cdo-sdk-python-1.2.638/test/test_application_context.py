# coding: utf-8

"""
    CDO API

    Use the documentation to explore the endpoints CDO has to offer

    The version of the OpenAPI document: 1.4.0
    Contact: cdo.tac@cisco.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdo_sdk_python.models.application_context import ApplicationContext

class TestApplicationContext(unittest.TestCase):
    """ApplicationContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationContext:
        """Test ApplicationContext
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationContext`
        """
        model = ApplicationContext()
        if include_optional:
            return ApplicationContext(
                parent = cdo_sdk_python.models.application_context.ApplicationContext(
                    parent = cdo_sdk_python.models.application_context.ApplicationContext(
                        id = '', 
                        display_name = '', 
                        autowire_capable_bean_factory = cdo_sdk_python.models.autowire_capable_bean_factory.autowireCapableBeanFactory(), 
                        application_name = '', 
                        startup_date = 56, 
                        environment = cdo_sdk_python.models.environment.Environment(
                            active_profiles = [
                                ''
                                ], 
                            default_profiles = [
                                ''
                                ], ), 
                        bean_definition_count = 56, 
                        bean_definition_names = [
                            ''
                            ], 
                        parent_bean_factory = cdo_sdk_python.models.parent_bean_factory.parentBeanFactory(), 
                        class_loader = cdo_sdk_python.models.application_context_class_loader.ApplicationContext_classLoader(
                            name = '', 
                            registered_as_parallel_capable = True, 
                            unnamed_module = cdo_sdk_python.models.application_context_class_loader_parent_unnamed_module.ApplicationContext_classLoader_parent_unnamedModule(
                                name = '', 
                                descriptor = cdo_sdk_python.models.application_context_class_loader_parent_unnamed_module_descriptor.ApplicationContext_classLoader_parent_unnamedModule_descriptor(
                                    open = True, 
                                    automatic = True, ), 
                                named = True, 
                                annotations = [
                                    None
                                    ], 
                                declared_annotations = [
                                    None
                                    ], 
                                packages = [
                                    ''
                                    ], 
                                layer = cdo_sdk_python.models.layer.layer(), ), 
                            defined_packages = [
                                cdo_sdk_python.models.application_context_class_loader_parent_unnamed_module_class_loader_defined_packages_inner.ApplicationContext_classLoader_parent_unnamedModule_classLoader_definedPackages_inner(
                                    name = '', 
                                    sealed = True, 
                                    specification_title = '', 
                                    specification_version = '', 
                                    specification_vendor = '', 
                                    implementation_title = '', 
                                    implementation_version = '', 
                                    implementation_vendor = '', )
                                ], 
                            default_assertion_status = True, ), ), 
                    id = '', 
                    display_name = '', 
                    autowire_capable_bean_factory = cdo_sdk_python.models.autowire_capable_bean_factory.autowireCapableBeanFactory(), 
                    application_name = '', 
                    startup_date = 56, 
                    environment = cdo_sdk_python.models.environment.Environment(), 
                    bean_definition_count = 56, 
                    bean_definition_names = [
                        ''
                        ], 
                    parent_bean_factory = cdo_sdk_python.models.parent_bean_factory.parentBeanFactory(), 
                    class_loader = cdo_sdk_python.models.application_context_class_loader.ApplicationContext_classLoader(
                        name = '', 
                        registered_as_parallel_capable = True, 
                        default_assertion_status = True, ), ),
                id = '',
                display_name = '',
                autowire_capable_bean_factory = cdo_sdk_python.models.autowire_capable_bean_factory.autowireCapableBeanFactory(),
                application_name = '',
                startup_date = 56,
                environment = cdo_sdk_python.models.environment.Environment(
                    active_profiles = [
                        ''
                        ], 
                    default_profiles = [
                        ''
                        ], ),
                bean_definition_count = 56,
                bean_definition_names = [
                    ''
                    ],
                parent_bean_factory = cdo_sdk_python.models.parent_bean_factory.parentBeanFactory(),
                class_loader = cdo_sdk_python.models.application_context_class_loader.ApplicationContext_classLoader(
                    name = '', 
                    registered_as_parallel_capable = True, 
                    parent = cdo_sdk_python.models.application_context_class_loader_parent.ApplicationContext_classLoader_parent(
                        name = '', 
                        registered_as_parallel_capable = True, 
                        unnamed_module = cdo_sdk_python.models.application_context_class_loader_parent_unnamed_module.ApplicationContext_classLoader_parent_unnamedModule(
                            name = '', 
                            descriptor = cdo_sdk_python.models.application_context_class_loader_parent_unnamed_module_descriptor.ApplicationContext_classLoader_parent_unnamedModule_descriptor(
                                open = True, 
                                automatic = True, ), 
                            named = True, 
                            annotations = [
                                None
                                ], 
                            declared_annotations = [
                                None
                                ], 
                            packages = [
                                ''
                                ], 
                            layer = cdo_sdk_python.models.layer.layer(), ), 
                        defined_packages = [
                            cdo_sdk_python.models.application_context_class_loader_parent_unnamed_module_class_loader_defined_packages_inner.ApplicationContext_classLoader_parent_unnamedModule_classLoader_definedPackages_inner(
                                name = '', 
                                sealed = True, 
                                specification_title = '', 
                                specification_version = '', 
                                specification_vendor = '', 
                                implementation_title = '', 
                                implementation_version = '', 
                                implementation_vendor = '', )
                            ], 
                        default_assertion_status = True, ), 
                    unnamed_module = cdo_sdk_python.models.application_context_class_loader_parent_unnamed_module.ApplicationContext_classLoader_parent_unnamedModule(
                        name = '', 
                        named = True, 
                        layer = cdo_sdk_python.models.layer.layer(), ), 
                    defined_packages = [
                        cdo_sdk_python.models.application_context_class_loader_parent_unnamed_module_class_loader_defined_packages_inner.ApplicationContext_classLoader_parent_unnamedModule_classLoader_definedPackages_inner(
                            name = '', 
                            sealed = True, 
                            specification_title = '', 
                            specification_version = '', 
                            specification_vendor = '', 
                            implementation_title = '', 
                            implementation_version = '', 
                            implementation_vendor = '', )
                        ], 
                    default_assertion_status = True, )
            )
        else:
            return ApplicationContext(
        )
        """

    def testApplicationContext(self):
        """Test ApplicationContext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
