# coding: utf-8

"""
    CDO API

    Use the documentation to explore the endpoints CDO has to offer

    The version of the OpenAPI document: 1.1.0
    Contact: cdo.tac@cisco.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdo_sdk_python.models.active_directory_group_create_or_update_input import ActiveDirectoryGroupCreateOrUpdateInput

class TestActiveDirectoryGroupCreateOrUpdateInput(unittest.TestCase):
    """ActiveDirectoryGroupCreateOrUpdateInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActiveDirectoryGroupCreateOrUpdateInput:
        """Test ActiveDirectoryGroupCreateOrUpdateInput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActiveDirectoryGroupCreateOrUpdateInput`
        """
        model = ActiveDirectoryGroupCreateOrUpdateInput()
        if include_optional:
            return ActiveDirectoryGroupCreateOrUpdateInput(
                name = 'myusername',
                role = 'ROLE_ADMIN',
                group_identifier = '7131daad-e813-4b8f-8f42-be1e241e8cdb',
                issuer_url = 'https://access.example.com/saml2/idp/metadata.php',
                notes = 'This is an example note on the Active Directory Group.'
            )
        else:
            return ActiveDirectoryGroupCreateOrUpdateInput(
                name = 'myusername',
                group_identifier = '7131daad-e813-4b8f-8f42-be1e241e8cdb',
                issuer_url = 'https://access.example.com/saml2/idp/metadata.php',
        )
        """

    def testActiveDirectoryGroupCreateOrUpdateInput(self):
        """Test ActiveDirectoryGroupCreateOrUpdateInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
