[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
authors = [
    { name = "Lucas Colley", email = "lucas.colley8@gmail.com" },
    # { name = "Open Source Contributors" },  # https://github.com/pypi/warehouse/issues/14813
]
name = "quantity-array"
description = "Quantities with array API standard arrays."
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ["version"]
requires-python = ">=3.10"

[project.urls]
Homepage = "https://github.com/quantity-dev/quantity-array"

[tool.hatch]
version.path = "src/quantity_array/__init__.py"

[tool.pixi.project]
channels = ["https://prefix.dev/conda-forge"]
platforms = ["linux-64", "osx-arm64", "win-64"]

[tool.pixi.dependencies]
pint = ">=0.24.4,<0.25"
array-api-compat = ">=1.10.0,<2"
array-api-strict = ">=2.2,<3"

[tool.pixi.pypi-dependencies]
quantity-array = { path = ".", editable = true }

[tool.pixi.feature.dev.dependencies]
ipython = ">=8.31.0,<9"
pre-commit = "*"

[tool.pixi.feature.dev.tasks]
lint = "pre-commit run --all-files"
ipython = "ipython"

[tool.pixi.feature.tests.dependencies]
pytest = "*"
pytest-subtests = "*"

[tool.pixi.feature.tests.tasks]
tests = "pytest tests"

[tool.pixi.feature.xp-tests.dependencies]
pytest = "*"
pytest-json-report = "*"
hypothesis = "*"
ndindex = "*"
array-api-strict = "*"

[tool.pixi.feature.xp-tests.tasks]
# clean array-api-tests dir
clean-xp-tests = { cwd = ".", cmd = "rm -rf array-api-tests" }
# clone array-api-tests
clone-xp-tests.cmd = [
    "git",
    "clone",
    "https://github.com/data-apis/array-api-tests.git",
    "&&",
    "cd",
    "array-api-tests",
    "&&",
    "git",
    "submodule",
    "update",
    "--init",
]
clone-xp-tests.cwd = "."
clone-xp-tests.depends-on = ["clean-xp-tests"]
# run tests
xp-tests.cmd = [
    "pytest",
    "-v",
    "-rxXfE",
    "-W",
    # https://github.com/data-apis/array-api-tests/issues/284
    "ignore::UserWarning",
    # https://github.com/data-apis/array-api-tests/issues/329
    "--disable-extension",
    "fft",
    "--disable-extension",
    "linalg",
    "--xfails-file",
    "../xp-tests-xfails.txt",
    "--max-examples=100",
    "--derandomize",
    "--disable-deadline",
    "array_api_tests/",
]
xp-tests.env.ARRAY_API_TESTS_MODULE = "quantity_array.array_api_strict"
xp-tests.cwd = "array-api-tests"
xp-tests.depends-on = ["clone-xp-tests"]

[tool.pixi.feature.py310.dependencies]
python = "~=3.10.0"

[tool.pixi.feature.py313.dependencies]
python = "~=3.13.0"

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev", "tests", "xp-tests"], solve-group = "default" }
ci-py310 = ["py310", "tests", "xp-tests"]
ci-py313 = ["py313", "tests", "xp-tests"]

[tool.ruff]
target-version = "py310"
exclude = ["src/quantity_array/funcs.py"]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "F",   # Pyflakes
    "I",   # isort
    "E",   # Pycodestyle
    "W",   # Pycodestyle
    "N",   # pep8-naming
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
    "UP",  # Pyupgrade
]
ignore = [
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "ISC001",  # Conflicts with formatter
    "N802",    # Function name should be lowercase
    "N806",    # Variable in function should be lowercase
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
