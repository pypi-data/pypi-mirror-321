# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API

    The version of the OpenAPI document: 0.0.2
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from asl_api.models.content_v1alpha1_silver_preset_list import ContentV1alpha1SilverPresetList

class TestContentV1alpha1SilverPresetList(unittest.TestCase):
    """ContentV1alpha1SilverPresetList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentV1alpha1SilverPresetList:
        """Test ContentV1alpha1SilverPresetList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentV1alpha1SilverPresetList`
        """
        model = ContentV1alpha1SilverPresetList()
        if include_optional:
            return ContentV1alpha1SilverPresetList(
                recommended_presets = [
                    asl_api.models.content_v1alpha1_pre_transform_preset_list_recommended_presets_inner.content_v1alpha1_PreTransformPresetList_recommendedPresets_inner(
                        name = '', 
                        author = '', 
                        description = '', )
                    ],
                other_presets = [
                    asl_api.models.content_v1alpha1_pre_transform_preset_list_recommended_presets_inner.content_v1alpha1_PreTransformPresetList_recommendedPresets_inner(
                        name = '', 
                        author = '', 
                        description = '', )
                    ]
            )
        else:
            return ContentV1alpha1SilverPresetList(
        )
        """

    def testContentV1alpha1SilverPresetList(self):
        """Test ContentV1alpha1SilverPresetList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
