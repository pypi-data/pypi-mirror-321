# coding: utf-8

"""
    Antimatter Security Lakehouse Public API

    Interact with the Antimatter ASL API

    The version of the OpenAPI document: 0.0.2
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from asl_api.models.dbui_v1alpha1_create_notebook_request import DbuiV1alpha1CreateNotebookRequest

class TestDbuiV1alpha1CreateNotebookRequest(unittest.TestCase):
    """DbuiV1alpha1CreateNotebookRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbuiV1alpha1CreateNotebookRequest:
        """Test DbuiV1alpha1CreateNotebookRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbuiV1alpha1CreateNotebookRequest`
        """
        model = DbuiV1alpha1CreateNotebookRequest()
        if include_optional:
            return DbuiV1alpha1CreateNotebookRequest(
                template_type = 'silverTransform',
                convert = asl_api.models.dbui_v1alpha1_create_notebook_request_convert.dbui_v1alpha1_CreateNotebookRequest_convert(
                    use_preset = '', 
                    preset_table = '', 
                    filter = '', 
                    post_filter = '', 
                    preset_overrides = asl_api.models.dbui_v1alpha1_create_notebook_request_convert_preset_overrides.dbui_v1alpha1_CreateNotebookRequest_convert_presetOverrides(
                        omit_fields = [
                            ''
                            ], ), 
                    add_fields = [
                        asl_api.models.core/v1alpha1/data_source/field_spec.core.v1alpha1.DataSource.FieldSpec(
                            name = '', 
                            from = '', 
                            alias = '', 
                            expr = '', 
                            literal = '', 
                            join = asl_api.models.core_v1alpha1_data_source_field_spec_join.core_v1alpha1_DataSource_FieldSpec_join(
                                with_table = '', 
                                with_csv = asl_api.models.core_v1alpha1_data_source_field_spec_join_with_csv.core_v1alpha1_DataSource_FieldSpec_join_withCSV(
                                    path = '', ), 
                                lhs = '', 
                                rhs = '', 
                                select = '', ), )
                        ], ),
                name = ''
            )
        else:
            return DbuiV1alpha1CreateNotebookRequest(
                template_type = 'silverTransform',
                name = '',
        )
        """

    def testDbuiV1alpha1CreateNotebookRequest(self):
        """Test DbuiV1alpha1CreateNotebookRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
