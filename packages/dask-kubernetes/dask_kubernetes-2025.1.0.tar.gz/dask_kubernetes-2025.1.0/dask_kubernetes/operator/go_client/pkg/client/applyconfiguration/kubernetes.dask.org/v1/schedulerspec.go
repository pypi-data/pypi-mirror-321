// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// SchedulerSpecApplyConfiguration represents an declarative configuration of the SchedulerSpec type for use
// with apply.
type SchedulerSpecApplyConfiguration struct {
	Spec    *v1.PodSpec     `json:"spec,omitempty"`
	Service *v1.ServiceSpec `json:"service,omitempty"`
}

// SchedulerSpecApplyConfiguration constructs an declarative configuration of the SchedulerSpec type for use with
// apply.
func SchedulerSpec() *SchedulerSpecApplyConfiguration {
	return &SchedulerSpecApplyConfiguration{}
}

// WithSpec sets the Spec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Spec field is set to the value of the last call.
func (b *SchedulerSpecApplyConfiguration) WithSpec(value v1.PodSpec) *SchedulerSpecApplyConfiguration {
	b.Spec = &value
	return b
}

// WithService sets the Service field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Service field is set to the value of the last call.
func (b *SchedulerSpecApplyConfiguration) WithService(value v1.ServiceSpec) *SchedulerSpecApplyConfiguration {
	b.Service = &value
	return b
}
