Metadata-Version: 2.3
Name: pylint-per-file-ignores
Version: 1.4.0
Summary: A pylint plugin to ignore error codes per file.
License: MIT
Author: Christopher Pickering
Author-email: christopher@going.bg
Requires-Python: >=3.8.1,<4.0.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: tomli (>=2.0.1,<3.0.0) ; python_version < "3.11"
Project-URL: Repository, https://github.com/christopherpickering/pylint-per-file-ignores.git
Description-Content-Type: text/markdown

# Pylint Per File Ignores ðŸ˜²

This pylint plugin will enable per-file-ignores in your project!

## Install

```
# w/ poetry
poetry add pylint-per-file-ignores --group dev

# w/ pip
pip install pylint-per-file-ignores
```

## Add to Pylint Settings

```toml
[tool.pylint.MASTER]
load-plugins=[
    "pylint_per_file_ignores",
    ...
]
```


## Usage

Add list of patterns and codes you would like to ignore.

### Using native pylint settings

Section "MESSAGES CONTROL". Examples:

```ini
# setup.cfg

[pylint.MESSAGES CONTROL]
per-file-ignores =
  /folder_1/:missing-function-docstring,W0621,W0240,C0115
  file.py:C0116,E0001
```

```toml
# pyproject.toml

[tool.pylint.'messages control']
per-file-ignores = [
    "/folder_1/:missing-function-docstring,W0621,W0240,C0115",
    "file.py:C0116,E0001"
]
```

### Using custom `pyproject.toml` section

For backwards compatibility only. Example:

```toml
[tool.pylint-per-file-ignores]
"/folder_1/"="missing-function-docstring,W0621,W0240,C0115"
"file.py"="C0116,E0001"
```

## Thanks

To pylint :) And the plugin `pylint-django` who produced most of the complex code.

## Contributing

This repo uses commitizen and semantic release. Please commit using `npm run commit` .

