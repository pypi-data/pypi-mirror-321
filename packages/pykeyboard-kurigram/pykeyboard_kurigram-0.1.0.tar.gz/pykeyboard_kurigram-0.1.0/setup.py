# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pykeyboard']

package_data = \
{'': ['*']}

install_requires = \
['kurigram>=2.1.36,<3.0.0', 'tgcrypto>=1.2.5,<2.0.0']

setup_kwargs = {
    'name': 'pykeyboard-kurigram',
    'version': '0.1.0',
    'description': 'Best Keyboard and Pagination for the Pyrogram Library.',
    'long_description': '<div align="center">\n<p align="center">\n<img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/logo.png" alt="pykeyboard">\n</p>\n\n![PyPI](https://img.shields.io/pypi/v/pykeyboard-kurigram)\n[![Downloads](https://pepy.tech/badge/pykeyboard-kurigram)](https://pepy.tech/project/pykeyboard-kurigram)\n![GitHub](https://img.shields.io/github/license/pystorage/pykeyboard-kurigram)\n\n <p><h2>ðŸŽ‰This is pykeyboard for <a href="https://github.com/KurimuzonAkuma/pyrogram">Kurigram</a> ðŸŽ‰</h2></p>\n <br>\n <p><strong><em>No need to change your code, just install the library and you\'re good to go.</em></strong></p>\n\n</div>\n\n# Pykeyboard\n\n- [Pykeyboard](#pykeyboard)\n- [What\'s new?](#whats-new)\n- [Installation](#installation)\n- [Documentation](#documentation)\n  - [Inline Keyboard](#inline-keyboard)\n        - [Parameters:](#parameters)\n    - [Inline Keyboard add buttons](#inline-keyboard-add-buttons)\n      - [Code](#code)\n      - [Result](#result)\n    - [Inline Keyboard row buttons](#inline-keyboard-row-buttons)\n      - [Code](#code-1)\n      - [Result](#result-1)\n    - [Pagination inline keyboard](#pagination-inline-keyboard)\n      - [Parameters:](#parameters-1)\n      - [Pagination 3 pages](#pagination-3-pages)\n      - [Code](#code-2)\n      - [Result](#result-2)\n      - [Pagination 5 pages](#pagination-5-pages)\n      - [Code](#code-3)\n      - [Result](#result-3)\n      - [Pagination 9 pages](#pagination-9-pages)\n      - [Code](#code-4)\n      - [Result](#result-4)\n      - [Pagination 100 pages](#pagination-100-pages)\n      - [Code](#code-5)\n      - [Result](#result-5)\n      - [Pagination 150 pages and buttons](#pagination-150-pages-and-buttons)\n      - [Code](#code-6)\n      - [Result](#result-6)\n    - [Languages inline keyboard](#languages-inline-keyboard)\n      - [Parameters:](#parameters-2)\n      - [Code](#code-7)\n      - [Result](#result-7)\n  - [Reply Keyboard](#reply-keyboard)\n      - [Parameters:](#parameters-3)\n    - [Reply Keyboard add buttons](#reply-keyboard-add-buttons)\n      - [Code](#code-8)\n      - [Result](#result-8)\n    - [Reply Keyboard row buttons](#reply-keyboard-row-buttons)\n      - [Code](#code-9)\n      - [Result](#result-9)\n\n# What\'s new?\n\n- Overriding the <b>KeyboardButton</b>, <b>ReplyKeyboardRemove</b>, <b>ForceReply</b>, <b>InlineKeyboardButton</b> methods in <b>ReplyButton</b>, <b>ReplyKeyboardRemove</b>, <b>ForceReply</b>, <b>InlineButton</b>.\n- Added new method <b>InlineKeyboard</b>. To send <a href="#languages-inline-keyboard"><ins>language selection keyboard</ins></a>.\n- Minor changes due to update in Pyrogram.\n\n# Installation\n\n```shell\n\npip install pykeyboard-kurigram\n\n```\n\nor\n\n```shell\n\npoetry add pykeyboard-kurigram\n\n```\n\n# Documentation\n\n## Inline Keyboard\n\n```python\nfrom pykeyboard import InlineKeyboard\n```\n\n##### Parameters:\n\n- row_width (integer, default 3)\n\n### Inline Keyboard add buttons\n\n#### Code\n\n```python\nfrom pykeyboard import InlineKeyboard, InlineButton\n\n\nkeyboard = InlineKeyboard(row_width=3)\nkeyboard.add(\n    InlineButton(\'1\', \'inline_keyboard:1\'),\n    InlineButton(\'2\', \'inline_keyboard:2\'),\n    InlineButton(\'3\', \'inline_keyboard:3\'),\n    InlineButton(\'4\', \'inline_keyboard:4\'),\n    InlineButton(\'5\', \'inline_keyboard:5\'),\n    InlineButton(\'6\', \'inline_keyboard:6\'),\n    InlineButton(\'7\', \'inline_keyboard:7\')\n)\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/add_inline_button.png" alt="add_inline_button"></p>\n\n### Inline Keyboard row buttons\n\n#### Code\n\n```python\nfrom pykeyboard import InlineKeyboard, InlineButton\n\n\nkeyboard = InlineKeyboard()\nkeyboard.row(InlineButton(\'1\', \'inline_keyboard:1\'))\nkeyboard.row(\n    InlineButton(\'2\', \'inline_keyboard:2\'),\n    InlineButton(\'3\', \'inline_keyboard:3\')\n)\nkeyboard.row(InlineButton(\'4\', \'inline_keyboard:4\'))\nkeyboard.row(\n    InlineButton(\'5\', \'inline_keyboard:5\'),\n    InlineButton(\'6\', \'inline_keyboard:6\')\n)\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/row_inline_button.png" alt="row_inline_button"></p>\n\n### Pagination inline keyboard\n\n```python\nfrom pykeyboard import InlineKeyboard\n```\n\n#### Parameters:\n\n- count_pages (integer)\n- current_page (integer)\n- callback_pattern (string) - use of the `{number}` pattern is <ins>required</ins>\n\n#### Pagination 3 pages\n\n#### Code\n\n```python\nfrom pykeyboard import InlineKeyboard\n\nkeyboard = InlineKeyboard()\nkeyboard.paginate(3, 3, \'pagination_keyboard:{number}\')\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/pagination_keyboard_3.png" alt="pagination_keyboard_3"></p>\n\n#### Pagination 5 pages\n\n#### Code\n\n```python\nfrom pykeyboard import InlineKeyboard\n\nkeyboard = InlineKeyboard()\nkeyboard.paginate(5, 3, \'pagination_keyboard:{number}\')\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/pagination_keyboard_5.png" alt="pagination_keyboard_5"></p>\n\n#### Pagination 9 pages\n\n#### Code\n\n```python\nfrom pykeyboard import InlineKeyboard\n\nkeyboard = InlineKeyboard()\nkeyboard.paginate(9, 5, \'pagination_keyboard:{number}\')\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/pagination_keyboard_9.png" alt="pagination_keyboard_9"></p>\n\n#### Pagination 100 pages\n\n#### Code\n\n```python\nfrom pykeyboard import InlineKeyboard\n\nkeyboard = InlineKeyboard()\nkeyboard.paginate(100, 100, \'pagination_keyboard:{number}\')\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/pagination_keyboard_100.png" alt="pagination_keyboard_100"></p>\n\n#### Pagination 150 pages and buttons\n\n#### Code\n\n```python\nfrom pykeyboard import InlineKeyboard, InlineButton\n\nkeyboard = InlineKeyboard()\nkeyboard.paginate(150, 123, \'pagination_keyboard:{number}\')\nkeyboard.row(\n    InlineButton(\'Back\', \'pagination_keyboard:back\'),\n    InlineButton(\'Close\', \'pagination_keyboard:close\')\n)\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/pagination_keyboard_150.png" alt="pagination_keyboard_150"></p>\n\n### Languages inline keyboard\n\n```python\nfrom pykeyboard import InlineKeyboard\n```\n\n#### Parameters:\n\n- callback_pattern (string) - use of the `{locale}` pattern is <ins>required</ins>\n- locales (string | list) - list of language codes\n  - be_BY - Belarusian\n  - de_DE - German\n  - zh_CN - Chinese\n  - en_US - English\n  - fr_FR - French\n  - id_ID - Indonesian\n  - it_IT - Italian\n  - ko_KR - Korean\n  - tr_TR - Turkish\n  - ru_RU - Russian\n  - es_ES - Spanish\n  - uk_UA - Ukrainian\n  - uz_UZ - Uzbek\n- row_width (integer, default 2)\n<p>P.S. To add new languages, write to me in <a href="https://t.me/pymaster">@PyMaster</a> telegram.</p>\n\n#### Code\n\n```python\nfrom pykeyboard import InlineKeyboard\n\n\nkeyboard = InlineKeyboard(row_width=3)\nkeyboard.languages(\n    \'languages:{locale}\', [\'en_US\', \'ru_RU\', \'id_ID\'], 2\n)\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/languages_keyboard.png" alt="languages_keyboard"></p>\n\n## Reply Keyboard\n\n```python\nfrom pykeyboard import ReplyKeyboard\n```\n\n#### Parameters:\n\n- resize_keyboard (bool, optional)\n- one_time_keyboard (bool, optional)\n- selective (bool, optional)\n- row_width (integer, default 3)\n\n### Reply Keyboard add buttons\n\n#### Code\n\n```python\nfrom pykeyboard import ReplyKeyboard, ReplyButton\n\n\nkeyboard = ReplyKeyboard(row_width=3)\nkeyboard.add(\n    ReplyButton(\'Reply button 1\'),\n    ReplyButton(\'Reply button 2\'),\n    ReplyButton(\'Reply button 3\'),\n    ReplyButton(\'Reply button 4\'),\n    ReplyButton(\'Reply button 5\')\n)\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/add_reply_button.png" alt="add_reply_button"></p>\n\n### Reply Keyboard row buttons\n\n#### Code\n\n```python\nfrom pykeyboard import ReplyKeyboard, ReplyButton\n\n\nkeyboard = ReplyKeyboard()\nkeyboard.row(ReplyButton(\'Reply button 1\'))\nkeyboard.row(\n    ReplyButton(\'Reply button 2\'),\n    ReplyButton(\'Reply button 3\')\n)\nkeyboard.row(ReplyButton(\'Reply button 4\'))\nkeyboard.row(ReplyButton(\'Reply button 5\'))\n```\n\n#### Result\n\n<p><img src="https://raw.githubusercontent.com/pystorage/pykeyboard/master/docs/source/images/row_reply_button.png" alt="row_reply_button"></p>\n',
    'author': 'Johnnie',
    'author_email': '99084912+johnnie-610@users.noreply.github.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'None',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
