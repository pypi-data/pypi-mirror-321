[tool.poetry]
name = "aimq"
version = "0.1.0"
description = "A robust message queue processor for Supabase pgmq with AI-powered document processing capabilities"
authors = ["AIMQ Contributors"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/bldxio/aimq"
repository = "https://github.com/bldxio/aimq"
documentation = "https://bldxio.github.io/aimq"
keywords = ["ai", "ocr", "document-processing", "supabase", "pgmq", "queue", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [
    { include = "aimq", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
easyocr = "^1.7.1"
torch = "^2.1.2"
python-dotenv = "^1.0.0"
supabase = "^2.10.0"
typer = {extras = ["all"], version = "^0.9.0"}
rich = "^13.7.0"
pillow = "^10.2.0"
openai = "^1.57.1"
langchain = "^0.3.10"
langchain-openai = "^0.2.12"
pydantic-settings = "^2.6.1"
filetype = "^1.2.0"
humanize = "^4.11.0"
pypdfium2 = "^4.30.1"
mkdocs-dracula-theme = "^1.0.7"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.5"
httpx = "^0.27.0"
pytest-cov = "^4.1.0"
ipykernel = "^6.29.5"
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.49"
mkdocstrings = {extras = ["python"], version = "^0.27.0"}
mkdocs-gen-files = "^0.5.0"

[tool.poetry.scripts]
aimq = "aimq.commands:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=aimq --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["aimq"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
show_missing = true
skip_empty = true

[tool.pyright]
venvPath = "."
venv = ".venv"