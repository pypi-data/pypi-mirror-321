name: Release & publish

on:
  push:
    # branches:
    #   - main
    tags:
      - 'v*'
  # schedule:
  #   - cron: "30 0 * * 0"
  workflow_dispatch:

# concurrency:
#   group: ${{ github.ref }}-${{ github.workflow }}
#   cancel-in-progress: false

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         path: ''

  release:
    name: Release
    # needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv ${{ startsWith(github.ref, 'refs/tags/v') &&  '--latest' || '--unreleased' }} --strip header
        env:
          GITHUB_REPO: ${{ github.repository }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || 'nightly' }}
          body: ${{ steps.git-cliff.outputs.content }}
          prerelease: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
          make_latest: ${{ startsWith(github.ref, 'refs/tags/v') }}

  publish-pypi:
    name: Publish to Pypi
    runs-on: ubuntu-latest
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    environment:
      name: pypi
      url: https://pypi.org/p/cpn-cli
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: |
            pyproject.toml

      - uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml

      - uses: extractions/setup-just@v2

      - name: Install deps
        run: just restore-env

      - name: Build
        run: uv build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   password: ${{ secrets.PYPI_TOKEN }}
