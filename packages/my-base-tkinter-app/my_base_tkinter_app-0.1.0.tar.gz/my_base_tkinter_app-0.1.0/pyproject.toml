[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[project]
name = "my_base_tkinter_app"
version="0.1.0"
authors = [
  { name="Cody Baker", email="cody.c.baker.phd@gmail.com" },
]
description = "My personal base app framework, based in Tkinter."
readme = "README.md"
requires-python = ">=3.13,<3.14"
license = {file = "license.txt"}

keywords = ["template", "base", "abstract", "gui", "tkinter", "app"]

classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Operating System :: Unix",
]

[project.optional-dependencies]
icons = [
    "pillow",
]
dev = [
    "ipython",
    "pre-commit",
]
tests = [
    "pytest-cov",
    "scikit-image",
]
all = ["my_base_tkinter_app[icons,dev,tests]"]



[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$|\.spec$'
extend-exclude = '''
/(
  \.toml
  |\.yml
  |\.txt
  |\.sh
  |\.git
  |\.ini
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[project.urls]
"Homepage" = "https://github.com/CodyCBakerPhD/my_base_tkinter_app"
"Bug Tracker" = "https://github.com/CodyCBakerPhD/my_base_tkinter_app/issues"



[tool.ruff]
exclude = [
    "*/__init__.py"
]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "UP",  # Skipping due to a lot of unsafe or opinionated/not rigorously proven rules
    "CPY",  # Not applicable for open-source license
    "C416",  # Too many false positives
    "D401",  # Ignore the imperative mood convention for docstrings
    "D203",  # Ignore no blank lines after class docstring in favor of D203 (one blank line) as convention
    "D212",  # Ignore multi-line summary on first line in favor of D213 (second line) as convention
    "D402",  # False positives with this one
    "ANN101",  # Deprecated and will be removed soon
    "ANN102",  # Deprecated and will be removed soon
    "ANN401",  # Sometimes you really do need `typing.Any`
    "DTZ005",  # Timezone can't easily be detected to use for timestamping; we also just don't need it for anything
    "ICN001",  # Controversial opinion: I prefer fully explicit naming to avoid any potential confusion
    "PYI041",  # Disagree with
    "SIM103",  # Disagree with; better to write things out explicitly
    "SIM118",  # Disagree with; better to write things out explicitly
    "TID252",  # The PEP says that explicit relative imports are an acceptable alternative, but check doesn't care...
    "TD",  # TODO: I like in general, but will add back in later
    "FIX",  # Fine with to-do comments
    "ERA",  # Fine with commented code blocks on occasion
    "RET504",  # Strongly disagree with; enhances readability and simplifies debuggers
    "PLR0912",  # Not a proper calculation of complexity; also applies to match/case???
    "PLR0915",  # Not a proper calculation of complexity
    "G004",  # Will decide what best approach is for this later
    "B904",  # Disagree with; nearly always enhance exist error messages with additional information
]

[tool.ruff.lint.per-file-ignores]
"src/my_base_tkinter_app/_command_line_interface.py" = [
    "C901",  # This is an interactive command line interface; it's supposed to be a bit more complex than the API
    "S605",  # Console injections are manually OK'd
    "BLE001",  # logging is manually OK'd
    "T20",  # print statements are fine in command line interfaces
]
"src/my_base_tkinter_app/app/*" = [
    "ARG002",  # Tkinter sometimes requires callbacks to have a specific argument, even if unused
    "SLF001",  # Need to access _MEIPASS for PyInstaller _assets
    "T201",  # Fine to use `print` for _app debugging
    "BLE001",  # Error catching is handled by the _app
]
"tests/*" = [  # Neither docstrings nor annotations are required for tests
    "D100",  # Docstrings are not required for tests
    "D102",  # Docstrings are not required for tests
    "D103",  # Docstrings are not required for tests
    "D107",  # Docstrings are not required for tests
    "ANN201",  # Annotations are not required for tests
    "S101",  # Assert statements are the best way to get diffs with pytest
    "INP001",  # Tests are not a part of the package
    "T20",  # print statements are fine in tests since they can help render debugging info in GitHub Actions logs
    "PLR2004",  # False positive in explicitly written test cases
    "SLF001",  # Need to test private attributes sometimes
    "S603",  # Subprocess calls are OK in tests
    "S607",  # Partial subprocess calls are OK in tests
]

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"
known-first-party = ["my_base_tkinter_app"]



[tool.codespell]
skip = '.git*,*.pdf,*.css,*.spec'
check-hidden = true
