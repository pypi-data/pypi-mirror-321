[project]
name = "aiida-fans"
version = "0.1.0"
# dynamic = ["version"]
description = "AiiDA plugin for FANS, an FFT-based homogenization solver."
urls = {Documentation = "http://aiida-fans.readthedocs.io/en/latest/", Source = "https://github.com/ethan-shanahan/aiida-fans" }
authors = [{name = "Ethan Shanahan", email = "ethan.shanahan@gmail.com"}]
readme = "README.md"
license = "GPL-3.0-only"

classifiers = [
    "Natural Language :: English",
    "Programming Language :: Python",
    "Operating System :: POSIX :: Linux",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Development Status :: 1 - Planning",
    "Framework :: AiiDA"
]
keywords = ["aiida", "plugin", "fans"]

requires-python = ">= 3.11"
dependencies = [
    "aiida-core>=2.3"
]

[project.optional-dependencies]
docs = [
    "sphinx"
]

# Entry Points
[project.entry-points."aiida.data"]
"fans" = "aiida_fans.data:FANSParameters"
[project.entry-points."aiida.calculations"]
"fans" = "aiida_fans.calculations:FANSCalculation"
[project.entry-points."aiida.parsers"]
"fans" = "aiida_fans.parsers:FANSParser"
[project.entry-points."aiida.cmdline.data"]
"fans" = "aiida_fans.cli:data_cli"

# Build
[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]
[tool.hatch.version]
source = "vcs"
[tool.hatch.build.hooks.vcs]
version-file = "src/aiida_fans/_version.py"

# Build - Docs
[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "sphinx-build -M html docs/source docs/build"

# Formatting Configuration
[tool.ruff]
extend-exclude = ["conf.py"]
line-length = 120
[tool.ruff.lint]
ignore = [
    'PLR2004',  # Magic value used in comparison
    "D417"  # Documentation for every function parameter
]
select = [
  'E',  # pydocstyle
  'W',  # pydocstyle
  "D",  # pydocstyle
  'F',  # pyflakes
  'I',  # isort
  'N',  # pep8-naming
  'PLC',  # pylint-convention
  'PLE',  # pylint-error
  'PLR',  # pylint-refactor
  'PLW',  # pylint-warning
  'RUF'  # ruff
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
[tool.ruff.lint.pydocstyle]
convention = "google"

# Testing Configuration
[tool.pytest.ini_options]
[tool.coverage]
source = ["src/aiida_fans"]
