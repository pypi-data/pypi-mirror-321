# syntax=docker/dockerfile:1
#############################
# User specific requirements installed in the pip_packages
#############################
FROM --platform=$TARGETPLATFORM ${DOWNLOAD_IMAGE} as pip_packages

COPY --link requirements.txt /home/nonroot/requirements.txt

# Update clarifai package so we always have latest protocol to the API. Everything should land in /venv
RUN pip install --no-cache-dir -r /home/nonroot/requirements.txt && \
    (pip install --upgrade --upgrade-strategy only-if-needed --no-deps --no-cache-dir clarifai clarifai-grpc clarifai-protocol || true)
#############################

#############################
# Final image
#############################
FROM --platform=$TARGETPLATFORM ${BASE_IMAGE} as final

# Set the NUMBA cache dir to /tmp
# Set the TORCHINDUCTOR cache dir to /tmp
# The CLARIFAI* will be set by the templaing system.
ENV CLARIFAI_PAT=${CLARIFAI_PAT} \
    CLARIFAI_USER_ID=${CLARIFAI_USER_ID} \
    CLARIFAI_RUNNER_ID=${CLARIFAI_RUNNER_ID} \
    CLARIFAI_NODEPOOL_ID=${CLARIFAI_NODEPOOL_ID} \
    CLARIFAI_COMPUTE_CLUSTER_ID=${CLARIFAI_COMPUTE_CLUSTER_ID} \
    CLARIFAI_API_BASE=${CLARIFAI_API_BASE} \
    NUMBA_CACHE_DIR=/tmp/numba_cache \
    TORCHINDUCTOR_CACHE_DIR=/tmp/torchinductor_cache \
    HOME=/tmp \
    DEBIAN_FRONTEND=noninteractive

# make sure we have the latest clarifai package.
RUN (pip install --upgrade --upgrade-strategy only-if-needed --no-cache-dir clarifai==11.0.6rc3 clarifai-grpc clarifai-protocol huggingface_hub[hf_transfer] || true)

#####
# Download any checkpoints now into the final image so we don't copy large checkpoints across stages.
#####
# This creates the directory that HF downloader will populate and with nonroot:nonroot permissions up.
COPY --chown=nonroot:nonroot downloader/requirements.txt /home/nonroot/model_dir/main/1/checkpoints/.cache/not_used.yaml

# Mount the folder with the download_checkpoints.py, config.yaml that's been parsed then download
# the checkpoints. This invalidates the cache if we have a different repo_id to download, but the
# HF_TOKEN changing does not invalidate. It's validated before running the dockerfile
RUN --mount=type=secret,id=HF_TOKEN,env=HF_TOKEN --mount=type=bind,rw,source=downloader,target=/home/nonroot/model_dir/main [ -s /home/nonroot/model_dir/main/config.yaml ] && clarifai model download-checkpoints --model_path /home/nonroot/model_dir/main
#####

#####
# Copy the python packages from the previous stage.
#####
COPY --link=true --from=pip_packages /venv /venv
#####
# Copy in the actual files like config.yaml, requirements.txt, and most importantly 1/model.py
# for the actual model.
# If checkpoints aren't downloaded since a checkpoints: block is not provided, then they will
# be in the build context and copied here as well.
COPY --link=true 1/model.py /home/nonroot/main/1/model.py
# At this point we only need these for validation in the SDK.
COPY --link=true requirements.txt config.yaml /home/nonroot/main/

# Add the model directory to the python path.
ENV PYTHONPATH=${PYTHONPATH}:/home/nonroot/main
# Finally run the clarifai entrypoint to start the runner loop and local dev server.
# Note(zeiler): we may want to make this a clarifai CLI call.
ENTRYPOINT ["python", "-m", "clarifai.runners.server"]
CMD ["--model_path", "/home/nonroot/main"]
#############################
