# Generated by cloudcoil-model-codegen v0.0.33
# DO NOT EDIT

from __future__ import annotations

from datetime import datetime, timedelta
from typing import Annotated, Any, List, Literal, Optional

from pydantic import Field

from cloudcoil import apimachinery
from cloudcoil.pydantic import BaseModel
from cloudcoil.resources import Resource


class Datum(BaseModel):
    key: Annotated[str, Field(description="Key is a unique identifier for the data value")]
    value: Annotated[Any, Field(description="Value is the data value")]


class Service(BaseModel):
    ca_bundle: Annotated[
        Optional[str],
        Field(
            alias="caBundle",
            description="CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.",
        ),
    ] = None
    url: Annotated[
        str,
        Field(
            description="URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`."
        ),
    ]


class ApiCall(BaseModel):
    data: Annotated[
        Optional[List[Datum]],
        Field(
            description="The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST."
        ),
    ] = None
    method: Annotated[
        Optional[Literal["GET", "POST"]],
        Field(description="Method is the HTTP request type (GET or POST)."),
    ] = "GET"
    refresh_interval: Annotated[
        Optional[timedelta],
        Field(
            alias="refreshInterval",
            description='RefreshInterval defines the interval in duration at which to poll the APICall.\nThe duration is a sequence of decimal numbers, each with optional fraction and a unit suffix,\nsuch as "300ms", "1.5h" or "2h45m". Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".',
        ),
    ] = "PT10M"  # type: ignore
    service: Annotated[
        Optional[Service],
        Field(
            description="Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field."
        ),
    ] = None
    url_path: Annotated[
        Optional[str],
        Field(
            alias="urlPath",
            description='URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt\'s mutually exclusive with the Service field.',
        ),
    ] = None


class KubernetesResource(BaseModel):
    group: Annotated[
        Optional[str], Field(description="Group defines the group of the resource.")
    ] = None
    namespace: Annotated[
        Optional[str],
        Field(
            description="Namespace defines the namespace of the resource. Leave empty for cluster scoped resources.\nIf left empty for namespaced resources, all resources from all namespaces will be cached."
        ),
    ] = None
    resource: Annotated[
        Optional[str],
        Field(
            description='Resource defines the type of the resource.\nRequires the pluralized form of the resource kind in lowercase. (Ex., "deployments")'
        ),
    ] = None
    version: Annotated[
        Optional[str], Field(description="Version defines the version of the resource.")
    ] = None


class GlobalContextEntrySpec(BaseModel):
    api_call: Annotated[
        Optional[ApiCall],
        Field(
            alias="apiCall",
            description="Stores results from an API call which will be cached.\nMutually exclusive with KubernetesResource.\nThis can be used to make calls to external (non-Kubernetes API server) services.\nIt can also be used to make calls to the Kubernetes API server in such cases:\n1. A POST is needed to create a resource.\n2. Finer-grained control is needed. Example: To restrict the number of resources cached.",
        ),
    ] = None
    kubernetes_resource: Annotated[
        Optional[KubernetesResource],
        Field(
            alias="kubernetesResource",
            description="Stores a list of Kubernetes resources which will be cached.\nMutually exclusive with APICall.",
        ),
    ] = None


class Condition(BaseModel):
    last_transition_time: Annotated[
        datetime,
        Field(
            alias="lastTransitionTime",
            description="lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
        ),
    ]
    message: Annotated[
        str,
        Field(
            description="message is a human readable message indicating details about the transition.\nThis may be an empty string.",
            max_length=32768,
        ),
    ]
    observed_generation: Annotated[
        Optional[int],
        Field(
            alias="observedGeneration",
            description="observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
            ge=0,
        ),
    ] = None
    reason: Annotated[
        str,
        Field(
            description="reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
            max_length=1024,
            min_length=1,
            pattern="^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
        ),
    ]
    status: Annotated[
        Literal["True", "False", "Unknown"],
        Field(description="status of the condition, one of True, False, Unknown."),
    ]
    type: Annotated[
        str,
        Field(
            description="type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
            max_length=316,
            pattern="^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
        ),
    ]


class GlobalContextEntryStatus(BaseModel):
    conditions: Optional[List[Condition]] = None
    last_refresh_time: Annotated[
        Optional[datetime],
        Field(
            alias="lastRefreshTime",
            description="Indicates the time when the globalcontextentry was last refreshed successfully for the API Call",
        ),
    ] = None
    ready: Annotated[bool, Field(description="Deprecated in favor of Conditions")]


class GlobalContextEntry(Resource):
    api_version: Annotated[
        Optional[Literal["kyverno.io/v2alpha1"]],
        Field(
            alias="apiVersion",
            description="APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
        ),
    ] = "kyverno.io/v2alpha1"
    kind: Annotated[
        Optional[Literal["GlobalContextEntry"]],
        Field(
            description="Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        ),
    ] = "GlobalContextEntry"
    metadata: Optional[apimachinery.ObjectMeta] = None
    spec: GlobalContextEntrySpec
    status: Optional[GlobalContextEntryStatus] = None
