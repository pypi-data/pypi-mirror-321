'use strict';window.$==void 0&&(window.$=MyAMS.$);var a={unloadHandler:null,wsClient:null,accessToken:null,refreshToken:null,checkInterval:null,initChat:()=>{a.initService();MyAMS.notifications.getNotificationsBadge()},initService:()=>'serviceWorker' in navigator&&(navigator.serviceWorker.register('/chat-sw.js').then(A=>console.debug('>>> Chat ServiceWorker registered with scope: ',A.scope)).catch(_=>console.debug('>>> Chat ServiceWorker registration failed: ',_)),navigator.serviceWorker.addEventListener('message',a.onServiceMessage),navigator.serviceWorker.ready.then(b=>{console.debug('>>> Service worker ready',b);const B=$('#user-notifications'),c=B.data('ams-notifications-endpoint'),d=B.data('ams-jwt-refresh-route'),e=`${B.data('ams-jwt-verify-route')}`;setTimeout(()=>{console.debug(`  > fetching URL ${e}...`);MyAMS.require('ajax','notifications').then(()=>MyAMS.ajax.get(e).then(C=>{console.debug('  > got JWT token!',C);b.active.postMessage(JSON.stringify({action:'setConfig',config:{accessToken:C.accessToken,refreshToken:C.refreshToken,wsEndpoint:c,jwtRefreshRoute:d,jwtVerifyRoute:e}}))}))},100)}),setInterval(async ()=>await fetch('/chat-ping'),15000)),onServiceMessage:_a=>{console.debug('>>> received service message',_a);const _b=_a.data,_c=a.services[_b.action];_c?.(_b)},services:{notify:D=>MyAMS.notifications.addNotification(D,!1)}};window.MyAMS&&(MyAMS.config.modules.push('chat'),MyAMS.chat=a,console.debug('MyAMS: chat module loaded...'));
