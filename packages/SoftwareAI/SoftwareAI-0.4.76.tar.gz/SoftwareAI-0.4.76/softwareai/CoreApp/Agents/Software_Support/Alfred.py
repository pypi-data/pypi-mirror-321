

#########################################
# IMPORT SoftwareAI Core
from softwareai.CoreApp._init_core_ import * 
#########################################
# IMPORT SoftwareAI Libs 
from softwareai.CoreApp._init_libs_ import *
#########################################
# IMPORT SoftwareAI All Paths 
from softwareai.CoreApp._init_paths_ import *
#########################################
# IMPORT SoftwareAI Instructions
from softwareai.CoreApp.SoftwareAI.Instructions._init_Instructions_ import *
#########################################
# IMPORT SoftwareAI Tools
from softwareai.CoreApp.SoftwareAI.Tools._init_tools_ import *
#########################################
# IMPORT SoftwareAI keys
from softwareai.CoreApp._init_keys_ import *
#########################################

######################################### SoftwareAI Core #########################################

# IMPORT SoftwareAI Functions
from softwareai.CoreApp.SoftwareAI.Functions._init_functions_ import *
#########################################
# IMPORT SoftwareAI Functions Submit Outputs
from softwareai.CoreApp.SoftwareAI.Functions_Submit_Outputs._init_submit_outputs_ import _init_output_


class AlfredSupport_NordVPN_Auto_Rotate:
    def __init__(self,
                appfb,
                client,
                TOKEN,
                CHANNEL_ID
            ):
        self.appfb = appfb
        self.client = client
        self.TOKEN = TOKEN
        self.CHANNEL_ID = CHANNEL_ID
        self.user_threads = {}
        self.emojis = ['üòä', 'ü§ñ', 'üöÄ', 'üí°', 'üéâ']

        self.instruction = """
            ### Instru√ß√µes para Assistente de Suporte: NordVPN Auto Rotate

            ## Objetivo
            Oferecer suporte completo aos usu√°rios do **NordVPN Auto Rotate**, garantindo a resolu√ß√£o r√°pida de problemas e fornecendo informa√ß√µes claras sobre o uso e funcionamento do software.

            ## Diretrizes de Atendimento

            ### 1. **Boas-vindas e Agradecimento**
            - Agrade√ßa ao cliente por escolher o NordVPN Auto Rotate.
            - Envie a seguinte mensagem padr√£o de boas-vindas:

            **Mensagem de Boas-vindas:**

            "Obrigado por escolher o **NordVPN Auto Rotate**. Aproveite todos os benef√≠cios de seguran√ßa e privacidade que nosso aplicativo oferece.

            üì• **Download do Aplicativo:** [Clique aqui para baixar](https://www.mediafire.com/file/e8803j54knyj23p/Nord_Auto_Rotate.rar/file)

            üì∫ **Tutorial no YouTube:** [Assista ao v√≠deo](https://www.youtube.com/watch?v=E4fbZUVMMEI)

            üìû **Suporte via Telegram:** [Acesse o grupo de suporte](https://t.me/+dpGofyMuGUszY2Rh)"

            ### 2. **Solu√ß√£o de Problemas**

            #### Problemas Comuns e Solu√ß√µes:

            - **Erro: N√£o conecta ao servidor**  
            üîé *Causa:* Falha de conex√£o com o NordVPN.  
            ‚úÖ *Solu√ß√£o:* Verifique se o NordVPN est√° ativo e com assinatura v√°lida.

            - **Erro: Licen√ßa inv√°lida**  
            üîé *Causa:* Serial incorreto ou vencido.  
            ‚úÖ *Solu√ß√£o:* Confirme o serial usado e informe que a licen√ßa tem validade de 30 dias. Oriente sobre a renova√ß√£o.

            - **Erro: Aplicativo n√£o inicia**  
            üîé *Causa:* Requisitos do sistema n√£o atendidos.  
            ‚úÖ *Solu√ß√£o:* Verifique se o Python 3.x est√° instalado e se o NordVPN est√° atualizado.

            ### 3. **Informa√ß√µes T√©cnicas**

            - **Licenciamento:**
            - A licen√ßa permite instala√ß√£o em at√© **2 dispositivos**.
            - O serial √© gerado automaticamente ap√≥s a compra e vinculado ao hardware (CPU e disco).
            - A licen√ßa tem validade de **30 dias**.

            - **Funcionalidades Principais:**
            - Rota√ß√£o autom√°tica de servidores NordVPN.
            - Configura√ß√£o de intervalos personalizados.
            - Gera√ß√£o de relat√≥rios de servidores utilizados.

            ### 4. **Passo a Passo para Uso do Aplicativo**

            1. **Instala√ß√£o:**
            - Baixe o aplicativo pelo link fornecido.
            - Execute o instalador e siga as instru√ß√µes.

            2. **Ativa√ß√£o:**
            - Insira o serial enviado ap√≥s a compra.
            - O aplicativo validar√° o serial com o hardware.

            3. **Iniciar Rota√ß√£o:**
            - Clique no bot√£o "Iniciar" para ativar a rota√ß√£o autom√°tica.
            
            4. **Parar Rota√ß√£o:**
            - Clique em "Parar" quando desejar encerrar a rota√ß√£o.

            5. **Visualizar Relat√≥rio:**
            - Acesse o hist√≥rico de servidores clicando em "Visualizar Relat√≥rio".

            ### 5. **Termos de Servi√ßo**

            - A licen√ßa √© exclusiva e n√£o pode ser compartilhada.
            - O uso indevido resultar√° no cancelamento da licen√ßa.
            - A garantia de suporte t√©cnico √© limitada a 12 horas ap√≥s a compra.

            ### 6. **Contatos de Suporte**

            - üìß **Email:** blocodesense@gmail.com  
            - üìû **Telegram:** [Grupo de Suporte](https://t.me/+dpGofyMuGUszY2Rh)  
            - üïò **Hor√°rio de Atendimento:** Segunda a Sexta, das 09h √†s 18h

            ## Procedimento em Caso de Reclama√ß√µes

            1. **Ouvir atentamente o problema.**
            2. **Coletar informa√ß√µes relevantes:** Serial, sistema operacional e descri√ß√£o do erro.
            3. **Sugerir solu√ß√µes conforme o erro identificado.**
            4. **Encaminhar para n√≠vel avan√ßado, se necess√°rio.**

            ## Atualiza√ß√µes

            - Atualiza√ß√µes menores a cada 3 meses.
            - Licen√ßa renov√°vel ap√≥s 30 dias de uso.

            ### **Mensagem de Encerramento**
            "Estamos √† disposi√ß√£o para ajud√°-lo a aproveitar ao m√°ximo o **NordVPN Auto Rotate**. Qualquer d√∫vida, entre em contato pelo nosso suporte. Boa navega√ß√£o!"

        """
        self.tools = [{"type": "file_search"},{"type": "code_interpreter"}]
        self.adxitional_instructions_Alfred = ""
        self.key = "AI_Alfred"
        self.nameassistantAlfred = "Alfred"
        self.model_selectAlfred = "gpt-4o-mini-2024-07-18"
        self.Upload_1_file_in_thread = None
        self.Upload_1_file_in_message = None
        self.Upload_1_image_for_vision_in_thread = None
        self.codeinterpreter = None
        self.vectorstore = None
        self.vectorstore_in_agent = None
        self.typejson = False
    
    def Alfred(self, mensagem, user_id):
        print(user_id)
        
        AlfredID, instructionsassistant, nameassistant, model_select = AutenticateAgent.create_or_auth_AI(
            self.appfb, self.client, self.key, self.instruction, self.nameassistantAlfred, self.model_selectAlfred, self.tools
        )

        response, total_tokens, prompt_tokens, completion_tokens = ResponseAgent.ResponseAgent_message_with_assistants(
                                                                mensagem=mensagem,
                                                                agent_id=AlfredID, 
                                                                key=self.key,
                                                                user_id=user_id,
                                                                app1=self.appfb,
                                                                client=self.client,
                                                                tools=self.tools,
                                                                model_select=self.model_selectAlfred,
                                                                aditional_instructions=self.adxitional_instructions_Alfred,
                                                                AgentDestilation=True
                                                                )
        print(total_tokens)
                    
        return response, total_tokens, prompt_tokens, completion_tokens


    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text('Ol√°! Como posso ajudar voc√™ hoje?')

    async def reply_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_message = update.message.text
        user_id = update.message.from_user.id

        Alfred_response, total_tokens, prompt_tokens, completion_tokens = self.Alfred(user_message, user_id)
        await update.message.reply_text(Alfred_response)


    def main(self):
        app = Application.builder().token(self.TOKEN).build()
        app.add_handler(CommandHandler("start", self.start))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.reply_message))

        app.run_polling()

