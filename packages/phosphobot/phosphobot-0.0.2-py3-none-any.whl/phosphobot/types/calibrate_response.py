# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .status import Status
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class CalibrateResponse(UniversalBaseModel):
    """
    Response from the calibration endpoint.
    """

    status: Status = pydantic.Field()
    """
    Status of the calibration. Ends when status is success or error.
    """

    message: str
    current_step: int
    total_nb_steps: int

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
