[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "fastapi-rf"
dynamic = []
description = "A batteries-included REST framework for FastAPI."
authors = [
    { name = "godd0t", email = "lirrishala@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Framework :: Pydantic",
    "License :: OSI Approved :: MIT License",
    "Topic :: Internet",
    "Topic :: Software Development",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "fastapi[standard]>=0.115.6",
]
requires-python = ">=3.12"
readme = "README.md"
version = "0.1.0a3"

[project.license]
text = "MIT"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "ruff>=0.9.1",
    "coverage[toml]>=7.6.10",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --log-cli-level=INFO"
testpaths = [
    "tests",
]
pythonpath = [
    ".",
    "mock_project",
]
python_files = "tests.py test_*.py *_tests.py"

[tool.ruff]
output-format = "concise"
src = [
    "src",
]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "I",
    "E",
]
ignore = [
    "W191",
    "E111",
    "E114",
    "E117",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "E501",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 88

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = "frf/__init__.py"

[tool.pdm.scripts]
lint = "ruff check frf tests mock_project"
format = "ruff check frf tests mock_project --fix"
coverage_run = "coverage run -m pytest"
coverage_report = "coverage report -m --skip-covered"

[tool.pdm.scripts.test]
composite = [
    "coverage_run",
    "coverage_report",
]
